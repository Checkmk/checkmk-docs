// -*- coding: utf-8 -*-
// IGNORE lt
include::global_attr.adoc[]
= Metriken an InfluxDB und Graphite senden
:revdate: 2024-01-22
:title: Metriken senden an InfluxDB und Graphite - über die InfluxDB v2 API oder das Carbon-Plaintext-Protokoll
:description: Die in {CMK} gespeicherten Metriken können an die Metrikdatenbanken von InfluxDB und Graphite gesendet und dort weiterverarbeitet werden.

{related-start}
xref:graphing#[Messwerte und Graphing]
xref:grafana#[{CMK} in Grafana integrieren]
{related-end}


[#intro]
== Einleitung

xref:glossar#metric[Metriken] sind die mess- und berechenbare Werte zu Hosts und Services und werden von {CMK} intern in den sogenannten xref:graphing#rrds[Round-Robin-Datenbanken (RRDs)] gespeichert.
Diese Metriken werden durch das eingebaute Graphing-System aufbereitet und in der {CMK}-Weboberfläche an vielen Stellen visualisiert, zum Beispiel als Perf-O-Meter in der Liste der Services oder als Graphen, die Sie sich aus der Service-Liste mit dem icon:icon_pnp[alt="Symbol zur Anzeige von Graphen."] Graphsymbol einblenden lassen können.
Die Oberfläche für die Visualisierung der Metriken basiert auf HTML5 und ist in den kommerziellen Editionen und {RE} identisch.
Im Artikel zum xref:graphing#[Graphing] erfahren Sie darüber alle Details.

{cee-only}
Parallel zum in {CMK} eingebauten Graphing können Sie zusätzlich auch externe Metrikdatenbanken anbinden und die Metriken an link:https://influxdata.com/[InfluxDB^] oder link:https://graphiteapp.org/[Graphite^] senden.
Da die Weiterleitung vom {CMK} Micro Core (CMC) durchgeführt wird, ist diese Funktion nur in den kommerziellen Editionen verfügbar.

In diesem Artikel erfahren Sie, wie Sie in {CMK} die Weiterleitung der Metriken zur InfluxDB und zu Graphite einrichten.


[#influxdb]
== Metriken an InfluxDB senden

[{image-left}]
image::influxdb-logo.png[alt="InfluxDB-Logo.",width=120]
InfluxDB ist ein Open Source Datenbankmanagementsystem (DBMS) für Zeitreihen (_time series_) -- und in diesem Segment zurzeit das populärste.
InfluxDB bietet beginnend mit ihrer V2.0 eine neue, einheitliche API -- die InfluxDB v2 API -- mit der unter anderem Metrikdaten in die Datenbank geschrieben werden können.
{CMK} nutzt die InfluxDB v2 API und bietet Ihnen die Möglichkeit, die Metriken aus {CMK} nicht nur an die InfluxDB zu senden, sondern auch passend in die bestehende Struktur der InfluxDB abzulegen.
Durch die Nutzung der API wird einerseits die Konfiguration für das Versenden der Metrikdaten vereinfacht und andererseits ist {CMK} vorbereitet für zukünftige Erweiterungen.

*Wichtig:* Die in diesem Kapitel beschriebene Konfiguration gilt nur für die Anbindung einer InfluxDB V2.0 (oder neuer), da erst ab dieser Version die InfluxDB v2 API verfügbar ist.
Falls Sie eine InfluxDB +<=+ V1.8 einsetzen, dann richten Sie diese stattdessen so wie im xref:graphite[Kapitel] zur Graphite-Anbindung beschrieben ein, da InfluxDB bis zur V1.8 das Carbon-Protokoll von link:https://docs.influxdata.com/influxdb/v1.8/supported_protocols/graphite/[Graphite^] unterstützt.


[#influxdb_collect]
=== Informationen sammeln

Bevor Sie mit der Einrichtung in {CMK} loslegen, sollten Sie sich die folgenden Informationen besorgen über das InfluxDB-Zielsystem, das Sie mit {CMK} verbinden möchten:

[cols="30,~",options="header"]
|===
|Parameter |Bedeutung
|Host-Name |Name (oder IP-Adresse) des InfluxDB-Servers.
Die Eingabe des DNS-Namens ist vor allem dann wichtig, wenn die Verbindung über HTTPS verschlüsselt wird, da Zertifikate fast nie für IP-Adressen ausgestellt werden.
|Port-Nummer |Nummer des TCP Ports, über den der InfluxDB-Server erreichbar ist.
Der Standard-Port ist `8086`.
Beim Start mit `influxd` kann mit der Option `--http-bind-address` auch ein anderer Port angegeben werden.
|Protokoll |`HTTP` für unverschlüsselte Verbindungen oder `HTTPS`, um die Verbindung abzusichern.
|Organisation |Bei InfluxDB ist die Organisation (_organization_) der Arbeitsbereich für mehrere Benutzer.
Die initiale Organisation wird bei der InfluxDB-Einrichtung abgefragt.
Weitere Organisationen können manuell über die InfluxDB-GUI angelegt werden.
|Buckets |InfluxDB speichert die Zeitreihendaten in Behältern, sogenannten _Buckets._
Für jeden Bucket wird insbesondere ein Aufbewahrungszeitraum (_retention period_) festgelegt.
InfluxDB löscht automatisch alle Datenpunkte, die älter sind als dieser Zeitraum. +
Ein Bucket gehört stets zu einer Organisation.
Der initiale Bucket wird zusammen mit der Organisation bei der InfluxDB-Einrichtung festgelegt.
Weitere Buckets können manuell erstellt werden.
|Token |Die Kommunikation zwischen {CMK} und InfluxDB erfolgt über die InfluxDB v2 API.
InfluxDB verwendet API-Tokens zur Autorisierung von Anfragen via API.
Ein API-Token gehört zu einem bestimmten Benutzer und identifiziert die InfluxDB-Berechtigungen innerhalb der Organisation des Benutzers.
Tokens werden über die InfluxDB-GUI angelegt, entweder mit vollem Lese- und Schreibzugriff auf alle Ressourcen in einer Organisation (_All Access Token_) oder mit ausgewählten Zugriffsrechten für bestimmte Buckets in einer Organisation (_Read/Write Token_).
Ein Token kann in die Zwischenablage kopiert werden, was das spätere Einfügen während der {CMK}-Konfiguration erleichtert.
Der Token für die Verbindung zum {CMK}-Server sollte natürlich Lese- und Schreibrechte für den Bucket haben, der in {CMK} konfiguriert wird. 
|===

Genaueres dazu finden Sie in der link:https://docs.influxdata.com/influxdb/latest/[InfluxDB-Dokumentation^].

Mit diesen Informationen zur Hand, erfolgt die Konfiguration in {CMK} mit nur zwei unkomplizierten Schritten.


[#influxdb_connection]
=== {CMK} mit InfluxDB verbinden

Öffnen Sie das xref:user_interface#setup_menu[Setup-Menü] und schalten Sie den xref:intro_gui#show_less_more[Show-more-Modus] an -- denn nur dann wird der Menüeintrag [.guihint]#Setup > Exporter > InfluxDB connections# angezeigt.
Wählen Sie diesen aus, um sich die Liste der existierenden InfluxDB-Verbindungen anzeigen zu lassen.
Da Sie hier wahrscheinlich noch nichts konfiguriert haben, wird die Liste leer sein.

Eine Verbindung ist die Voraussetzung für das Versenden der Daten.
Ohne xref:influxdb_metrics[Regel zur Auswahl der Metrikinformationen] werden aber keine Daten versendet.

Erstellen Sie also zuerst eine neue Verbindung mit icon:icon_new[alt="Symbol zum Erstellen einer neuen Verbindung."] [.guihint]#Add connection#:

.ID, Titel und Instanzauswahl reichen für die allgemeinen Eigenschaften 
image::metrics_exporter_influxdb_new_connection_general_properties.png[alt="Die allgemeinen Eigenschaften einer InfluxDB-Verbindung."]

In den [.guihint]#General properties# bestimmen Sie, wie gewohnt, die interne ID und den Titel für die Verbindung.

Falls mit der aktuellen Instanz weitere Instanzen verbunden sind, wie das beim xref:distributed_monitoring#[verteilten Monitoring] der Fall ist, können Sie unter [guihint]#Site restriction# die Verbindung auf bestimmte Instanzen einschränken.
Dazu verschieben Sie zuerst den Eintrag [.guihint]#All sites# in die linke Spalte und schieben anschließend die Instanzen, die Metriken erhalten sollen, aus der linken in die rechte Spalte [guihint]#Selected#. In der linken Spalte verbleiben dann die Instanzen, die auf Metriken verzichten müssen.

Dann geht es weiter im nächsten Kasten mit den [.guihint]#InfluxDB Connection properties:#

.Die InfluxDB-spezifischen Eigenschaften festlegen
image::metrics_exporter_influxdb_new_connection_influxdb_properties.png[alt="Die InfluxDB-spezifischen Eigenschaften der Verbindung."]

Geben Sie hier den ersten Satz der Parameterwerte ein, die Sie im xref:influxdb_collect[vorherigen Abschnitt] zusammengestellt haben.

Sichern Sie die Verbindung mit [.guihint]#Save# und Sie kehren zurück zur Liste der Verbindungen:

[#influxdb_connection_list]
.Aktiv, inaktiv, mit oder ohne Regel? Die Verbindungsliste zeigt es
image::metrics_exporter_influxdb_connection_list.png[alt="Liste der InfluxDB-Verbindungen."]

In der Verbindungsliste zeigt die Spalte [.guihint]#Enabled# wichtige Informationen zum Zustand der Verbindung.
Wundern Sie sich nicht, dass die Liste im obigen Bild drei Einträge enthält:
Um alle Symbole in Aktion sehen zu können, haben wir die Liste um zwei weitere Verbindungen erweitert.
Aus der ersten Spalte in [.guihint]#Enabled# können Sie ablesen, ob die Verbindung icon:icon_perm_yes[alt="Symbol zur Anzeige einer aktiven Verbindung."] aktiviert oder icon:icon_perm_no[alt="Symbol zur Anzeige einer deaktivierten Verbindung."] deaktiviert ist.
In der zweiten Spalte sehen Sie, ob es für die Verbindung bereits eine Regel icon:button_rulesets_enabled[alt="Knopf zur Anzeige der Liste mit den Regeln im Regelsatz."] gibt oder icon:button_rulesets_disabled[alt="Knopf zur Erstellung einer neuen Regel."] nicht.

Daten werden über eine Verbindung erst dann gesendet, wenn diese mit einer Regel zur Auswahl der Metrikinformationen verknüpft ist.
Diese Regel heißt [guihint]#Send metrics to InfluxDB#.
Die Regelsymbole sind Knöpfe und bieten eine Abkürzung zur Regelerstellung:
Bei einer Verbindung mit Regel klicken Sie auf icon:button_rulesets_enabled[alt="Knopf zur Anzeige der Liste mit den Regeln im Regelsatz."], um die Übersichtsseite des Regelsatzes zu öffnen, in der hervorgehoben ist, welche Regel für die Verbindung greift oder greifen würde.
Bei einer Verbindung ohne Regel führt ein Klick auf icon:button_rulesets_disabled[alt="Knopf zur Erstellung einer neuen Regel."] direkt in die Seite zur Erstellung der Regel.

Was in dieser Regel festgelegt werden kann, beschreiben wir im folgenden Kapitel genau.


[#influxdb_metrics]
=== Metrikinformationen auswählen

Welche Daten an den InfluxDB-Server gesendet und wo sie abgelegt werden, bestimmen Sie in {CMK} mit einer Regel.

Den Regelsatz [guihint]#Send metrics to InfluxDB# finden Sie unter [guihint]#Setup > Services > Service monitoring rules#, noch schneller mit der xref:user_interface#search_setup[Suche im Setup-Menü] und am schnellsten per Klick in der xref:influxdb_connection_list[Verbindungsliste]:

.Die Auswahl der Metrikinformationen erfolgt per Regel
image::metrics_exporter_influxdb_send_metrics_rule.png[alt="Regel zur Auswahl der Metrikinformationen zum Versand über die InfluxDB-Verbindung."]

Im Kasten [guihint]#Send metrics to InfluxDB# wählen Sie zuerst die im xref:influxdb_connection[vorherigen Abschnitt] erstellte Verbindung aus und legen dann fest, wo die Daten auf dem InfluxDB-Server abgelegt werden.
Hier geben Sie den zweiten Satz der xref:influxdb_collect[gesammelten Informationen] über den InfluxDB-Server ein.
Mit [guihint]#Organization# entscheiden Sie, welche Benutzer die Daten erhalten, und mit [guihint]#Bucket#, wie lange die Metriken vorgehalten werden.
Eine Mehrfachauswahl ist nicht möglich, d.h. Sie können die Metriken z.B. nicht an mehrere Buckets unterschiedlicher Organisationen schicken.

Im folgenden wählen Sie die Metrikdaten aus, die von {CMK} an den InfluxDB-Server gesendet werden.
[guihint]#Metrics of service# ist standardmäßig bereits ausgewählt und aktiviert den Metrikversand.
Durch Ankreuzen der Checkbox [guihint]#Service state# wird der xref:monitoring_basics#services[Service-Zustand] als eigene Metrik gesendet.

Nach Aktivierung von [guihint]#Additional values per metric# können Sie den Metriken eine Reihe von Metadaten mitgeben, die der Darstellung dienen, z.B. den Zustand des zugehörigen Services ([guihint]#State of service#) und die Schwellwerte ([guihint]#Thresholds#).
Beachten Sie dabei, dass [guihint]#Unit# derzeit nur bei Metriken aus xref:glossar#active_check[aktiven Checks] funktioniert, wenn diese das unterstützen. 
Der Grund liegt darin, dass nur aktive Checks optional die Einheit mitliefern und der CMC auf andere keinen Zugriff hat.

In der letzten Liste [guihint]#Tags to use# werden den Metriken Metadaten wie xref:glossar#host_tag[Host-Merkmale] oder xref:glossar#label[Labels] hinzugefügt, die hauptsächlich der Filterung dienen und dafür optimiert sind.
Die standardmäßig ausgewählten [guihint]#Host name# und [guihint]#Service name# sind dabei Pflichteinträge, die nicht abgewählt werden können.

In InfluxDB werden die [guihint]#Additional values per metric# als _fields_ und die [guihint]#Tags to use# als _tags_ gespeichert.

Zum Schluss xref:glossar#activate_changes[aktivieren Sie die Änderungen] für die Erstellung der Verbindung und der Regel.
Bei Problemen mit dem Metrikversand finden Sie weiter unten xref:diagnosis[Informationen zur Fehlerdiagnose.]


[#influxdb_display]
=== Metriken in InfluxDB anzeigen

Wenn die Metriken von {CMK} beim InfluxDB-Server angekommen sind, können sie in der InfluxDB-GUI angezeigt werden.
Das folgende Bild zeigt als Beispiel den Graphen für die Metrik `total_used`, die den verwendeten Arbeitsspeicher anzeigt:

.In der InfluxDB-GUI gibt es unterhalb des Graphen Listen zur Auswahl und zum Filtern
image::metrics_exporter_influxdb_show_metric.png[alt="Anzeige der Metrik zum verwendeten Arbeitsspeicher in der InfluxDB-GUI."]

*Hinweis:* Diese Metrik finden Sie in {CMK} beim Service [guihint]#Memory# unter dem Metriknamen [guihint]#Total used memory.#


[#graphite]
== Metriken an Graphite senden

[{image-left}]
image::graphite-logo.png[alt="Graphite-Logo.",width=120]
Auch Graphite ist ein bekanntes Open Source DBMS für Zeitreihen, um Metriken zu speichern, abzurufen, weiterzugeben und zu visualisieren.
Graphite besteht aus dem Carbon Daemon, der auf die Daten wartet und diese in einer Datenbank speichert, aus der sie mit der Graphite Webanwendung aufbereitet und als Graphen angezeigt werden.
Mit {CMK} können Sie die Metriken im Plaintext-Protokoll an den Carbon Daemon von Graphite weiterleiten, der auf Port 2003 auf Daten dieses Protokolls wartet.
Im Plaintext-Protokoll ist ein Datensatz sehr einfach aufgebaut im Format `<Metrikpfad> <Wert> <Zeitstempel>`, wobei `<Metrikpfad>` ein durch Punkte getrennter eindeutiger Bezeichner ist.

Anders als bei der xref:influxdb[InfluxDB-Verbindung] werden standardmäßig *alle* Metrikdaten gesendet sobald eine Graphite-Verbindung aktiviert ist.
Falls Sie dies nicht wünschen, sollten Sie *vor* der Aktivierung der Verbindung die Metriken per Regel auswählen und dann Regeln und Verbindung zusammen aktivieren.


[#graphite_metrics]
=== Metrikinformationen auswählen

In {CMK} finden Sie unter [guihint]#Setup > Services > Service monitoring rules# die beiden Regelsätze [guihint]#Send host metrics to Graphite# und [guihint]#Send service metrics to Graphite.#
Die Konfiguration erfolgt in gleicher Weise für Host- und für Service-Metriken.
Wir zeigen hier die Konfiguration für Service-Metriken.
Die Host-Metriken richten Sie dann analog ein.

Mit der Regel [guihint]#Send service metrics to Graphite# können Sie einerseits die Werte auswählen, die mit den Metriken mitgeliefert werden sollen:

.Auch bei Graphite erfolgt die Auswahl der Metrikinformationen per Regel
image::metrics_exporter_graphite_rule.png[alt="Regel zur Auswahl der Service-Metriken zum Versand über die Graphite-Verbindung."]

Zum anderen können Sie in der Box [guihint]#Conditions# den Versand auf bestimmte Hosts und Services einschränken.
Da ohne einschränkende Regel alle Daten gesendet werden, empfiehlt es sich zuerst eine Regel zu erstellen, die den Versand global abschaltet, indem Sie alle Checkboxen im obigen Bild abwählen.
Erstellen Sie anschließend eine spezifische Regel mit den gewünschten Metrikinformationen für die Hosts und Services, deren Metriken an den Graphite-Server übermittelt werden sollen.
Ordnen Sie die spezifische vor der globalen Regel an:

.Durch die Reihenfolge der beiden Regeln werden nur Service-Metriken des Hosts `myhost` versendet
image::metrics_exporter_graphite_rule_list.png[alt="Liste der Regeln für den Versand über die Graphite-Verbindung."]


[#graphite_connection]
=== {CMK} mit Graphite verbinden

Die Verbindung zum Graphite-Server richten Sie ein unter [.guihint]#Setup > General > Global Settings > Monitoring Core > Send metrics to Graphite#. Klicken Sie dort auf [.guihint]#Add new Graphite connection:#

.Die Graphite-Verbindung wird in den [.guihint]#Global Settings# erstellt
image::metrics_exporter_graphite_new_connection.png[alt="Die Eigenschaften einer Graphite-Verbindung."]

Neben den offensichtlichen Angaben zum Graphite-Server (Name und Port-Nummer des Carbon-Plaintext-Protokolls) können Sie mit [.guihint]#Optional variable prefix# einen Präfix konfigurieren, der jedem Host-Namen vorangestellt wird, um z.B. eindeutige Namen zu erzwingen.
{CMK} setzt den Metrikpfad für das Plaintext-Protokoll auf `<Host>.<Service>.<Metrik>`.

Die xref:glossar#activate_changes[Aktivierung der Änderungen] für die Regeln und die Verbindung schließt die Konfiguration für Graphite ab.


[#graphite_display]
=== Metriken in Graphite anzeigen

Auch in der Graphite-GUI können Sie sich die von {CMK} empfangenen Metriken ansehen.
Das folgende Bild zeigt den Graphen für die Metrik `total_used`, den wir bereits xref:influxdb_display[oben] als Beispiel in der InfluxDB-GUI gezeigt haben: 

.In der Graphite-GUI erfolgt die Auswahl in einem Navigationsbereich links vom Graphen
image::metrics_exporter_graphite_show_metric.png[alt="Anzeige der Metrik zum verwendeten Arbeitsspeicher in der Graphite-GUI."]


[#diagnosis]
== Fehlerdiagnose

Sollten die Metriken nicht dort ankommen, wo Sie sie erwarten, finden Sie Diagnoseinformationen in Ihrer Instanz in der Datei `~/var/log/cmc.log` -- der xref:cmc_files#[Log-Datei des {CMK} Micro Core.]

Folgendes Beispiel zeigt die Meldungen, falls das in {CMK} konfigurierte Bucket auf dem InfluxDB-Server nicht existiert:

.~/var/log/cmc.log
[{file}]
----
2022-01-10 11:41:35 [5] [influxdb https://myinfluxdb.example.com:8086] Successfully initiated connection
2022-01-10 11:41:36 [5] [influxdb https://myinfluxdb.example.com:8086] Successfully connected
2022-01-10 11:41:36 [3] [influxdb https://myinfluxdb.example.com:8086] POST [404] {"code":"not found","message":"bucket \"my_bucket\" not found"}
2022-01-10 11:41:36 [5] [influxdb https://myinfluxdb.example.com:8086] Closing connection
----

Folgendes Beispiel zeigt die Meldungen im Fall, dass eine Verbindung zum Graphite-Server nicht klappt:

.~/var/log/cmc.log
[{file}]
----
2021-12-15 17:33:33 [5] [carbon 10.0.0.5:2003] Successfully initiated connection
2021-12-15 17:33:33 [4] [carbon 10.0.0.5:2003] Connection failed: Connection refused
2021-12-15 17:33:33 [5] [carbon 10.0.0.5:2003] Closing connection
----

Der {CMK} Micro Core versucht in solchen Situationen von sich aus immer wieder, die Verbindung aufzubauen. 

*Wichtig:* Metriken, die während einer Zeit anfallen, zu der keine Verbindung zum Zielsystem besteht, werden aus Performance-Gründen _nicht_ zwischengespeichert, sondern gehen verloren (bzw. sind dann nur in den RRDs von {CMK} verfügbar).

*Hinweis:* Falls Ihnen die Log-Meldungen nicht aussagekräftig genug sind, können Sie die Standardwerte zum Log Level ändern unter [.guihint]#Setup > General > Global Settings > Monitoring Core > Logging of the core#. Hier finden Sie Einträge für das Logging der InfluxDB ([.guihint]#InfluxDB processing#) und für Graphite ([.guihint]#Carbon connections#).
