// -*- coding: utf-8 -*-
// IGNORE [ ]
include::global_attr.adoc[]
= {CMK}-Versionen
:revdate: 2024-04-29
:title: {CMK}-Versionen
:description: Die {CMK} Softwareentwicklung führt von Tagesversionen, Innovation-Versionen, Beta-Versionen bis hin zur stabilen Version - für die es aktiven und passiven Support gibt.

{related-start}
link:update.html[Updates und Upgrades]
link:intro_setup.html[{CMK} aufsetzen]
link:cmc.html[Der {CMK} Micro Core]
{related-end}

// MFS: Sollen wir Innovationsversionen nicht komplett rausnehmen?
// 2.1 und 2.2 gab es keine, für 2.3 ist es auch eher fraglich.
// Natürlich müsste man da wieder die Grafik anpassen...


[#development_cycle]
== Der Entwicklungszyklus

Ein Zyklus von einer stabilen {CMK}-Version bis zur nächsten umfasst circa ein bis eineinhalb Jahre.
Es beginnt damit, dass nach dem Release der Vorgängerversion (z.B. `{v22}`) mit dem Entwickeln der neuen Features für die kommende Version (z.B. `{v23}`) begonnen wird.
Die Entwicklung findet auf dem Hauptentwicklungszweig (_Master_) statt.

Optional wird nach etwa 6–9 Monaten die erste Innovation-Version erstellt,
welche in einem eigenen Zweig für eine kurze Zeit gepflegt wird.

Nach zwei bis vier Innovation-Versionen beginnt die Beta-Phase.
Auch für diese wird ein Zweig abgespalten, auf dem die stabile Version finalisiert und später gepflegt wird.
Auf dem Hauptzweig beginnt dann schon wieder die Vorbereitung für den nächsten Zyklus.

Sowohl auf dem Hauptentwicklungszweig als auch auf dem stabilen Zweig gibt es tägliche Zwischenversionen (_Daily Builds_),
welche Ihnen einen schnellen Zugriff auf neue Features oder Bug Fixes bieten.
Grafisch dargestellt sieht das Ganze zum Beispiel für die Version {v16} etwa so aus:

// TK: Die Grafik braucht einen Versions-Update (evtl. ohne Innovation-Versionen)
image::development_cycle.png[width=550]


[#versions]
== Versionen

Eine jede xref:glossar#edition[{CMK}-Edition] gibt es in verschiedenen Versionen, d.h. in unterschiedlichen Stadien der Entwicklung.
Auch hier im Handbuch begegnen Sie daher verschiedenen Varianten des Begriffs _Version._


[#daily]
=== Tagesversionen vom Master (Daily Builds)

// MFS: Ist hier die Umbenennung nach 'main' angedacht?
{cee-only}
Auf dem Entwicklungszweig (in der Versionskontrolle Git heißt dieser „master“) wird die Zukunft von {CMK} entwickelt.
Damit Entwickler, Anwender und andere Interessierte sich jederzeit ein Bild vom aktuellen Stand der Software machen können,
wird jeden Tag zwischen 0:00 und 6:00 Uhr mitteleuropäischer Zeit ein Installationspaket für alle unterstützten Linux-Distributionen gebaut.
Diese Pakete werden auch _Daily Builds_, _Git Snapshots_ oder _Entwicklerversionen_ genannt und stellen den exakten Stand der Softwareentwicklung zu Beginn eines jeden Tages dar.

Die Tagesversionen sind natürlich oft fehlerbehaftet, da sie quasi einen mehr oder weniger „zufälligen“ Stand der Software enthalten.
Im Gegensatz zu Innovation- und stabilen Versionen eröffnen Tagesversionen auch keinen neuen Entwicklungszweig und können daher auch nicht von uns gepatcht werden.
Die einzige Möglichkeit einen Fehler in einer Tagesversion zu beheben, ist das Einspielen einer neueren Tagesversion, bei der dieser Fehler behoben ist.
Leider kann dabei natürlich wieder ein neuer, anderer Fehler hineingeraten.
Daher sollten Sie Tagesversionen niemals produktiv einsetzen.

Trotzdem sind die Tagesversionen sehr nützlich, wenn Sie neue Features zeitnah ausprobieren möchten.
Dies gilt insbesondere dann, wenn Sie diese Features selbst bei uns in Auftrag gegeben haben!

Unser Support hilft Ihnen auch gerne bei Schwierigkeiten mit Tagesversionen, allerdings mit folgenden Einschränkungen:

* Wir können Ihnen nur helfen, wenn Ihre Tagesversion nicht älter als eine Woche ist.
* Wir können keine Patches erstellen.


[#innovation]
=== Innovation-Versionen

{cee-only}
Innovation-Versionen sind ein besonderes Feature der kommerziellen Editionen und geben Ihnen die Möglichkeit,
neue interessante Features der Software bereits lange vor der nächsten stabilen Version zu nutzen.
Sie stellen einen Kompromiss zwischen Stabilität und Innovation dar.
Innovation-Versionen sind jedoch optional und werden nicht in Vorbereitung auf jede stabile Version bereitgestellt.

Die erste Innovation-Version gibt es in der Regel ein halbes Jahr nach dem letzten stabilen Release.
In einer Abfolge von 1-2 Monaten erscheinen 3-4 Releases, welche jeweils mit dem Kürzel `i` nummeriert sind (z.B. `{v20}i2`).
Ähnlich wie stabile Versionen werden auch diese aktiv gepflegt -- allerdings nur eine begrenzte Zeit von 1-2 Monaten,
an die sich eine ebenso lange passive Pflege anschließt.
Patches von `i`-Versionen erkennen Sie an einem `p`-Suffix, z.B. `{v20}i2p1`.


[#beta]
=== Beta-Versionen

Das Release einer neuen stabilen Version (z.B. `{v23}`) beginnt mit einer Beta-Phase.
Um alle Fehler zu beheben und die Software tauglich für die Produktion zu machen, wird dazu ein _stabiler Zweig_ abgespalten, welcher nur noch Fehlerbehebungen enthält.
Auf dem Hauptzweig geht parallel die Entwicklung der Features für die Zukunft weiter.

Auf dem stabilen Zweig wird nun eine Serie von Beta-Versionen mit einem kleinen `b` im Namen veröffentlicht -- (z.B. `{v23}b1`, `{v23}b2`, usw.).
Das geschieht etwa alle zwei Wochen  --  solange bis keine gravierenden Fehler mehr bekannt sind.


[#stable]
=== Stabile Version

Nach der Beta-Phase gibt es den feierlichen Augenblick, an dem die neue stabile Version, auch *Major-Version* genannt, erscheint (z.B. `{v23}`).
Da die Software nun von mehr Benutzern eingesetzt wird, werden jetzt in der Regel noch Probleme bekannt, die während der Beta-Phase nicht aufgefallen sind.
Diese werden in einer Reihe von *Patch-Versionen*, manchmal auch als Patch Releases bezeichnet, behoben (`{v23}p1`, `{v23}p2`, usw.).
Die Abstände dieser Patch-Versionen sind anfangs recht kurz (etwa eine Woche) und später viel länger (einige Monate).

Zusätzlich zum Master werden auch auf dem stabilen Zweig Tagesversionen veröffentlicht, die Ihnen Bug Fixes zeitnah bereitstellen.
Diese tragen den Namen des Zweigs plus das Datum, z.B. `{v23}-2024.03.30`.

Sie können diese Versionen produktiv einsetzen, solange Sie Folgendes beachten:

* Setzen Sie eine Tagesversion auf dem stabilen Zweig nur dann ein, wenn sie ein für Sie gravierendes Problem behebt.
* Aktualisieren Sie auf die nächste Patch-Version, sobald diese erscheint.


[#suffix]
== Editionen und ihre Suffixe

Wenn Sie die Version einer {CMK}-Instanz mit dem Befehl `omd version` anzeigen, sehen Sie noch einen Suffix, der aus Sicht von OMD Teil der Versionsnummer ist:

[{shell}]
----
{c-omd} omd version
OMD - Open Monitoring Distribution Version 2.3.0p1.#cre#
----

Dieses Suffix dient dazu, gleiche Versionen von verschiedenen link:https://checkmk.com/de/produkt/editionen[{CMK}-Editionen^] zu unterscheiden.
Auf diese Art ist es kein Problem, z.B. gleichzeitig die Version `{v23}` von {CRE} und {CSE} installiert zu haben.
Dies ist manchmal sogar sehr sinnvoll -- nämlich wenn Sie von {RE} auf eine der kommerziellen Editionen umsteigen möchten.
Folgende Suffixe sind möglich:

[cols="10,~"]
|===
|`.cre` |{CRE}
|`.cee` |{CSE}
|`.cce` |{CCE}
|`.cme` |{CME}
|===


[#maintenance]
== Pflege und Support

Eine {CMK}-Version (z.B. `{v23}`) erhält mindestens 24 Monate lang Fehler- und Sicherheitskorrekturen.
Dieser Zeitraum wird in die aktive und die passive Phase unterteilt.


[#active_maintenance]
=== Aktive Pflege

Die stabile Version wird aktiv gepflegt, d.h. mit Patch-Versionen versorgt.
Wie lange das passiert, hängt davon ab, wann die Folgeversion freigegeben wird und dadurch zur neuen stabilen Version wird.
Die Regel ab der Version {v16} lautet:
Die aktive Pflege endet für eine Version 6 Monate nach Freigabe der neuen Version.
Da für die stabile Version die Folgeversion noch nicht freigegeben ist, dient der geplante Freigabetermin zur Festlegung des Produkt-Lifecycle. 

Damit werden für 6 Monate zwei Versionen parallel mit Patch-Versionen bedient:
die stabile Version (_stable_) und die Vorgängerversion (_oldstable_).
Eine Übersicht über den xref:cmk_versions#support_periods[Produkt-Lifecycle] finden Sie am Ende dieses Artikels.


[#passive_maintenance]
=== Passive Pflege

Nach Ablauf der aktiven Pflege geht der stabile Zweig in die passive Pflege über, die in der Regel ein weiteres Jahr dauert.

Während dieser Zeit beheben wir Fehler nur noch im Auftrag von Kunden, die uns diese im Rahmen eines Support-Vertrags in Form von Support Tickets melden.

Bug Fixes während der passiven Pflege lösen weitere Patch-Versionen aus, von denen dann natürlich auch diejenigen Anwender profitieren, welche keinen Support-Vertrag haben.


[#support_periods]
=== Produkt-Lifecycle der stabilen Versionen

{cee-only}
Ob Ihre Version also noch gepflegt wird und wann sie ihr Lebensende (_End of Life_) erreicht hat oder erreichen wird, können Sie der nachfolgenden Tabelle entnehmen:

[cols="15,~,~,~",options="header"]
|===
|Version |Freigabedatum |Ende der aktiven Pflege |Ende der passiven Pflege
|{v23} |29.04.2024 |6 Monate nach Freigabe von {v24}footnote:stable_version[Aktuell ist noch kein Freigabedatum festgesetzt.] |29.10.2026
|{v22} |23.05.2023 |29.10.2024 |23.11.2025
|{v21} |24.05.2022 |23.11.2023 |24.11.2024
|===

Für ältere Versionen empfehlen wir dringend ein Update.
