// -*- coding: utf-8 -*-
// NO-LUNR
// IGNORE sekündlich echtzeitüberwachte echtzeitüberwachten nachgehalten cpu Pre
include::global_attr.adoc[]
= Echtzeit-Checks (Real-time Checks)
:title: Echtzeit-Checks (Real-time Checks)
:description: Mit Echtzeit-Checks (Real-time Checks) ruft {CMK} die Metriken bestimmter Services sekündlich ab. Lesen Sie hier, wie Sie Echtzeit-Checks einrichten.

{related-start}
{related-end}

[#intro]
== Einleitung

== Echtzeit-Check für einen Host einrichten

Um Echtzeitdaten über geeignete Services eines Hosts abzufragen, sind Änderungen in Ihrer {CMK}-Instanz und in der Agentenkonfiguration auf dem Host nötig.

=== Instanz vorbereiten

==== Verarbeitung von Echtzeit-Checks aktivieren

Aktivieren Sie die Verarbeitung von Echtzeit-Checks unter [.guihint]#Setup > Global Settings > Monitoring core > Enable handling of real-time checks#.
Hier stellen Sie auch den xref:ports#cmk_incoming_host_outgoing[UDP-Port] ein, auf dem die Instanz nach Echtzeit-Daten lauschen soll.
Als Default steht diese Einstellung auf Port 6559.

image::real_time_checks_enable.png[]

==== Agentenregel anlegen

Bisher haben Sie dem Monitoring-Kern zwar erlaubt, Echtzeit-Checks zu verarbeiten, aber Sie haben noch nicht konfiguriert, _wie_ Ihr Agent die Echtzeit-Checks ausführen soll.
Dieser Schritt folgt jetzt.

Unter [.guihint]#Setup > Agents > Windows, Linux, Solaris, AIX > Agent rules# finden Sie die Regel [.guihint]#Real-time Checks#.
Indem Sie eine solche Regel anlegen, spezifizieren Sie, welche Services von welchen Host mit Echtzeit-Checks überwacht werden sollen.

Beispielhaft wird im Folgenden eine Echtzeit-Überwachung für die Services [.guihint]#CPU load# und [.guihint]#Memory# für einen Host namens `myhost` eingerichtet.
Dieser Host ist ein Linux-Client und wird bereits mit dem xref:agent_linux#install[Linux-Agenten] überwacht.

// ES: Screenshot ganzer Kasten "Real-time checks"

Unter [.guihint]#Encryption# wählen Sie aus, ob die UDP-Pakete mit den Echtzeit-Daten verschlüsselt werden sollen.
Falls ja, wählen Sie [.guihint]#Pre-shared secret# und geben Sie das gewünschte _secret_ an.
Eine Nutzung von Echtzeit-Checks ohne Verschlüsselung ist ebenfalls möglich.
Hierfür wählen Sie [.guihint]#No encryption (send plaintext)#.

Zuletzt wählen Sie noch unter [.guihint]#Sections to send# diejenigen Sektionen aus, die in den Echtzeit-Check-Paketen gesendet werden sollen.
Die Sektion [.guihint]#mem# enthält Informationen über den Service [.guihint]#Memory#.
Die Sektion [.guihint]#cpu# enthält Informationen über den Service [.guihint]#CPU load#.
// ES: Info zur Sektion winperf_processor ergänzen

Im Bereich [.guihint]#Conditions# für die Regel können Sie noch angeben, für welche Hosts die Regel greifen soll.
Für das Beispiel wurde der explizite Host `myhost` angegeben.

==== Round-Robin-Datenbanken konfigurieren

Die schönsten Echtzeit-Daten sind nichts wert, wenn sie nicht dargestellt und nachgehalten werden können.
Das zu ermöglichen, ist der nächste Schritt.

Das normale Check-Intervall für Services, die mit dem aktiven {CMK}-Check überwacht werden, ist auf eine Minute eingestellt.
Die xref:graphing#rrds[Round-Robin-Datenbanken (RRDs)] für überwachte Services haben standardmäßig ebenfalls eine Auflösung von einer Minute.

Legen Sie unter [.guihint]#Setup > Services > Service monitoring rules > Configuration of RRD databases of services# eine neue Regel an.
Die Aufgabe dieser Regel ist es, für genau diejenigen Services, die im Echtzeit-Check enthalten sein sollen, Metrikwerte in sekundengenauer Auflösung abzuspeichern.

[TIP]
====
Es ist äußerst wichtig, dass Sie in der Regel genau spezifizieren, für welche Hosts und Services sie gelten soll!
RRDs, die pro Sekunde einen Wert aufnehmen, brauchen mehr Speicherplatz als die Standard-RRDs, die nur einen Wert pro Minute speichern.
====

// ES: Screenshot von der fertig ausgefüllten Regel einfügen

Geben Sie unter [.guihint]#Step (precision)# 1 ein, damit die sekündlich eintreffenden Daten zu echtzeitüberwachten Services abgespeichert werden können.
// Wählen Sie dann als Verdichtungsphasen unter [.guihint]#RRA configuration# beispielsweise die folgenden Werte:

// ES: siehe Werk #8350

=== Agentenkonfiguration auf dem Host

==== Konfiguration mit der Agent Bakery

==== Manuelle Konfiguration

=== Echtzeit-Daten anzeigen

==== Graphen

==== Benachrichtigungen für echtzeitüberwachte Services

== Plugins in Echtzeit-Checks ausführen