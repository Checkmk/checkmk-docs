// -*- coding: utf-8 -*-
// IGNORE
include::global_attr.adoc[]
= Den Linux-Agenten unprivilegiert ausführen
:revdate: draft
:title: Den Linux-Agenten unprivilegiert ausführen
:description: {CMK} 2.4.0 bringt neue Mechanismen für die Installation und Ausführung von Linux- und Unix-Agenten mit geringeren Privilegien.

{related-start}
xref:agent_linux#[Linux überwachen]
xref:agent_linux_legacy#[Linux überwachen im Legacy-Modus]
// xref:agent_deployment#[Automatische Agenten-Updates]
{related-end}

// TK: Warum liegt der Artikel (noch?) in onprem?


[#intro]
== Einleitung

// TK: unprivilegierte Ausführung vorgezogen (weil wichtiger)
ifdef::onprem[]
{cee-only}
In den kommerziellen Editionen von {CMK}
endif::[]
ifdef::saas[]
In {CE}
endif::[]
können Sie Agentenpakete so konfigurieren, dass diese auf dem Host von einem unprivilegierten Benutzer, das heißt nicht von `root`, ausgeführt werden.
Vollständig nutzbar ist dieses Feature zunächst für Linux-Agenten, die als DEB- oder RPM-Paket installiert werden.
// TK: Ich hab jetzt aus "Linux-Agenten mit Agent Controller" > nur "Linux-Agenten" gemacht, siehe auch meinen nächsten Kommantar.

Voraussetzung für die unprivilegierte Ausführung ist es, das Agentenpaket innerhalb eines einzigen Verzeichnisses zu installieren.
Die Option zur Auswahl eines Installationsverzeichnisses ist aber nicht nur für Linux, sondern auch für Solaris und AIX verfügbar.
// Bei Linux ohne Agent Controller, Solaris und AIX ist die Installation in den konfigurierten Pfad umgesetzt, Aufrufkonfiguration und Eigentümerschaft müssen jedoch aus technischen Gründen manuell umgesetzt werden.
// TK: Versteh ich nach wie vor nicht (auch wenn's auskommentiert ist): Auch der Linux-Agent im TGZ file hat doch den Agent Controller - oder etwa nicht?

// TK: Ich denke, ein Hinweis darauf, dass das nicht mit dem Automatischen Agenten-Update funktioniert, gehört auch in die Einleitung.
// TK: Allerdings weiss ich nicht, was "das" eigentlich ist: Was funktioniert *nicht* mit dem Agent Updater? Installationsverzeichnis? Run agent as root? Run agent as non-root? Oder alles?

Die beiden verwandten Regelsätze [guihint]#Installation paths for agent files (Linux, UNIX)# und [guihint]#Run agent as non-root user (Linux)# sind abgekündigt.
Es ist geplant, beide in der {CMK}-Version {v25} zu entfernen.

include::include_technical_preview.asciidoc[]


[#bakery]
== Konfiguration der Agentenpakete

Die Konfiguration der Agentenpakete erfolgt in der xref:glossar#agent_bakery[Agentenbäckerei,] die Sie über [guihint]#Setup > Agents > Windows, Linux, Solaris, AIX# öffnen.
Klicken Sie den Knopf [guihint]#Agent rules.#
Unter [guihint]#Agent rules > Linux/Unix agent options# finden Sie die Regel [guihint]#Customize agent package (Linux).#


[#install_dir]
=== Installationsverzeichnis festlegen

Bei [guihint]#Directory for Checkmk agent# können Sie das Installationsverzeichnis festlegen:

image::agent_single_folder_rule_installation_directory.png[alt="Die Option zur Auswahl des Installationsverzeichnisses."]

In diesem Verzeichnis werden alle Dateien des Agentenpakets installiert, statt in Verzeichnissen wie `/etc/`, `/usr/lib/` oder `/var/lib/`.
// TK: Hier gelesen und eingefügt: https://docs.google.com/document/d/1YRzsxyu1SRoiDpwqv9F34w6xZo867-SVJ7sx9Xw_wgE/edit?tab=t.0#heading=h.5v0dkic0cjy2
Wählen Sie aus Sicherheitsgründen _kein_ Verzeichnis in einem Home-Verzeichnis eines Benutzers.

Für Solaris und AIX sind Sie damit fertig.
Für Linux können Sie zusätzlich noch die unprivilegierte Ausführung festlegen.


[#user]
=== Unprivilegierte Ausführung konfigurieren

Für den Linux-Agenten stehen Ihnen nach Auswahl von [guihint]#Customize user# zwei grundlegende Optionen zur Verfügung:

image::agent_single_folder_rule_user.png[alt="Die Optionen zur Auswahl der unprivilegierten Ausführung."]

Die Standardwerte [guihint]#Run agent as root, set agent controller user# und `cmk-agent` als Benutzer legen genau das Verhalten fest, was ohnehin das Standardverhalten des xref:wato_monitoringagents#agents[{CMK}-Agenten] für Linux ist, auch ohne Konfiguration dieser Regel:
Der Agent Controller wird unter `cmk-agent` ausgeführt und das Agentenskript unter `root`.
Neu ist jetzt aber die Möglichkeit, einen anderen Benutzer als `cmk-agent` festzulegen.

Die zweite Option ist [guihint]#Run agent as non-root, set agent user.#
Damit legen Sie fest, dass zusätzlich zum Agent Controller auch das Agentenskript unter dem festgelegten Benutzer ausgeführt wird -- beide also unprivilegiert.

// Passen Sie hier – falls nötig – das Installationsverzeichnis an und bestimmen Sie zunächst, ob Agent Controller und Agent mit Rechten eines unprivilegierten Nutzers ausgeführt werden soll oder wie bei Vanilla-Agentenpaketen der Agent Controller unprivilegiert, das Agentenskript jedoch mit Root-Rechten ausgeführt werden soll.
Zudem können Sie Benutzer ([guihint]#UID#) und Gruppe ([guihint]#GID#) numerische IDs zuweisen.
Beachten Sie hier die Konventionen Ihrer Linux-Distribution und möglicherweise vorhandene Limitationen verwendeter Dateisysteme.

Mit der letzten Option bestimmen Sie, ob der in dieser Regel gewählte Benutzer erstellt werden soll, falls er nicht existiert.


[#localconfig]
== Unprivilegierte Ausführung auf dem Host konfigurieren
// TK: Verständnisfrage: Hier gehts doch nur um die "komplett unprivilegierte" Ausführung, also AC und Askript als non-root, oder?
// TK: Wenn dem so ist, dann sollten wir weiter oben nach "beide also unprivilegiert" hinzufügen, dass es genau diese Auswahl ist, die wir als unprivilegiert bezeichnen (und die dann die Zusatzkonfig auf dem Host erforderlich macht).

Falls Sie Agentenpakete für unprivilegierte Ausführung konfiguriert haben, kann zusätzliche Konfiguration auf dem Linux-Host erforderlich werden, auf dem das Paket installiert wird.
// TK: Linux- hinzugefügt

Aus Sicherheitsgründen bietet ein für unprivilegierte Ausführung konfigurierter Agent einen etwas geringeren Funktionsumfang als ein mit Root-Rechten ausgeführter Agent.
Um die fehlende Funktionalität verfügbar zu machen, müssen Sie als administrierende Person Methoden finden,
die sowohl effektiv sind, als auch mit den Sicherheitsrichtlinien Ihres Unternehmens und den Konventionen der eingesetzten Linux-Distribution vereinbar sind.
// TK: "oder des genutzten Unix-Derivats" gelöscht, es geht doch nur um Linux.

[TIP]
====
Beachten Sie, dass es weder für die mit den Agentenpaketen ausgelieferte Konfiguration, noch die in diesem Kapitel auf dem Host vorgenommene Konfiguration _die eine_ beste Lösung gibt.
Alle möglichen und sinnvollen Lösungen orientieren sich an verwendeten Distributionen, Richtlinien in Ihrem Unternehmen und Wartbarkeit.
====


[#sudo]
=== Konfiguration von `sudo`

Für das Agentenskript haben wir eine Wrapper-Funktion hinzugefügt, welche Befehlen, die in der Regel erhöhte Privilegien benötigen, link:https://xkcd.com/149/[`sudo`^] voranstellt.
// TK: Sehr schön der Link! Obwohl ich es erst nicht gerafft habe und 2x hinschauen musste ;-)
Betroffen davon sind in {CMK} {v24} `mdadm` (zum Auslesen des Zustandes verschiedener Software-RAIDs und verschlüsselter Laufwerke), sowie `mailq` (zum Auslesen der E-Mail-Warteschlange des Postfix-MTA).

Beispielkonfigurationen für `sudo` finden Sie im xref:install_dir[Installationsverzeichnis des Agenten] im Unterordner `default/package/agent/checkmk_agent_sudoers_template`.
Sie können benötigte Zeilen in Ihre `/etc/sudoers` übertragen oder die gesamte Datei nach `/etc/sudoers.d` kopieren (nicht empfohlen).
// TK: Die Frage kommt jetzt hoffentlich nicht überraschend: Warum nicht empfohlen?
Passen Sie die Einträge entsprechend an.
Beispielsweise sind in einigen Fällen keine Superuser-Rechte für das Auslesen der E-Mail-Warteschlange notwendig und es kann die Benutzerkennung verwendet werden, unter welcher der MTA ausgeführt wird.
// TK: Superuser-Rechte oder Root-Rechte oder egal? Wenn egal, dann Root-Rechte.


[#plugins]
=== Agentenplugins
// MFS: TBD, die Regel "Plug-ins, local checks and MRPE for non-root users" wird bis zum Release auf "sudo" umgebaut sein und damit mit dem unpriv. Agenten funktionieren. Erfordert Änderungen hier.
// An der Ausführung von Agentenplugins haben wir bislang keine Änderungen vorgenommen.
// Dies bedeutet, dass Sie selbst sicherstellen müssen, dass Plugins benötigte Daten liefern.

Für die Ausführung von Agentenplugins empfehlen wir, über Dateiberechtigungen und Gruppenzuordnungen Zugriff auf benötigte Informationen sicherstellen.
Die folgende Liste zeigt mögliche Methoden:

* Fügen Sie den Benutzer, unter dessen Kennung das Agentenskript ausgeführt wird, einer Gruppe hinzu, die im Monitoring benötigte Daten auslesen kann.

* Ändern Sie Zugriffsrechte oder Gruppenzuordnung von Gerätedateien (beispielsweise über `udev`-Regeln) so, dass der unprivilegierte Benutzer zugreifen kann.

* Führen Sie gegebenenfalls Plugins per Cronjob aus und leiten Sie deren Ausgabe in eine xref:spool_directory#[Spool-Datei] um.

// TK: 1. Hmm, das folgende passt aber leider eigentlich nicht hier rein, weil Du hier auf dem Host bist und eine Regel ins vorherige Kapitel gehört.
// TK: 2. Ich würd es auskommentieren, solange es nicht funktioniert.
Führen diese Maßnahmen nicht zum gewünschten Ziel, steht darüber hinaus die Möglichkeit zur Verfügung, mit der Regel [guihint]#Plug-ins, local checks and MRPE for non-root users# die ausführenden Benutzer für bestimmte Verzeichnisse individuell zu bestimmen.
Diese Regel erzeugt eine Agentenkonfiguration, die automatisch installiert wird, und eine weitere Konfiguration für `sudo`, die Sie (wie xref:sudo[oben] beschrieben) ausbringen müssen.
// TK: Ist das ohne Beispiel verständlich? Rhetorische Frage ;-) Ich wüßte nicht, wo das hinpurzelt, was ich irgendwo anders ausbringen muss.

[IMPORTANT]
====
Bei Erstellung des letzten Absatzes am 14. April 2025 war die beschriebene Funktionalität noch nicht vollständig vorhanden.
====

[TIP]
====
Vorgenommene Anpassungen an mit {CMK} ausgelieferten Agentenplugins können Sie uns gerne zukommen lassen.
Dies kann über einen link:https://github.com/Checkmk/checkmk/blob/master/CONTRIBUTING.md[Pull-Request^] geschehen, ein Support-Ticket oder Hinweise im link:https://forum.checkmk.com/[Checkmk-Forum^].
Best Practises für Plugin-Entwickler werden wir dem Artikel zur xref:devel_check_plugins#[Entwicklung agentenbasierter Check-Plugins] nach und nach hinzufügen.
====
// TK: Versteh ich nicht: Wir bitten die Community uns zu helfen, die von {CMK} ausgelieferten Agentenplugins anzupassen?


[#updater]
=== Automatische Agenten-Updates

[IMPORTANT]
====
Die gegenwärtige Implementierung des xref:agent_deployment#[Agent Updaters] als Agentenplugin ist nicht mit der unprivilegierten Ausführung kompatibel.
Wir arbeiten an notwendigen Änderungen an der Architektur.
Greifen Sie derweil auf andere Softwareverteilungslösungen zurück.
====


[#legacy]
== Legacy Deployment
// TK: Legacy Deployment mag ich nicht, da weiß ich nicht, was gemeint ist. Wie wärs mit: Einrichtung ohne Linux-Installationspaket

Auch ohne Agent Controller und wenn die Installation nicht über ein Debian- oder RPM-Paket erfolgen kann, ist die Ausführung unprivilegiert möglich.
// TK: Besser so?
// Die unprivilegierte Ausführung ist auch möglich ohne Agent Controller oder wenn die Installation nicht über ein DEB- oder RPM-Paket erfolgen kann.


[#foldermanual]
=== Installation ohne Paketmanager
// TK: Geht's hier nicht nur um den Linux-TGZ-Paket? Dann sollte das auch klarer rüberkommen, etwa so: Installation des Linux-Agenten ohne Paketmanager

Bei Verwendung der im `.tar.gz`-Format bereitgestellten TGZ-Pakete müssen Sie nach der Installation selbst sicherstellen, dass Berechtigungen korrekt gesetzt sind.
Orientieren Sie sich dabei an einer Musterinstallation, die Sie unter einem Linux mit Paketmanagement durchgeführt haben.

[TIP]
====
Diesen Abschnitt werden wir nach und nach um weitere Hinweise ergänzen.
====
// TK: Nötig? Das sind so Versprechen, die wir dann auch noch halten müssen.


[#noagentctl]
=== Aufruf ohne Agent Controller

Kann oder soll der Agent Controller nicht verwendet werden, sind sowohl der unverschlüsselte Aufruf per `(x)inetd` oder der verschlüsselte über Secure Shell möglich.
Gegenüber dem Aufruf mit Root-Rechten sind moderate Modifikationen erforderlich.


[#xinetd]
==== Xinetd

Die im Installationsverzeichnis unter `default/package/config/xinetd-service-template.cfg` mitgelieferte und bei deaktiviertem oder inkompatiblen Agent Controller aktivierte Konfigurationsdatei für `xinetd` enthält bereits den per Agentenregel definierten unprivilegierten Benutzer.
// TK: Besser so?
// Bei deaktiviertem oder inkompatiblen Agent Controller wird im Installationsverzeichnis unter `default/package/config/xinetd-service-template.cfg` eine aktivierte Konfigurationsdatei für `xinetd` mitgeliefert.
// Diese Datei enthält bereits den per Agentenregel festgelegten unprivilegierten Benutzer.
Falls Sie einen anderen Internet Superserver nutzen (beispielsweise den OpenBSD `inetd`), erstellen Sie die Konfiguration entsprechend dessen Dokumentation.
Beispiele zeigt der Artikel xref:agent_linux_legacy#otherinetd[Linux überwachen im Legacy-Modus.]


[#ssh]
==== Secure Shell

Auch der Aufruf via SSH entspricht dem im Artikel xref:agent_linux_legacy#ssh[Linux überwachen im Legacy-Modus] beschriebenen Vorgehen.
Lediglich der Pfad zur verwendeten Konfigurationsdatei `.ssh/authorized_keys` und der verwendete Benutzername sind auf den bei Ihnen genutzten unprivilegierten Nutzer anzupassen.

// MFS: ACHTUNG!
// MFS:
// MFS: Dieser Kommentar dient als Marker, um Merge-Konflikte zu vermeiden
// MFS: Bitte drin lassen, so lange mehrere Autoren oberhalb und unterhalb dieses Markers arbeiten.
// MFS: Vielen Dank für die Rücksichtnahme!
// MFS:
// MFS: ACHTUNG!

// [#files]
// == Dateien und Verzeichnisse
