// -*- coding: utf-8 -*-
// IGNORE 
// NONASCII 
include::global_attr.adoc[]
= Persönliche Benachrichtigungsregeln
:revdate: 2025-04-29
:title: Persönliche Benachrichtigungsregeln
:description: Benachrichtigungen können nicht nur zentral konfiguriert, sondern auch individuell angepaßt werden. Erfahren Sie hier mehr zu den persönliche Benachrichtigungen.

{related-start}
xref:notifications#[Grundlagen zu Benachrichtigungen]
xref:notification_rules#[Benachrichtigungen per Regel einrichten]
xref:basics_ackn#[Quittierung von Problemen]
xref:commands#[Kommandos]
xref:wato_user#[Benutzer, Zuständigkeiten, Berechtigungen]
{related-end}



[#intro]
== Einleitung

Eine nützliche Besonderheit des Benachrichtigungssystems von {CMK} ist, dass Benutzer sich auch ohne Administratorrechte ihre Benachrichtigungen anpassen können.
Benutzer können:

* Benachrichtigungen hinzufügen, die sie sonst nicht bekommen würden („abonnieren“),
* Benachrichtigungen löschen, die sie sonst bekommen würden (falls nicht gesperrt),
* Parameter von Benachrichtigungen anpassen und
* ihre Benachrichtigungen vorübergehend ganz abschalten.


== Benachrichtigungen per persönlicher Regeln steuern

Der Einstieg aus Sicht des Benutzers ist das xref:user_interface#user_menu[User-Menü,] und dort der Eintrag [.guihint]#Notification rules.#
Auf der Seite [.guihint]#Your personal notification rules# kann mit [.guihint]#Add rule# eine neue Regel erzeugt werden.

Persönliche Benachrichtigungsregeln sind inhaltlich ähnlich wie die xref:notification_rules#[globalen Benachrichtigungsregeln] aufgebaut -- mit einem Unterschied: Sie enthalten keine Kontaktauswahl.
Als Kontakt ist automatisch der Benutzer selbst gewählt.
Dadurch kann ein Benutzer nur für sich selbst Benachrichtigungen hinzufügen oder löschen.

Löschen kann der Benutzer Benachrichtigungen allerdings nur dann, wenn in der (globalen) Regel, die sie erzeugt, die Option [.guihint]#Allow users to deactivate this notification# aktiviert ist:

image::personal_notifications_rule_settings.png[alt="Regel mit der Option zur Aktivierung der Abschaltung von Benachrichtigungen durch Benutzer."]

In der Reihenfolge der Benachrichtigungsregeln kommen die persönlichen Regeln immer _nach_ den globalen Regeln und können so die bisher erzeugte Benachrichtigungstabelle anpassen.
Bis auf das gerade beschriebene Sperren der Löschung gelten also die globalen Regeln immer als Standardeinstellung, die vom Benutzer angepasst werden kann.

[TIP]
====
Änderungen an Benachrichtigungsregeln erfordern *keine* Aktivierung der Änderungen.
Sie sind sofort wirksam.
====


[#notification_rule]
=== Aufbau der Benachrichtigungsregeln

Im Folgenden stellen wir den generellen Aufbau der persönlichen Benachrichtigungsregeln mit den Festlegungen zu allgemeinen Eigenschaften, Benachrichtigungsmethoden und Bedingungen vor.


==== Allgemeine Eigenschaften

Wie bei allen Regeln in {CMK}, können Sie hier eine Beschreibung und einen Kommentar für die Regel hinterlegen sowie die Regel temporär abschalten.

image::personal_notifications_rule_part1.png[alt="Allgemeine Eigenschaften einer persönlichen Benachrichtigungsregel."]


[#notification_method]
==== Benachrichtigungsmethode

Die Benachrichtigungsmethode legt fest, auf welchem technischen Weg benachrichtigt werden soll, z. B. mit HTML-E-Mail.

image::notifications_rule_part2.png[alt="Regel mit den Optionen zur Benachrichtigungsmethode."]

Jede Methode ist durch ein Skript realisiert.
ifdef::onprem[]
{CMK} liefert bereits xref:notifications#includedscripts[einige Skripte] mit aus.
Sie können aber auch recht einfach xref:notifications#scripts[eigene Skripte] in beliebigen Programmiersprachen schreiben, um speziellere Anforderungen umzusetzen, z. B. die Weiterleitung der Benachrichtigungen an ein eigenes Ticketsystem.
endif::[]
ifdef::saas[]
{CMK} liefert xref:notifications#scripts[einige Skripte] mit aus.
endif::[]

Eine Methode kann Parameter anbieten.
Zum Beispiel erlauben es die Methoden für ASCII- und HTML-E-Mails, die Absenderadresse (`From:`) explizit zu setzen.

Bevor Sie hier Einstellungen in der Benachrichtigungsregel machen, sollten Sie wissen, dass Sie Parameter für die Benachrichtigungsmethoden auch in den xref:wato_rules#[Regeln] für Hosts und Services setzen können:
Unter [.guihint]#Setup > Services > Service monitoring rules# finden Sie im Abschnitt [.guihint]#Notifications# für jede Benachrichtigungsmethode einen Regelsatz, mit dem Sie die gleichen Einstellungen festlegen können -- und das wie gewohnt abhängig von Host oder Service.

Parameterdefinitionen in Benachrichtigungsregeln dienen dazu, für Einzelfälle von diesen Einstellungen abzuweichen.
So können Sie z. B. global einen bestimmten Betreff für Ihre E-Mail festlegen, aber in einer einzelnen Benachrichtigungsregel einen alternativen Betreff definieren.

Anstelle von Parametern können Sie auch [.guihint]#Cancel previous notifications# auswählen.
Dann werden Benachrichtigungen in Form dieser Methode aus früheren Regeln wieder verworfen.
Näheres dazu finden Sie beim Thema xref:cancel[Löschen von Benachrichtigungen.]

[TIP]
====
Für viele Benachrichtigungsmethoden zur Weiterleitung an andere Systeme erhalten Sie genauere Informationen in separaten Artikeln.
Die Liste der Artikel finden Sie im Kapitel zu den 
ifdef::onprem[]
xref:notifications#includedscripts[Benachrichtigungsskripten.]
endif::[]
ifdef::saas[]
xref:notifications#scripts[Benachrichtigungsskripten.]
endif::[]
Falls Sie als Benachrichtigungsmethode
ifdef::onprem[]
ein Ticketsystem, einen Messenger oder eine Event Engine
endif::[]
ifdef::saas[]
ein Ticketsystem oder einen Messenger
endif::[]
nutzen, beachten Sie zusätzlich die Hinweise zu diesen xref:notification_rules#ticketsystem[Sonderfällen.]
====


[#rule_conditions]
==== Bedingungen

Bedingungen legen fest, wann eine Regel Anwendung findet. 
Für das Verständnis ist es wichtig, sich daran zu erinnern, dass der Ausgangspunkt immer ein Monitoring-Ereignis von einem ganz konkreten Host oder Service ist.

Die Bedingungen befassen sich dabei

* mit den statischen Eigenschaften des Objekts, z. B. ob der Service-Name den Text `/tmp` enthält oder ein Host sich in einer bestimmten xref:glossar#host_group[Host-Gruppe] befindet,
* mit dem aktuellen Zustand bzw. der Änderung des Zustands, z. B. ob der Service gerade von {OK} nach {CRIT} gewechselt hat,
* oder mit ganz anderen Dingen, z. B. ob die xref:glossar#time_period[Zeitperiode] „Arbeitszeit“ gerade aktiv ist.

Bei der Festlegung der Bedingungen gibt es zwei wichtige Punkte zu beachten:

. Solange keine Bedingung definiert ist, greift die Regel bei *jedem* Monitoring-Ereignis.
. Sobald Sie auch nur eine einzige Bedingung auswählen, greift die Regel nur, wenn auch wirklich *alle* ausgewählten Bedingungen erfüllt sind. 
Alle ausgewählten Bedingungen werden mit UND verknüpft. 
Von dieser wichtigen Regel gibt es nur eine Ausnahme, auf die wir später eingehen werden und die wir jetzt nicht betrachten.

Das heißt, dass Sie sehr genau darauf achten sollten, ob die von Ihnen gewählten Bedingungen gleichzeitig erfüllt sein können, damit eine Benachrichtigung auch für den gewünschten Fall ausgelöst wird. 

Nehmen wir an, eine Benachrichtigung soll erfolgen, wenn ein Monitoring-Ereignis für einen Service, der mit dem Namen `NTP` beginnt, auf einem Host im Ordner [.guihint]#Main# eintritt:

image::notifications_rule_part4.png[alt="Regel mit den Bedingungen für die Erstellung einer Benachrichtigung."]

Nehmen wir weiter an, dass diese Bedingung nun *erweitert* wird, indem auch alle Zustandsänderungen eines Hosts auf den Zustand {DOWN} eine Benachrichtigung auslösen sollen:

image::notifications_rule_part4_match_host_types.png[alt="Regel mit erweiterten Bedingungen für die Erstellung einer Benachrichtigung."]

Das Ergebnis dieser Benachrichtigungsregel mit den drei Einzelbedingungen ist, dass *nie* eine Benachrichtigung erfolgen wird, weil kein Monitoring-Ereignis die Zustandsänderung eines Hosts *und* den Service-Namen mit `NTP` enthalten wird.

Den folgenden Hinweis geben wir in diesem Handbuch immer wieder.
Im Zusammenhang mit der Konfiguration Ihrer Benachrichtigungen ist er allerdings nochmal besonders hervorzuheben:
Blenden Sie die xref:user_interface#inline_help[Inline-Hilfe] mit [.guihint]#Help > Show inline help# ein, um Einzelheiten über die Auswirkungen der verschiedenen Bedingungen zu erfahren.
Der folgende Auszug aus der Inline-Hilfe zur Option [.guihint]#Match services# verdeutlicht das Verhalten sehr gut:
„_Anmerkung: Auf Host-Benachrichtigungen trifft diese Regel nie zu, wenn diese Option benutzt wird._“


[discrete]
==== Die Ausnahme von der UND-Verknüpfung

Nur wenn ein Monitoring-Ereignis alle konfigurierten Bedingungen erfüllt, kommt die Benachrichtigungsregel zur Anwendung. 
Wie bereits erwähnt, gibt es zu dieser allgemeinen Regel eine wichtige Ausnahme: für die Bedingungen [.guihint]#Match host event type# und [.guihint]#Match service event type#:

image::notifications_rule_part4_match_event_types.png[alt="Die Bedingungen 'Match host event type' und 'Match service event type'."]

Falls Sie *nur* [.guihint]#Match host event type# auswählen, wird die Regel auf kein einziges Service-Ereignis matchen.
Analog gilt dies auch für die Auswahl von [.guihint]#Match service event type# und Host-Ereignisse.
Falls Sie aber *beide* Bedingungen aktivieren, matcht die Regel, sobald der Ereignistyp in *einer* der beiden Checkbox-Listen aktiviert ist.
In diesem Ausnahmefall werden diese beiden Bedingungen also nicht wie üblich mit einem logischen UND verknüpft, sondern mit einem ODER.
So können Sie bequemer Host- und Service-Benachrichtigungen mit einer einzelnen Regel verwalten.

Ein Hinweis noch zu den Bedingungen [.guihint]#Match contacts# und [.guihint]#Match contact groups#:

image::notifications_rule_part4_contacts.png[alt="Die Bedingungen 'Match contacts' und 'Match contact groups'."]

Hier wird als Bedingung geprüft, ob der Host/Service, um den es geht, eine bestimmte Kontaktzuordnung hat. 
Damit kann man Dinge umsetzen wie „Host-bezogene Benachrichtigungen in der Kontaktgruppe Linux sollen nie per SMS versendet werden“.
Das hat nichts mit der oben beschriebenen Kontaktauswahl zu tun.


[#cancel]
=== Benachrichtigungen durch Regeln löschen

Wie bei der Auswahl der Benachrichtigungsmethode bereits erwähnt, finden Sie dort auch die Auswahlmöglichkeit [.guihint]#Cancel previous notifications#.
Um die Funktionsweise einer solchen Regel zu verstehen, stellen Sie sich am besten die Benachrichtigungen bildlich vor.

Nehmen wir an, einige Regeln zu einem konkreten Monitoring-Ereignis wurden bereits abgearbeitet.
Dadurch wurden für unseren Benutzer zwei Benachrichtigungen erzeugt, eine per E-Mail und eine per SMS.

Nun kommt die nächste Regel mit der Methode [.guihint]#SMS# und der Auswahl [.guihint]#Cancel previous notifications#.
Als Ergebnis dieser Regel wird die SMS-Benachrichtigung an unseren Benutzer entfernt.
Es wird also nur noch eine E-Mail erzeugt.

Sollte eine spätere Regel wieder eine SMS-Benachrichtigung definieren, so hätte diese Vorrang und die SMS-Benachrichtigung würde wieder in die Benachrichtigungen aufgenommen.

Zusammengefasst:

* Regeln können gezielt Benachrichtigungen unterdrücken (löschen).
* Löschregeln müssen nach den Regeln kommen, welche Benachrichtigungen erzeugen.
* Eine Löschregel hebt nicht eine frühere Regel auf, sondern Benachrichtigungen, die aus (möglicherweise verschiedenen) früheren Regeln stammen.
* Spätere Regeln können vormals gelöschte Benachrichtigungen wieder hinzufügen.


[#sync_html]
=== Synchrone Zustellung für HTML-E-Mails

Die nachvollziehbare Zustellung per SMTP können Sie für die Benachrichtigungsmethode HTML-E-Mail auswählen und konfigurieren, indem Sie den Smarthost (mit Name und Portnummer) und die Zugangsdaten und Verschlüsselungsmethode eintragen:

image::notifications_enable_sync_smtp.png[alt="Benachrichtigungsregel mit den Optionen für die synchrone E-Mail-Zustellung."]

// TK: Ich hab den folgenden ausführlichen Teil durch einen Verweis ersetzt und auskommentiert
// TK: Der auskommentierte Teil hat nichts mehr mit der Einrichtung zu tun und erwähnt Komponenten wie Global settings und Log-Dateien, auf die ein normaler Benutzer idR wohl keinen Zugriff hat

Im Artikel zu den xref:notification_rules#sync_html[globalen Benachrichtigungsregeln] finden Sie genauere Informationen darüber, wie die erfolgreiche bzw. fehlgeschlagenen Zustellung in der {CMK}-Benutzeroberfläche und in Log-Dateien nachvollzogen werden kann.

////
In der Historie des betroffenen Services können Sie dann die Zustellung genau nachverfolgen.
Hier ist ein Beispiel, in dem ein Service testweise von Hand auf {CRIT} gesetzt wurde.
Folgende Abbildung zeigt die Benachrichtigungen für diesen Service, die Sie sich auf der Seite mit den Service-Details mit [.guihint]#Service > Service Notifications# anzeigen lassen können:

image::notifications_smtp_success.png[alt="Liste aufgelaufener Benachrichtigungen für eine erfolgreiche E-Mail-Zustellung."]

Sie sehen dabei die vier Einzelschritte in der zeitlichen Abfolge von unten nach oben, wie wir sie bereits in den Grundlagen zu Benachrichtigungen im Kapitel zur xref:notifications#history[Benachrichtigungshistorie] vorgestellt haben.
Der wichtige Unterschied ist, dass jetzt im icon:icon_alert_notify_result[] obersten Eintrag zu sehen ist, dass die E-Mail erfolgreich an den Smarthost übergeben wurde und dessen Antwort `success` ist.

Die einzelnen Schritte können Sie auch in der Log-Datei `notify.log` nachverfolgen.
Die folgenden Zeilen gehören zum letzten Schritt und enthalten die Antwort des SMTP-Servers:

.~/var/log/notify.log
[{file}]
----
2021-08-26 10:02:22,016 [20] [cmk.base.notify] Got spool file d3b417a5 (mysrv;CPU load) for local delivery via mail
2021-08-26 10:02:22,017 [20] [cmk.base.notify]      executing /omd/sites/mysite/share/check_mk/notifications/mail
2021-08-26 10:02:29,538 [20] [cmk.base.notify]      Output: success 250 - b'2.0.0 Ok: queued as 1BE667EE7D6'
----

Die Message-ID `1BE667EE7D6` wird in der Log-Datei des Smarthosts auftauchen.
Dort können Sie dann im Zweifel recherchieren, wo die E-Mail verblieben ist.
Auf jeden Fall können Sie so belegen, das und wann Sie von {CMK} korrekt übergeben wurde.

Wiederholen wir den Test von oben, jedoch diesmal mit einem falsch konfigurierten Passwort für die SMTP-Übergabe an den Smarthost.
Hier sieht man im Klartext die SMTP-Fehlermeldung `Error: authentication failed` vom Smarthost:

image::notifications_smtp_failed.png[alt="Liste aufgelaufener Benachrichtigungen für eine gescheiterte E-Mail-Zustellung."]

Doch was tun bei gescheiterten Benachrichtigungen?
Diese wiederum per E-Mail zu benachrichtigen ist augenscheinlich keine gute Lösung.
Anstelle dessen zeigt {CMK} einen deutlichen Warnhinweis mit roter Hintergrundfarbe im xref:user_interface#overview[Overview] an:

image::notifications_overview_failed.png[alt="Anzeige gescheiterter Benachrichtigungen im Snapin 'Overview'.",width=50%]

Hier können Sie:

* durch Klick auf den Text [.guihint]#... failed notifications# zu einer Liste der fehlgeschlagenen Benachrichtigungen kommen und
* durch Klick auf icon:icon_delete[alt="Symbol zum Löschen."] diese Meldungen bestätigen und mit einem Klick auf icon:icon_confirm[alt="Symbol zur Bestätigung."] [.guihint]#Confirm# in der sich öffnenden Übersicht den Hinweis wieder entfernen.

*Wichtig:* Beachten Sie, dass die direkte Zustellung per SMTP in Fehlersituationen dazu führen kann, dass das Benachrichtigungsskript sehr lange läuft und am Ende in einen Timeout gerät.
Deswegen ist es unbedingt ratsam, dass Sie den Benachrichtigungs-Spooler verwenden und eine xref:notifications#async[asynchrone Zustellung] von Benachrichtigungen einstellen.

Das Verhalten bei wiederholbaren Fehlern (wie einem SMTP-Timeout) können Sie mit [.guihint]#Global settings > Notifications > Notification spooler configuration# pro Benachrichtigungsmethode einstellen:

image::notifications_plugin_timing_settings.png[alt="Globale Timer-Einstellung für eine Benachrichtigungsmethode."]

Neben einem optionalen Timeout (Default ist 1  Minute) und einer maximalen Anzahl von Wiederholversuchen können Sie mit [.guihint]#Maximum concurrent executions# festlegen, ob das Skript mehrfach parallel laufen und so gleichzeitig mehrere Benachrichtigungen versenden darf.
Ist das Benachrichtigungsskript sehr langsam, kann eine parallele Ausführung sinnvoll sein.
Allerdings muss es dann auch so programmiert sein, dass eine Mehrfachausführung sauber läuft (und nicht das Skript z.B. bestimmte Dateien für sich beansprucht).

Eine mehrfache parallele Zustellung per SMTP ist unproblematisch, da der Zielserver mehrere parallele Verbindungen verwalten kann.
Bei der Zustellung von SMS direkt über ein Modem ohne weiteren Spooler ist das sicher nicht der Fall und Sie sollten dann bei der Einstellung 1 bleiben.

*Wichtig:* Für xref:bulk[Bulk-Benachrichtigungen] steht die nachvollziehbare Benachrichtigung nicht zur Verfügung!
////


[#bulk]
== Bulk-Benachrichtigungen
// TK: Ich das Kapitel drin gelassen, bin aber eigentlich der Meinung, dass es raus sollte, weil zwar einstellbar, aber wohl doch eher nicht relevant für persönliche Benachrichtigungen.
// TK: Das kannst Du ja noch mit Mirco diskutieren ... wenn Du möchtest ;-)

=== Übersicht

Jeder, der mit Monitoring arbeitet, hat schon einmal erlebt, dass ein isoliertes Problem eine ganze Flut von (Folge-)Benachrichtigungen losgetreten hat.
Mit den xref:notifications#parents[Parent-Hosts] lässt sich dies in bestimmten Fällen vermeiden, leider aber nicht in allen.

Nehmen Sie ein Beispiel aus dem {CMK}-Projekt selbst:
Einmal pro Tag bauen wir für jede unterstützte Linux-Distribution Installationspakete von {CMK}.
Unser eigenes {CMK}-Monitoring ist so eingerichtet, dass wir für jede Distribution einen Service haben, der nur dann {OK} ist, wenn die richtige Anzahl von Paketen korrekt gebaut wurde.
Nun kommt es gelegentlich vor, dass ein genereller Fehler in der Software das Paketieren verhindert und so gleichzeitig 43 Services auf {CRIT} gehen.

Die Benachrichtigungen sind bei uns so konfiguriert, dass in so einem Fall nur eine einzige E-Mail versendet wird, welche alle 43 Benachrichtigungen nacheinander auflistet.
Das ist natürlich viel übersichtlicher als 43 einzelne E-Mails und verhindert, dass man im Eifer des Gefechts eine 44. E-Mail übersieht, die zu einem ganz anderen Problem gehört.

Die Funktionsweise dieser _Bulk-Benachrichtigung_ ist sehr einfach.
Wenn eine Benachrichtigung auftritt, so wird diese zunächst eine kurze Zeit lang zurückgehalten.
Weitere Benachrichtigungen, die während dieser Zeit kommen, werden dann gleich mit in dieselbe E-Mail gepackt.
Das Sammeln stellen Sie _pro Regel_ ein.
So können Sie z. B. tagsüber mit Einzel-E-Mails arbeiten, nachts aber mit einer Bulk-Benachrichtigung.
Wird in einer Regel die Bulk-Benachrichtigung aktiviert, so erhalten Sie folgende Optionen:

image::notifications_bulk.png[alt="Benachrichtigungsregel mit den Optionen zur Bulk-Benachrichtigung."]

Die Wartezeit können Sie beliebig konfigurieren.
In vielen Fällen genügt eine Minute, da spätestens dann alle verwandten Probleme aufschlagen sollten.
Sie können natürlich auch einen größeren Zeitraum einstellen.
Dadurch entsteht aber eine grundsätzliche Verzögerung der Benachrichtigung.

Da es keinen Sinn ergibt, alles in einen Topf zu werfen, können Sie bestimmen, welche Gruppen von Problemen jeweils gemeinsam benachrichtigt werden sollen.
Üblicherweise wird die Option [.guihint]#Host# gewählt, die dafür sorgt, dass nur Benachrichtigungen vom gleichen Host zusammengefasst werden.

Hier noch ein paar Fakten zur Bulk-Benachrichtigung:

* Wenn das Sammeln in einer Regel eingeschaltet ist, kann es mit einer späteren Regel auch wieder ausgeschaltet werden -- und umgekehrt.

* Die Bulk-Benachrichtigung geschieht immer pro Kontakt.
Jeder hat quasi seinen privaten „Sammeltopf“.

* Sie können die Größe des Topfs begrenzen ([.guihint]#Maximum bulk size#).
Bei Erreichen dieses Maximums wird die Bulk-Benachrichtigung sofort verschickt.


=== Bulk-Benachrichtigungen und Zeitperioden

Was geschieht, wenn eine Benachrichtigung innerhalb der Benachrichtigungsperiode liegt, die Bulk-Benachrichtigung, die diese Benachrichtigung enthält -- und ja etwas später kommt -- dann aber schon außerhalb der Benachrichtigungsperiode liegt?
Und auch der umgekehrte Fall ist ja möglich ...

Hier gilt ein ganz einfaches Prinzip:
Alle Konfigurationen, die Benachrichtigungen auf Zeitperioden eingrenzen, gelten immer nur *für die eigentliche Benachrichtigung.*
Die später folgende Bulk-Benachrichtigung wird immer *unabhängig* von sämtlichen Zeitperioden zugestellt.


[#admin]
== Administrator-Einstellungen

=== Vorübergehend Benachrichtigungen abschalten

ifdef::onprem[]
Die komplette Abschaltung der Benachrichtigungen durch einen Benutzer selbst ist mit der xref:wato_user#roles[Berechtigung] [.guihint]#General Permissions > Disable all personal notifications# geschützt, die für die Benutzerrolle `user` per Default auf `no` gesetzt ist.
Nur wenn Sie der Rolle `user` dieses Recht explizit zuweisen, bekommt ein Benutzer dafür in seinen persönlichen Einstellungen entsprechende Checkboxen angezeigt:

image::notifications_edit_profile_disable.png[alt="Persönliche Einstellung zur vorübergehende Abschaltung der Benachrichtigungen."]

Da Sie als Administrator einfachen Zugriff auf die persönlichen Einstellungen der Benutzer haben, können Sie das Abschalten stellvertretend für den Benutzer machen -- auch wenn diesem die oben genannte Berechtigung fehlt.
Sie finden diese Einstellung unter [.guihint]#Setup > Users > Users# und dann in den Eigenschaften des Benutzerprofils.
endif::[]

ifdef::saas[]
Da Sie als Administrator einfachen Zugriff auf die persönlichen Einstellungen der Benutzer haben, können Sie das Abschalten stellvertretend für einen Benutzer durchführen.
Sie finden diese Einstellung unter [.guihint]#Setup > Users > Users# und dann in den Eigenschaften des Benutzerprofils unter [.guihint]#Personal settings > Disable notifications.#
endif::[]

Damit können Sie z. B. während eines Urlaubs eines Kollegen sehr schnell dessen Benachrichtigungen still schalten, ohne an der eigentlichen Konfiguration etwas ändern zu müssen.


=== Benutzerdefinierte Anpassungen verhindern

ifdef::onprem[]
Wenn Sie ein Anpassen der Regeln durch den Benutzer ganz unterbinden möchten, können Sie der Benutzerrolle `user` die xref:wato_user#roles[Berechtigung] [.guihint]#General Permissions > Edit personal notification settings# entziehen.
endif::[]

Als Administrator können Sie sich alle Benutzerregeln anzeigen lassen, wenn Sie auf der Seite [.guihint]#Setup > Events > Notifications# im Menü [.guihint]#Display > Show user rules# wählen:

image::notifications_show_user_roles.png[alt="Liste der Benutzerregeln aus Administratorensicht."]

Nach den globalen Regeln werden die persönlichen Regeln aufgelistet, die Sie mit icon:icon_edit[alt="Symbol für das Bearbeiten."] auch bearbeiten können.
