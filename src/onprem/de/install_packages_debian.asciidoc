// -*- coding: utf-8 -*-
// IGNORE Sicherheits Stabilitäts
include::global_attr.adoc[]
= Installation unter Debian und Ubuntu
:revdate: 2023-05-08
:title: Installation unter Debian und Ubuntu
:description: Hier erfahren Sie, wie Sie {CMK} unter der Linux-Distribution von Debian und von Ubuntu installieren.

{related-start}
xref:intro_setup#[{CMK} aufsetzen]
xref:appliance_install_virt1#[Virtuelle Appliance installieren]
xref:install_packages#[Grundsätzliches zur Installation von {CMK}]
{related-end}

//SK: H1:Zusätzliche Sicherheitsmechanismen gemäß KNW-86 beschreiben
//SK: Hab ich leider zu spät gesehen diesen Hinweis. Muss ich nachliefern.

[#package_sources]
== Einrichten der Paketquellen

Minimalinstallationen von Debian oder Ubuntu enthalten möglicherweise nicht alle für die Installation von {CMK} benötigten Paketquellen.
Vergleichen Sie die folgenden Minimalanforderungen mit den Einträgen Ihrer `/etc/apt/sources.list`, beziehungsweise dem Inhalt des Verzeichnisses  `/etc/apt/sources.list.d`.
Unsere Beispiele verwenden die mehrzeilige Schreibweise und greifen auf den zentralen Spiegelserver zu.
Sofern nicht anders angegeben, gelten für ältere Versionen und _STS-Versionen (Short Term Support)_ die selben Anforderungen.
Tauschen Sie in diesem Fall einfach den Codenamen aus.
Aktualisieren Sie nach Überprüfung oder Anpassung der Paketquellen den lokalen Paket-Index:

[{shell}]
----
{c-root} apt update
----

[#debian]
=== Debian

Bei Debian sind alle abhängig von {CMK} benötigten Pakete in der Komponente `main` enthalten.
In einigen Fällen setzt {CMK} bestimmte Sicherheits-Updates voraus, das `security` Repository ist daher auch erforderlich.
Das Update-Repository ist empfohlen, aber nicht zwingend erforderlich.
Stabilitäts-Updates werden hier früher als zu den Dot Releases bereitgestellt.
Damit funktionieren die folgenden minimalen Beispiele einer `/etc/apt/sources.list`:

[discrete]
[#debian11]
==== Debian 11 _Bullseye_

./etc/apt/sources.list
[{file}]
----
deb http://deb.debian.org/debian/ bullseye main
deb https://security.debian.org/debian-security bullseye-security main
# deb http://deb.debian.org/debian bullseye-updates main
----

[discrete]
[#debian12]
==== Debian 12 _Bookworm_

./etc/apt/sources.list
[{file}]
----
deb http://deb.debian.org/debian/ bookworm main
deb https://security.debian.org/debian-security bookworm-security main
# deb http://deb.debian.org/debian bookworm-updates main
----

[#ubuntu]
=== Ubuntu

Ubuntu benötigt mindestens die beiden Komponenten `main` und `universe`.
In einigen Fällen setzt {CMK} bestimmte Sicherheits-Updates voraus, die `security` Repositories sind daher auch erforderlich.
Die Update-Repositories sind empfohlen, aber nicht zwingend erforderlich.
Stabilitäts-Updates werden hier früher als zu den Dot Releases bereitgestellt.
Daraus resultieren die folgenden Beispiele der `/etc/apt/sources.list`:

[discrete]
[#ubuntu2004]
==== Ubuntu 20.04 _Focal Fossa_

./etc/apt/sources.list
[{file}]
----
deb http://archive.ubuntu.com/ubuntu/ focal main
deb http://archive.ubuntu.com/ubuntu/ focal universe
deb http://archive.ubuntu.com/ubuntu focal-security main
deb http://archive.ubuntu.com/ubuntu focal-security universe
# deb http://archive.ubuntu.com/ubuntu/ focal-updates main 
# deb http://archive.ubuntu.com/ubuntu/ focal-updates universe
----

[discrete]
[#ubuntu2204]
==== Ubuntu 22.04 _Jammy Jellyfish_

./etc/apt/sources.list
[{file}]
----
deb http://archive.ubuntu.com/ubuntu/ jammy main
deb http://archive.ubuntu.com/ubuntu/ jammy universe
deb http://archive.ubuntu.com/ubuntu jammy-security main
deb http://archive.ubuntu.com/ubuntu jammy-security universe
# deb http://archive.ubuntu.com/ubuntu/ jammy-updates main 
# deb http://archive.ubuntu.com/ubuntu/ jammy-updates universe
----


[#download]
== Herunterladen des passenden Pakets

// Die folgenden 3 Absätze sind identisch in install_packages_debian, install_packages_redhat und install_packages_sles
Wählen Sie zunächst die für Ihre Bedürfnisse passende xref:intro_setup#editions[{CMK}-Edition.]
Auf der link:https://checkmk.com/de/download[Download-Seite^] finden Sie die {RE}, welche Open Source ist, und die bis 750 Services gratis nutzbare {CE}. 
Wenn Sie eine Subskription besitzen, dann finden Sie die Installationspakete im link:https://portal.checkmk.com/de/[Kundenportal.^]

Wir empfehlen den Einsatz der _letzten stabilen {CMK}-Version._
Falls Sie (beispielsweise als Basis für die Wiederherstellung eines Backups) eine ältere Version benötigen, finden Sie diese im link:https://checkmk.com/de/download/archive[Download-Archiv.^]
Achten Sie darauf, dass das ausgewählte Paket exakt zur installierten Linux-Distribution und deren Version passt.

Nachdem Sie das Paket heruntergeladen haben, bringen Sie es auf das Linux-System, auf dem {CMK} installiert werden soll.
Das kann zum Beispiel über das Kommandozeilentool `scp` geschehen, welches jedes moderne System mitbringt – und auch bei Windows 10 in der PowerShell verfügbar ist.
Zusätzliche Programme wie _WinSCP_ sind meist nicht erforderlich.

Für eine Übertragung mit `scp` muss auf dem zukünftigen {CMK}-Server das Paket `openssh-server` installiert sein.
Sollte dies noch nicht der Fall sein, so führen Sie den folgenden Befehl aus, um das Paket zu installieren:

[{shell}]
----
{c-root} apt install openssh-server
----

Anschließend können Sie beispielsweise die {CRE} für Ubuntu 22.04 _Jammy Jellyfish_ wie folgt übertragen:

[{shell-raw}]
----
{c-root} scp check-mk-raw-2.2.0p1_0.jammy_amd64.deb root@mymonitoring.mydomain.org:/tmp
----


[#signed]
== Installation des signierten Pakets

Alle Pakete werden mittels link:https://gnupg.org[GnuPG^] signiert.
Durch diese Signatur können Sie zum einen prüfen, ob das Paket auch wirklich von uns stammt, und zum anderen, ob es insgesamt vollständig ist.

Je nachdem mit welchen optionalen Paketen Ihre Distribution installiert wurde, muss für eine erfolgreiche Verifikation noch das Paket `dpkg-sig` inklusive seiner Abhängigkeiten installiert werden.
Führen Sie dazu den folgenden Befehl aus:

[{shell}]
----
{c-root} apt install dpkg-sig
----

Damit die signierten Pakete wie gewohnt installiert werden können, müssen Sie einmalig unseren öffentlichen Schlüssel importieren, damit der Signatur vertraut wird.
Laden Sie dazu zuerst den Schlüssel direkt von unserer Website:

[{shell-raw}]
----
{c-root} wget https://download.checkmk.com/checkmk/Check_MK-pubkey.gpg
----

Danach importieren Sie den Schlüssel in die Liste der vertrauenswürdigen Signaturen.
Unter Debian und Ubuntu benötigen Sie dafür den folgenden Befehl:

[{shell}]
----
{c-root} gpg --import Check_MK-pubkey.gpg
----

Sobald Sie den Schlüssel importiert haben, verifizieren Sie das {CMK}-Paket mit dem folgenden Befehl:

[{shell}]
----
{c-root} dpkg-sig --verify check-mk-raw-2.2.0p1_0.jammy_amd64.deb
----

In einigen Fällen scheitert die Signaturprüfung mit der folgenden Fehlermeldung:

[{shell}]
----
BADSIG _gpgbuilder
----

Tritt dies auf, ist der wahrscheinlichste Grund, dass die installierte Version von `dpkg-sig` nicht mit dem Kompressionsformat des Pakets umgehen kann.
Verwenden Sie in diesem Fall `gpg`, um die Signatur zu prüfen:

[{shell-raw}]
----
{c-root} gpg --verify check-mk-raw-2.2.0p1_0.jammy_amd64.deb
gpg: Signature made Tue Apr 18 11:52:52 2023 CEST
gpg:                using RSA key B1E7106575B723F00611C612434DAC48C4503261
gpg: Good signature from "Check_MK Software Release Signing Key (2018) <feedback@check-mk.org>" [unknown]
gpg:                 aka "Check_MK Software Daily Build Signing Key (2018) <feedback@check-mk.org>" [unknown]
gpg: WARNING: This key is not certified with a trusted signature!
gpg:          There is no indication that the signature belongs to the owner.
Primary key fingerprint: B1E7 1065 75B7 23F0 0611  C612 434D AC48 C450 3261
----

Die angezeigte Warnung bezieht sich auf den öffentlichen Schlüssel von {CMK}, nicht die Signatur des Pakets selbst.
Der Grund hierfür ist, dass der verwendete Schlüssel mit keinem anderen Schlüssel signiert ist, dem der Nutzer vertraut - was aber in diesem Fall kein Problem darstellt. 

Anschließend können Sie das {CMK}-Paket mit dem folgenden Befehl installieren.
Achten Sie dabei darauf, den vollständigen Pfad zu der DEB-Datei an `apt install` zu übergeben:

[{shell}]
----
{c-root} apt install /tmp/check-mk-raw-2.2.0p1_0.jammy_amd64.deb
----


== Abschlusstest

Nach der erfolgreichen Installation von {CMK} und allen Abhängigkeiten steht Ihnen der Befehl `omd` zur Verfügung,
mit dem Sie xref:omd_basics#[Monitoring-Instanzen] anlegen und verwalten können.
Zur Kontrolle können Sie die installierte Version ausgeben lassen:

[{shell}]
----
{c-root} omd version
OMD - Open Monitoring Distribution Version 2.2.0p1.cre
----

