// -*- coding: utf-8 -*-
// IGNORE 
include::global_attr.adoc[]
= Custom notes
:revdate: 2023-10-30
:title: Custom notes - about hosts and services
:description: In the views for hosts and services you can provide custom notes. In this article we will show you, how to set this up in {CMK}.

{related-start}
xref:notifications#[Notifications]
xref:views#[Host and service views]
{related-end}


[#intro]
== Introduction

In {CMK} you can store _custom notes_ for all hosts and services individually and specifically, or for entire groups.
These notes are displayed in separate columns named [.guihint]#Custom services notes# and [.guihint]#Custom host notes#.
By default, these columns are already displayed in the detailed xref:glossar#view[views] for hosts ([.guihint]#Status of Host myhost#) and services ([.guihint]#Service myservice, myhost#).
Because these are standard columns, they can also be inserted into many other xref:views#edit[views in {CMK}].


[#create]
== Creating notes

Notes can be created directly in your {CMK} site's configuration directory.
To do this, first create the `notes` directory in `~/etc/check_mk/`.

[{shell}]
----
{c-omd} mkdir ~/etc/check_mk/notes
----


[#host_notes]
=== Host notes

To next create notes for hosts, create the `hosts` directory within the `notes` directory.

[{shell}]
----
{c-omd} mkdir ~/etc/check_mk/notes/hosts
----

If you now want to create a note for a specific host, create a file whose name corresponds exactly to that host's name in {CMK}.
Use the editor of your choice or the shell redirection, as in the following example:

[{shell}]
----
{c-omd} echo "My custom host note for myhost" > ~/etc/check_mk/notes/hosts/myhost
----

Located at the very bottom of the [.guihint]#Status of Host# view, this note will look like this:

image::custom_notes_first_host_note.png[alt="A note in the 'Status of Host' view."]

If you want a single such file to refer to and be displayed on multiple hosts at once, you can work with shell patterns such as the asterisk, the question mark, and also character classes.
To do this, the file name in the respective directory must actually contain these characters.
So a file named `pass:['*']` in the directory `~/etc/check_notes/hosts/` would refer to all hosts.
The contents of the `pass:['*']` file would consequently be displayed at each individual host in your site.

*Important:* The names of such files *must* be enclosed in single quotes.

If -- for some reason -- you want to display a specific note on all hosts whose name ends in `t`, then create a file named `'*t'`.

[{shell}]
----
{c-omd} echo "The name auf this host ends with t" > ~/etc/check_mk/notes/hosts/'*t'
----

If more than one file matches the name of a host, the [.guihint]#Custom host notes# field will also display all matching notes.
The different notes are separated by a horizontal line:

image::custom_notes_notes_from_different_sources.png[alt="Notes from different source files are separated by a horizontal line."]


[#service_notes]
=== Service notes

To be able to create such notes for services as well, you will need the `services` directory within `~/etc/check_mk/notes/`.

[{shell}]
----
{c-omd} mkdir ~/etc/check_mk/notes/services
----

In contrast to the hosts, you cannot start right away in this directory with the files for your notes.
Here you need another directory level, which defines, for which hosts a service note should be displayed.

So next, create a directory that designates one host -- or following the patterns shown xref:host_notes[above] -- multiple hosts.

So a directory named `pass:['*']` would again refer to all hosts.

[{shell}]
----
{c-omd} mkdir ~/etc/check_mk/notes/services/'*'
----

In a directory that corresponds exactly to a host name, you can then create notes only for the services for that one host.

[{shell}]
----
{c-omd} mkdir ~/etc/check_mk/notes/services/myhost
----

So if you want to create notes for the services on all hosts that start with `my`, you will need to create a directory named `'my*'`.

[{shell}]
----
{c-omd} mkdir ~/etc/check_mk/notes/services/'my*'
----

Again, make sure to enclose the directory names in single quotes.

Once you have created the host level according to your requirements, you can -- analogous to the host notes -- again create files, which this time must correspond to the desired [.guihint]#Service description#.
Likewise, you can work with asterisks, question marks, and character classes.

The following example creates a note for the [.guihint]#Check_MK# service on each of the hosts in your site.

[{shell}]
----
{c-omd} echo "Note about service Check_MK for all hosts" > ~/etc/check_mk/notes/services/'*'/Check_MK
----


[#macros]
== Macros that can be used

Within the notes you can use macros, which will then be replaced as appropriate in the view.
The following macros are available for use here:

[cols="30,~"]
|===
|`$HOSTNAME$` |Host name
|`$HOSTNAME_LOWER$` |Host name in lowercase letters
|`$HOSTNAME_UPPER$` |Host name in uppercase letters
|`$HOSTNAME_TITLE$` |Host name with the first letter uppercase and the rest lowercase
|`$HOSTADDRESS$` |The IP address of the host over which it is monitored.
|`$SERVICEDESC$` |Service description (only for service notes)
|`$SITE$` |ID of the {CMK} site
|`$URL_PREFIX$` |URL prefix of the site
|`$HOSTOUTPUT$` |Output of the xref:glossar#check_plugin[check plug-in] (for host notes only)
|`$SERVICEOUTPUT$` |Output of the check plug-in (for service notes only)
|===

For example, you could use a single file to refer to different entries in your in-house wiki, each of which will always match the currently-open host.

.~/etc/check_mk/notes/hosts/'*'
[{file}]
----
Additional information about <a href="http://mywiki.local/page.php?host=$HOSTNAME$" target="_blank">this host in our wiki</a>
----

