// -*- coding: utf-8 -*-
// IGNORE Contactgroup DN
include::global_attr.adoc[]
= User management with LDAP/Active Directory
:revdate: 2021-12-29
:title: User management with LDAP/Active Directory
:description: In {CMK} users and contact groups can also be synchronized via LDAP or Microsoft's Active Directory (AD).

{related-start}
xref:kerberos#[Single sign-on with Kerberos]
xref:omd_https#[Securing the web interface with HTTPS]
xref:wato_user#[Users, roles and permissions]
{related-end}


== Introduction

Since the manual definition of users is scalable only up to a certain level, {CMK} provides a facility for using LDAP-based services for managing users,
for automatically synchronizing users from the home directories, and likewise for assigning contact groups, roles and other attributes to these users in {CMK} automatically.
{CMK} is not restricted to a single LDAP source, and it can also distribute the users to other connected sites if required.


[#connect]
== Configuring an LDAP connection

=== Connecting to the server

Creating a connection to an LDAP-compatible server requires a user with read permission for the server.
As a minimum it must have read permission for the persons and groups that it is to synchronize.
In the following example this user is called `check_mk`.

Under [.guihint]#Setup > Users > LDAP & Active Directory > Add connection# a new connection can be created.
In the form, first enter any desired [.guihint]#ID# for the connection in the [.guihint]#General Properties# box.
A simple meaningful title can be optionally entered in the [.guihint]#Description# field.
As always, the [.guihint]#ID# must be unique and cannot be changed later.
It may only consist of letters, digits, dashes and underscores, starting with a letter or underscore.

image::ldap_new_connection_general_properties.png[]

Next, under [.guihint]#LDAP Connection# the LDAP server can be defined, as well as one or more failover servers if they are available.
Then only the [.guihint]#Directory type# needs to be selected, and the user data for the read-access defined under [.guihint]#Bind credentials#.
Note that the user name with its full LDAP path must be entered.
Upper and lower case must not does not need to be taken into account.
The configuration should then look something like this:

image::ldap_new_connection_ldap_connection.png[]

{CMK} supports more than just Active Directory.
To alter the directory to, e.g., OpenLDAP, select it in the [.guihint]#Directory type# field
-- further configuration alterations resulting from this action occur in only a few locations.

The [.guihint]#Failover Servers# are used when the actual server is not accessible, or when a time limit has been exceeded.
This makes sense if there is no local own server in use, but it is desired to create a redundant connection.

The connection of {CMK} with the LDAP server is always maintained until the LDAP server is no longer accessible due to a timeout or other problems.
Only then is the switch to the failover server made.
The same applies after the switchover:
The connection will only revert to the actually configured server if the failover server becomes unavailable.


[#user_filter]
=== Defining users

Next the paths to the users and groups will be defined, and the filters set.
In [.guihint]#User base DN#, first enter the path via which the users are to be found.
Make sure here that the _Operational Unit_ (OU) is set so that all desired users and as few others as possible are included.
The more users that are queried, the slower the synchronization will be to process.

Next set the [.guihint]#Search scope# option.
Here you can recursively filter for all users located in the OU and in those units below it, or restrict the search to those located directly in this OU.
If you have entered a user directly in the path, you should select [.guihint]#Search only the entry at the base DN#
-- only this user will then be included.

With the help of the option [.guihint]#Search filter# you can narrow down the selection of users to be imported even further.
If for example you want to synchronize only the users belonging to a specific group, set an LDAP query as shown in the following screenshot.
The prerequisite for this is that the users have the `memberof` attribute.
How to filter by group membership, without this attribute, can be learned xref:filter_group[below].

image::ldap_new_connection_users.png[]

The standard filter can also be combined with the `memberof`, or with other filters:

`(&(objectclass=user)(objectcategory=person)(memberof=cn=cmk-admins,ou=groups,dc=mycompany,dc=org))`

As can be seen in the [.guihint]#Users# box, there are further options for a user search.
With the [.guihint]#User-ID attribute# option it is possible to specify which attribute the user is to utilize as its login ID in {CMK}.
The user will subsequently use this login when signing in.
As a rule, in Active Directory it will be the `sAMAccountName` attribute, which is used as standard in {CMK}.
Under OpenLDAP it is often the `uid` attribute.

With the [.guihint]#Lower case User-IDs# options you can convert the synchronized IDs to lower-case letters.
This is possibly sensible, since as already mentioned, Active Directory/LDAP does not differentiate between upper and lower case letters, but {CMK} does.
That can lead to confusion which this option can solve.

The [.guihint]#Umlauts in User-IDs (deprecated)# option was only provided for compatibility reasons and should no longer be used/altered.

Last but not least the option [.guihint]#Create users only on login# allows you to create new users only once they login to {CMK} instead of during the synchronization with LDAP.

image::ldap_new_connection_users_search_filter_2.png[]

[#filter_group]
The [.guihint]#Filter group# option should only be used if the LDAP server is *not* an Active Directory, and the `memberof` dynamic attribute is not available in the user data.
In such cases the user filtering takes place in {CMK} itself.
In the process it is possible that many users will be queried which will later be discarded.
Such a scenario can be largely stopped by the LDAP module in {CMK}.

Should you be dependent on this option however, the complete path for the group to be filtered must be entered here:

image::ldap_new_connection_users_filter_group.png[]


[#groupfilter]
=== Defining groups

Should you wish to filter the users by group, define the path to the group so that a matching can be performed.
This can be done in the same way as with the users
-- when a group is directly specified, under [.guihint]#Search scope# the [.guihint]#Search only the entry at the base DN# option can be used
-- otherwise the search will be performed either directly in the OU or its subsidiary units will also be included.

Here as well, with the help of the [.guihint]#Search filter# option it is possible to specify how the group's name is to be defined in {CMK}.
You can additionally specify the name of the attribute ([.guihint]#Member attribute#) in which the group's members are lodged.
{CMK} uses `member` as standard.
Under OpenLDAP this can also be `uniqueMember`.
Alter the option as appropriate.

image::ldap_new_connection_groups.png[]


[#config_test]
=== Testing the configuration

The first setup is now complete, and for diagnosis the configuration can now be saved and tested via the [.guihint]#Save & test# button.

image::ldap_new_connection_diagnostics.png[]

You don't need to specify groups to produce a functioning configuration.
However, if there are only users for {CMK} in the OU, it makes sense to restrict the selection via one or more groups.


=== The synchronization interval

Finally, you can also define how often the users are to be automatically synchronized.
In an environment in which changes seldom occur the standard is perhaps too tight.
The time frame should not not be too long however, so that any changes can be reflected promptly in {CMK}.

image::ldap_new_connection_other.png[]

A synchronization can be manually initiated at any time in [.guihint]#Setup > Users > Users > Synchronize users#.
In addition, a user will be synchronized if required when they attempt to log in and have not yet been synchronized.


== Automatic allocation of attributes

[#contact_groups]
=== Contact groups

It is not much use being able to create all users automatically, if it is then necessary to allocate them to contact groups manually.
{CMK} provides the function of using the LDAP server’s groups to enable allocation to contact groups.
For this, activate the [.guihint]#Attribute sync plugins > Contactgroup Membership# option:

image::ldap_new_connection_contactgroup_membership.png[]

For an allocation to be successful, the group’s name (`cn`) on the LDAP server must be identical to that in {CMK}
-- i.e., the `oracle_admins` group will only be allocated to a user if it is also in the `oracle_admins` group in LDAP.
If, instead of this, it is in the `oracle-admins` or the `ORACLE_admins` groups the allocation will not work.
Therefore be careful to use the correct syntax and use of upper and lower case should problems arise in this situation.


[#nested_groups]
==== Nested groups

{CMK} also offers -- currently only for Active Directory -- the possibility of using inherited groups.
Activate this option if, for example, your user is in the `oracle_admins` group, and this group is in turn a member of `cmk-user`.


==== Groups from other connections

If multiple LDAP connections have been created in {CMK}, groups from other sources can also be utilized to enable an allocation.
This can make sense if one general connection has been configured, and others are filtered only for particular groups.


=== Roles

Roles can also be automatically allocated in a similar way and the xref:nested_groups[Nested groups] function likewise used here.
One or more groups can be defined for each role.
Select the role for which a connection is to be created and enter the full path to the group.
As standard a search will be performed in groups found in xref:groupfilter[group filter].
Other connections can however be searched in order to use the groups found there.
Select the connections to be searched from the list.

image::ldap_new_connection_roles.png[]

With the settings in the image above, all users in the nominated group will  be allocated to the [.guihint]#Administrator# role,
as long as they are also synchronized by the xref:user_filter[user filter].
As can be seen in the screenshot, your own configured roles can also be selected and connected with LDAP groups.


[#other_attr]
=== Other attributes

For the synchronization of other user information, as a rule only the activation of the relevant plug-in under [.guihint]#Attribute Sync Plugins# is required,
and possibly also the entry of the attribute which provides the information.
Below is a table of the plug-ins and the attribute used (if not manually set) and a short description.
Some of the attributes are also found in the xref:user_interface#user_menu[User menu] of a user.

[cols="35,~,~,~,55"]
|===
|Plug-in |Attribute |Syntax |possible values |Description

|[.guihint]#Alias# |`cn` |String | |Normally the user's first and last name.
|[.guihint]#Authentication Expiration# |`pwdlastset` |Interval | |When a user will be logged out or locked out.
|[.guihint]#Disable notifications# |`disable_notifications` |Boolean |`True`, `False` |`True` disables *all* notifications to the user.
|[.guihint]#Email address# |`mail` |String | |The user's email address.
|[.guihint]#Mega menu icons# |`icons_per_item` |String |`None`, `entry` |Display green icons by topic (`None`) or colored icons by each menu item (`entry`) in the mega menus.
|[.guihint]#Navigation bar icons# |`nav_hide_icons_title` | String |`None`, `hide` |Display only icons (`hide`) or icons with title (`None`) in the xref:glossar#navigation_bar[navigation bar].
|[.guihint]#Pager# |`mobile` |String | |A nominated telephone/pager contact number.
|[.guihint]#Show more / Show less# |`show_mode` |String |`default_show_less`, `default_show_more`, `enforce_show_more` |Display less (`default_show_less`), more (`default_show_more`) or always all (`enforce_show_more`) in the user interface. For more information on Show less and Show more modes, see the xref:intro_gui#show_less_more[Beginner's Guide]. 
|[.guihint]#Sidebar position# |`ui_sidebar_position` |String |`None`, `left` |Display the xref:glossar#sidebar[sidebar] on the right (`None`) or on the left (`left`) side.
|[.guihint]#Start URL to display in main frame# |`start_url` |String |Examples: `view.py?view_name=allhosts` or `dashboard.py` |URL of the start page.
|[.guihint]#Temperature unit# |`temperature_unit` |String |`celsius`, `fahrenheit` |Unit of temperature in Celsius or Fahrenheit for display in graphs and Perf-O-Meters.
|[.guihint]#User interface theme# |`ui_theme` |String |`facelift`, `modern-dark` |The theme of the user interface: Dark (`modern-dark`) or Light (`facelift`).
|[.guihint]#Visibility of hosts/services# |`force_authuser` |Boolean |`True`, `False` |Display all hosts and services (`False`) or only those for which the user is assigned as contact (`True`).
|===


[#central_setup]
== LDAP in distributed environments

When configuring a xref:glossar#central_setup[distributed monitoring with central setup] you can specify whether, and which LDAP connections should be synchronized from the remote site.
If not otherwise specified, the remote site itself will synchronize all users of the configured connection.
In this way changes will be automatically reflected on every site within the defined time frame and do not first need to be copied from the central to the remote site(s).
The synchronization can also be restricted to specific connections or completely disabled.
In the second case the users on the central site are retrieved from the LDAP connections and copied to the remote sites with an xref:glossar#activate_changes[activate changes].

You can configure the settings in [.guihint]#Setup > General > Distributed monitoring# in the [.guihint]#Properties# of the connection.
Here is an example where the connection set up above is selected:

image::ldap_distributed_monitoring_sync_ldap.png[]


[#ssl]
== Securing LDAP with SSL

In order to secure the LDAP connection with SSL, simply activate the [.guihint]#Use SSL# checkbox in the connection data and match the [.guihint]#TCP port# (usually `636` for SSL in LDAP).

image::ldap_new_connection_ldap_connection_ssl.png[]

If the LDAP server(s) use a certificate signed by a trustworthy certification authority, everything necessary to establish an encrypted connection is already done.

If a self-signed certificate is to be used, the connection can only be established after the certificate has been imported into the certificate store.
Only then will it be classified as trustworthy and the connection established.

In order to do so, simply go to [.guihint]#Setup > General > Global settings > Site management > Trusted certificate authorities for SSL#.
Click [.guihint]#Add new CA certificate or chain# and either paste in the content of your CRT or PEM file or choose [.guihint]#Upload CRT/PEM File# and do just that.

image::ldap_add_new_ca_certificate.png[]


== Error diagnosis

An error diagnosis is implemented directly in the xref:config_test[configuration settings].
Even after setup, it is possible to check here for the possible source of an error.
Error messages will additionally be written to the `web.log`.
These messages can likewise point to the source of an error:

.~/var/log/web.log
[{file}]
----
2020-09-19 16:03:17,155 [40] [cmk.web 31797] /ldaptest/check_mk/wato.py Internal error: Traceback (most recent call last):
  File "/omd/sites/ldaptest/share/check_mk/web/htdocs/wato.py", line 6563, in mode_edit_ldap_connection
    state, msg = test_func(connection, address)
  File "/omd/sites/ldaptest/share/check_mk/web/htdocs/wato.py", line 6506, in test_group_count
    connection.connect(enforce_new = True, enforce_server = address)
  File "/omd/sites/ldaptest/share/check_mk/web/plugins/userdb/ldap.py", line 274, in connect
    ('\n'.join(errors)))
MKLDAPException: LDAP connection failed:
ldap://myldap.mycompany.org: Can't contact LDAP server
----


== Files and directories

[cols="40,~"]
|===
|File path |Function 

|`~/etc/check_mk/multisite.d/wato/user_connections.mk` |All LDAP connections configured in the Setup will be retained in this file.
|`~/etc/check_mk/multisite.d/wato/users.mk` |All users will be defined here.
|`~/var/log/web.log` |The log file in which connection errors are be recorded -- it is thus one of the first sources of information when problems occur.
|===

