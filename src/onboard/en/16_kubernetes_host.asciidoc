// -*- coding: utf-8 -*-
// IGNORE
include::global_attr.adoc[]
= Monitor Kubernetes
:revdate: 2024-07-23
:title: Monitor Kubernetes
:description: Checkmk includes a comprehensive module for monitoring Kubernetes clusters, nodes, deployments, pods, DaemonSets, StatefulSets and more.


[#prerequisites]
== Prerequisites

Before you start with Checkmk, you have to prepare your Kubernetes cluster and install our Node Collector and our Cluster Collector.
While setting this up, you also have to collect the following information about your Kubernetes cluster:
token and certificate of the service account, IP address and port of either the NodePort or Ingress endpoint and URL or IP address of your Kubernetes API server.

You will be asked to enter this information into Checkmk when configuring the Kubernetes agent.

You can find details on how to set this up and retrieve the information in the link:https://docs.checkmk.com/saas/en/monitoring_kubernetes.html#_creating_prerequisites_in_the_cluster[Checkmk Cloud User Guide^].


[#create_host]
== Create a host

++++1. Click *Setup > Hosts > Hosts* to open the *Main* folder page and then click *link:/pass:[$$SITE_NAME$$]/check_mk/index.py?start_url=%2Fpass:[$$SITE_NAME$$]%2Fcheck_mk%2Fwato.py%3Ffolder%3D%26mode%3Dnewhost[Add host]*.

++++2. Set *Host name* to `kubernetescluster`.

If you use the host name suggested above, you can continue to jump to the Checkmk user interface via the links in this guide.

++++3. Set *IP address family* to *No IP*.

++++4. Click *Save & view folder*.


[#import_ca]
== Import the CA of the service account

++++1. Click *Setup > General > Global settings > Site management > *link:/pass:[$$SITE_NAME$$]/check_mk/index.py?start_url=%2Fpass:[$$SITE_NAME$$]%2Fcheck_mk%2Fwato.py%3Ffolder%3D%26mode%3Dedit_configvar%26site%3D%26varname%3Dtrusted_certificate_authorities[Trusted certificate authorities for SSL]* and then click *Add new CA certificate or chain*.

++++2. Add the entire content of the certificate you gathered before and click *Save*.


[#configure_gcp]
== Configure the Kubernetes agent

A Kubernetes cluster is monitored by a so-called _special agent_.
This agent is configured with a rule:

++++1. Click *Setup > Agents > VM, cloud, container > Kubernetes* and then click *link:/pass:[$$SITE_NAME$$]/check_mk/index.py?start_url=%2Fpass:[$$SITE_NAME$$]%2Fcheck_mk%2Fwato.py%3Ffilled_in%3Dnew_rule%26ruleset_back_mode%3Drulesets%26rule_folder%3D%26varname%3Dspecial_agents%253Akube%26mode%3Dnew_rule%26folder%3D%26_new_dflt_rule%3DSET[Add rule]*.

++++2. In the *Kubernetes* box, you can freely assign the *Cluster name*. It just has to be unique in your Checkmk site.

++++3. Fill in the *Token* and *API server connection Endpoint* with the values you previously gathered, while preparing your cluster.

++++4. For the *SSL certificate verification* select the option *Verify the certificate*.

++++5. For a fully comprehensive monitoring of your cluster, you have to *Use data from the Checkmk Cluster Collector*. Add the full URL (including protocol and port) of said Collector in *Collector NodePort / Ingress endpoint*.

++++6. Just as before select the option *Verify the certificate* for the *SSL certificate verification* again.

++++7. In the following *Collect information about...* list, select all options that are relevant for your cluster and which you want to monitor.

++++8. In the *Conditions* box, check *Explicit hosts* and select the *kubernetescluster* host you created previously.

++++9. Click *Save*.


[#service_discovery]
== Run a service discovery

The service discovery detects all available services that are associated with the `kubernetescluster` host:

++++1. Click *Setup > Hosts > link:/pass:[$$SITE_NAME$$]/check_mk/index.py?start_url=%2Fpass:[$$SITE_NAME$$]%2Fcheck_mk%2Fwato.py%3Fmode%3Dfolder[Hosts]*.

++++2. In the *Hosts* table, click the *kubernetescluster* host name to open the *link:/pass:[$$SITE_NAME$$]/check_mk/index.py?start_url=%2Fpass:[$$SITE_NAME$$]%2Fcheck_mk%2Fwato.py%3Ffolder%3D%26host%3Dkubernetescluster%26mode%3Dedit_host[Properties of host kubernetescluster]* page.

++++3. Click *link:/pass:[$$SITE_NAME$$]/check_mk/index.py?start_url=%2Fpass:[$$SITE_NAME$$]%2Fcheck_mk%2Fwato.py%3Ffolder%3D%26host%3Dkubernetescluster%26mode%3Dinventory[Save & run service discovery]*.

On the *Services of host kubernetescluster* page you specify which services you want to monitor on the host.
The usual method for adding the newly discovered services is to simply accept all.
That way also all host labels will be added in one go.

++++4. Click *Accept all*.


[#setup_dcd]
== Setup dynamic host management

Services that belong to the individual components of your cluster are not assigned to the `kubernetescluster` host directly, but to so-called _piggyback_ hosts.
In order to automatically create hosts for all the components within your cluster, you have to setup the _dynamic host management_.

++++1. Click *Setup > Hosts > Dynamic host management* and then click *link:/pass:[$$SITE_NAME$$]/check_mk/index.py?start_url=%2Fpass:[$$SITE_NAME$$]%2Fcheck_mk%2Fwato.py%3Fmode%3Dedit_dcd_connection[Add connection]*.

++++2. In the *General properties* box, enter a unique ID and a title for the connection.

++++3. In the *Connection properties* box, check *Restrict source hosts* and enter the `kubernetescluster` host.

++++4. In *Piggyback creation options > Create hosts in* you can select a folder other than *Main* (if already present) in which the piggyback hosts are to be created.

++++5. The preselected *Host attributes to set* are in general correct for piggyback hosts and do not need to be altered.

++++6. In *Delete vanished hosts* check *Automatically delete hosts without piggyback data*.

++++7. Click *Save*.


[#activate_changes]
== Activate changes

++++1. Click the yellow button on the top right of each configuration environment page with the number of pending changes that are not yet activated:

image::onboarding_button_pending_changes.png[alt="Button on 'Setup' pages with number of pending changes."]

This opens the *link:/pass:[$$SITE_NAME$$]/check_mk/index.py?start_url=%2Fpass:[$$SITE_NAME$$]%2Fcheck_mk%2Fwato.py%3Fmode%3Dchangelog[Activate pending changes]* page.

However, the _Onboarding Guide_ you are currently reading is covering the top right corner and thus the yellow button.
So, close the Guide, click the yellow button and open the Guide again.

++++2. Click *Activate on selected sites*.

Checkmk initially saves all changes you make in the *Setup* menu in a temporary _configuration environment_.
Only by activating the pending changes these will be transferred to the _monitoring environment_.
The monitoring environment is accessed via the *Monitor menu*.


[#open_dashboard]
== Open Kubernetes dashboard

For a convenient start into monitoring Kubernetes, Checkmk ships a special Kubernetes dashboard:

++++1. To open it, click *Monitor > (Applications)* and then *link:/pass:[$$SITE_NAME$$]/check_mk/index.py?start_url=%2Fpass:[$$SITE_NAME$$]%2Fcheck_mk%2Fdashboard.py%3Fname%3Dkubernetes_overview[Kubernetes]*.

This step concludes the Monitor Kubernetes topic.
If you would like to have this topic described in more detail and with background information refer to the link:https://docs.checkmk.com/saas/en/monitoring_kubernetes.html[Checkmk Cloud User Guide^].
