// -*- coding: utf-8 -*-
// IGNORE
include::global_attr.adoc[]
= Configure check parameters for a service
:revdate: 2024-07-16
:title: Configure check parameters for a service
:description: To monitor services correctly, they require their parameters to be well-defined. How to set parameters for services is therefore explained here.


[#prerequisites]
== Prerequisites

You have already created one or more hosts and discovered the services.

Every service has _default values_ for the parameters.
Those can now be set to meet your needs.
The most common practice is the setting of thresholds for the WARN and CRIT states.

As the available services depend on the hosts you are working with, we will be using an example to describe the general approach.

If you monitor a unix-type system, you should have the *CPU load* service on this host.
In case you do not have this service, you may use any other service to follow this topic.


[#service_discovery]
== Run a service discovery

++++1. Click *Setup > Hosts > link:/pass:[$$SITE_NAME$$]/check_mk/index.py?start_url=%2Fpass:[$$SITE_NAME$$]%2Fcheck_mk%2Fwato.py%3Fmode%3Dfolder[Hosts]*.

++++2. In the *Hosts* table, click the name of the desired host to open the *Properties of host* page.

++++3. Click *Save & run service discovery* to open the *Services of host* page.


[#show_parameters]
== Make the parameters visible

You can display the parameters for all services directly in the *Services of host* page:

++++1. In the menu bar click *Display > Details* and switch on *Show check parameters*.

Now, an additional column is displayed showing the currently set parameters for each service.


[#edit_parameters]
== Edit the parameters

++++1. In the *CPU load* service row click the bar chart symbol to open the *CPU load (not utilization!) for host* page.

++++2. Click *Add rule*.

++++3. In the *Value* box modify the parameters to fit your needs.

In this example, the *Levels on CPU load* is decreased from the default settings:

image::onboarding_configure_parameters.png[alt="Editing values of a service parameter."]

++++4. Click *Save*.


[#activate_changes]
== Activate changes

++++1. Click the yellow button on the top right of each configuration environment page with the number of pending changes that are not yet activated:

image::onboarding_button_pending_changes.png[alt="Button on 'Setup' pages with number of pending changes."]

This opens the *link:/pass:[$$SITE_NAME$$]/check_mk/index.py?start_url=%2Fpass:[$$SITE_NAME$$]%2Fcheck_mk%2Fwato.py%3Fmode%3Dchangelog[Activate pending changes]* page.

++++2. Click *Activate on selected sites*.

This topic gave a brief introduction on how to modify and check parameters for services.
If you would like to have this topic described in more detail and with background information refer to the link:https://docs.checkmk.com/saas/en/wato_services.html#parameters[Checkmk Cloud User Guide^].
