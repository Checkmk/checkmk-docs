// -*- coding: utf-8 -*-
// IGNORE
include::global_attr.adoc[]
= Websites
:revdate: 2024-07-22
:title: Monitor a website
:description: Checkmk provides active checks that allow you to monitor network services conveniently from the outside by directly contacting a network protocol at the target host, in this case HTTP(S).


[#create_host]
== Create a host

In this step the `www.checkmk.com` website is created as host:

++++1. Click *Setup > Hosts > Hosts* to open the *Main* folder page and then click *link:wato.py?folder=&mode=newhost["Add host", window=main]*.

++++2. Set *Host name* to `www.checkmk.com`.

++++3. In the *Monitoring agents* box, set *Checkmk agent / API integrations* to *No API integrations, no Checkmk agent*.

++++4. In the *Custom attributes* box, check *Labels*, click *Add some label* and enter `webprotocol:https`.

image::onboarding_add_hosts_websites_step1.png[alt="Create a host for the website you want to monitor"]

++++5. Click *Save & view folder*.

You can add more web servers in the same way by simply applying the special host label to them.


[#configure_active_check]
== Configure the active check

Let's assume you want to monitor the validity of the certificates of all web servers in your infrastructure, and ensure response times of less than one second and returning a status code of 200.
This example assumes furthermore that all web servers to be monitored have the `webprotocol:https` host _label_ applied.

A website is monitored by a so-called _active check_.
This check is configured using a rule:

++++1. Click *Setup > Services > HTTP, TCP, Email, ... > Check HTTP web service* and then click *link:wato.py?filled_in=new_rule&ruleset_back_mode=rulesets&rule_folder=&varname=active_checks%3Ahttpv2&mode=new_rule&folder=&_new_dflt_rule=SET["Add rule", window=main]*.

++++2. In the *Value* box, click *Add new endpoint*.

++++3. Set *Name* to `Basic website health` and *URL* to `\https://$HOSTNAME$/`.

++++4. In the *Standard settings for all endpoints* section, check *Response time*, and set the fixed thresholds for *Warning at* to `1` second and *Critical at* to `2` seconds.

++++5. Check *Status code*, click *Add new entry* and set *Expected* to `200`.

++++6. Check *Certificate validity*, and set the fixed thresholds for *Warning below* to `15` days and *Critical below* to `8` days.

image::onboarding_add_hosts_websites_step2.1.png[alt="Create rule to monitor validity of certificates"]

++++7. In the *Conditions* box, right of *Host labels* click *Add to condition* and set *Label is* to `webprotocol:https`.

image::onboarding_add_hosts_websites_step2.2.png[alt="Set label as condition"]

++++8. Click *Save*.

By using the `HOSTNAME` environment variable as URL and the host label as condition, this rule is valid without further changes to all the hosts having the `webprotocol:https` host label applied.


[#activate_changes]
== Activate changes

++++1. Click this link *link:wato.py?mode=changelog["Activate pending changes", window=main]*

This opens the activate changes page.

++++2. Click *Activate on selected sites*.

image::onboarding_activate_changes.png[alt="Activate changes"]

Checkmk initially saves all changes you make in the *Setup* menu in a temporary _configuration environment_.
Only by activating the pending changes these will be transferred to the _monitoring environment_.
The monitoring environment is accessed via the *Monitor menu*.


[#control_success]
== Control success

++++1. Click *Monitor*, enter `Basic website health` in the search field and press ENTER.

You will receive a list of all hosts and their `Basic website health` services that monitor the websites.

image::onboarding_web_server_service_search.png[alt="List of hosts with 'Basic webserver health' service."]

This step concludes the Monitor a website topic.
If you would like to have this topic described in more detail and with background information refer to the link:https://docs.checkmk.com/saas/en/active_checks.html#setup[Checkmk Cloud User Guide^].
