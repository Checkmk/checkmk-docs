// -*- coding: utf-8 -*-
// IGNORE
include::global_attr.adoc[]
= Disable services that are not relevant for you
:revdate: 2024-08-29
:title: Disable services
:description: You will not necessarily want to monitor everything that Checkmk finds. By selectively disabling services you can exclude services that are of no interest to you from the monitoring.


[#service_discovery]
== Run a service discovery

++++1. Click *Setup > Hosts > link:wato.py?mode=folder["Hosts", window=main]*.

++++2. In the *Hosts* table, click the name of a host to open the *Properties of host* page.

++++3. Click *Save & run service discovery* to open the *Services of host* page.

image::onboarding_adjust_services_disable_step1.png[alt="Run service discovery"]

All of the services currently being monitored are displayed in the *Monitored services* table.


[#disable_click]
== Disable by mouse click

++++1. In the row of the service you want to disable, click the red button with the cross.

The service will be removed from the *Monitored services* table.

Disabling services manually is intended for temporary and smaller actions only.
That would simply be too much work and not really practical in an environment with x-thousand services.


[#disable_rule]
== Disable by rule

It is far more elegant and enduring to permanently remove services with the aid of the *Disabled services* rule.
With this rule you can implement a statement like 'I do not want to monitor services beginning with `myservice` on the `myserver01` host.':

++++1. Click *Setup > Services > Discovery rules > link:wato.py?mode=edit_ruleset&varname=ignored_services["Disabled services", window=main]*.

If you disabled a service with a mouse click in the previous step, you will see the corresponding rule on the *Disabled services* page, because Checkmk converts your mouse click internally into a *Disabled services* rule.

++++2. Click *link:wato.py?filled_in=new_rule&ruleset_back_mode=rulesets&rule_folder=&varname=ignored_services&mode=new_rule&folder=&_new_dflt_rule=SET["Add rule", window=main]*.

++++3. In the *Conditions* box, check *Explicit hosts* and select the *myserver01* host.

++++4. Check *Services* and in the input field enter `myservice.*`.

image::onboarding_adjust_services_disable_step3.png[alt="Create a rule to remove a service from monitoring"]

++++5. Click *Save*.


[#enable]
== Re-enable services

On the *Services of host* page, where the service discovery results are displayed, the disabled services are collected in a separate *Disabled Services* table at the bottom of the page.
Here you will find all disabled services, regardless of whether they were disabled by mouse click or by rule.

++++1. In the row of the service you want to enable, click the green button with the plus sign.

The service will be moved from the *Disabled Services* back to the *Monitored services* table.


[#activate_changes]
== Activate changes

++++1. Click this link *link:wato.py?mode=changelog["Activate pending changes", window=main]*

This opens the activate changes page.

++++2. Click *Activate on selected sites*.

image::onboarding_activate_changes.png[alt="Activate changes"]

This step concludes the Disable services topic.
// TK: No User Guide link for this topic, as this section is not providing additional information:
// https://docs.checkmk.com/master/en/wato_services.html#remove_unwanted_services
