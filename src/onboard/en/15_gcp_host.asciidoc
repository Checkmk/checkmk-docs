// -*- coding: utf-8 -*-
// IGNORE
include::global_attr.adoc[]
= Monitor GCP
:revdate: 2024-07-16
:title: Monitor GCP
:description: Checkmk includes a comprehensive module for monitoring the Google Cloud Platform (GCP), consisting of a connector to GCP and an impressive collection of check plug-ins that retrieve and evaluate various metrics and statuses for you.


[#prerequisites]
== Prerequisites

Before you start with Checkmk, collect the following information about the Google Cloud Platform (GCP) infrastructure you want to monitor with Checkmk: the _project ID_ and the _service account key_ of the GCP project.

You will be asked to enter this information into Checkmk when configuring the GCP agent.

You can find details on how to retrieve this information in the link:https://docs.checkmk.com/saas/en/monitoring_gcp.html#preparation_gcp[Checkmk Cloud User Guide].


[#create_host]
== Create a host

Monitoring GCP requires a host to be created in Checkmk:

++++1. Click *Setup > Hosts > Hosts* to open the *Main* folder page and then click *link:/pass:[$$SITE_NAME$$]/check_mk/index.py?start_url=%2Fpass:[$$SITE_NAME$$]%2Fcheck_mk%2Fwato.py%3Ffolder%3D%26mode%3Dnewhost[Add host]*.

++++2. Set *Host name* to `gcp`.

If you enter the suggested name, you can jump via link to the Checkmk user interface also in the following steps of this topic.

++++3. Set *IP address family* to *No IP*.

++++4. Click *Save & view folder*.


[#configure_gcp]
== Configure the GCP agent

A GCP project is monitored by a so-called _special agent_.
This agent is configured with a rule:

++++1. Click *Setup > Agents > VM, cloud, container > Google Cloud Platform (GCP)* and then click *link:/pass:[$$SITE_NAME$$]/check_mk/index.py?start_url=%2Fpass:[$$SITE_NAME$$]%2Fcheck_mk%2Fwato.py%3Fcsrf_token%3D69ac5ef7-928d-4456-ba62-aa545d7980cd%26filled_in%3Dnew_rule%26ruleset_back_mode%3Drulesets%26rule_folder%3D%26varname%3Dspecial_agents%253Agcp%26mode%3Dnew_rule%26folder%3D%26_new_dflt_rule%3DSET[Add rule]*.

++++2. In the *Google Cloud Platform* box, set *Project ID* and *JSON credentials for service account* to the values you previously looked up in your project.

As service account key you will need to copy the entire JSON object (including the curly brackets) into the input field.

++++3. In *GCP services to monitor* select the GCP products to be monitored by the special agent -- preferably only the products that are actually being used in your project.

++++4. In the *Conditions* box, check *Explicit hosts* and select the *gcp* host you created previously.

++++5. Click *Save*.


[#service_discovery]
== Run a service discovery

The service discovery detects all available services that are associated with the `gcp` host:

++++1. Click *Setup > Hosts > link:/pass:[$$SITE_NAME$$]/check_mk/index.py?start_url=%2Fpass:[$$SITE_NAME$$]%2Fcheck_mk%2Fwato.py%3Fmode%3Dfolder[Hosts]*.

++++2. In the *Hosts* table, click the *gcp* host name to open the *link:/pass:[$$SITE_NAME$$]/check_mk/index.py?start_url=%2Fpass:[$$SITE_NAME$$]%2Fcheck_mk%2Fwato.py%3Ffolder%3D%26host%3Dgcp%26mode%3Dedit_host[Properties of host gcp]* page.

++++3. Click *link:/pass:[$$SITE_NAME$$]/check_mk/index.py?start_url=%2Fpass:[$$SITE_NAME$$]%2Fcheck_mk%2Fwato.py%3Ffolder%3D%26host%3Dgcp%26mode%3Dinventory[Save & run service discovery]*.

On the *Services of host gcp* page you specify which services you want to monitor on the host.
The usual method for adding the newly discovered services is to simply accept all.
That way also all host labels will be added in one go.

++++4. Click *Accept all*.


[#setup_dcd]
== Setup dynamic host management

This step is only required if you want to monitor Google Compute Engine (GCE) virtual machine (VM) instances.
Services that are assigned to these instances are not assigned to the `gcp` host, but to so-called _piggyback_ hosts.
You can leave the creation and deletion of these piggyback hosts to Checkmk's _dynamic host management_.

++++1. Click *Setup > Hosts > Dynamic host management* and then click *link:/pass:[$$SITE_NAME$$]/check_mk/index.py?start_url=%2Fpass:[$$SITE_NAME$$]%2Fcheck_mk%2Fwato.py%3Fmode%3Dedit_dcd_connection[Add connection]*.

++++2. In the *General properties* box, enter a unique ID and a title for the connection.

++++3. In the *Connection properties* box, check *Restrict source hosts* and enter the `gcp` host.

++++4. In *Piggyback creation options > Create hosts in* you can select a folder other than *Main* (if already present) in which the piggyback hosts are to be created.

++++5. The preselected *Host attributes to set* are in general correct for piggyback hosts and do not need to be altered.

++++6. In *Delete vanished hosts* check *Automatically delete hosts without piggyback data*.

++++7. Click *Save*.


[#activate_changes]
== Activate changes

++++1. Click the link:/pass:[$$SITE_NAME$$]/check_mk/index.py?start_url=%2Fpass:[$$SITE_NAME$$]%2Fcheck_mk%2Fwato.py%3Fmode%3Dchangelog[yellow button] on the top right of each configuration environment page with the number of pending changes that are not yet activated:

image::onboarding_button_pending_changes.png[alt="Button on 'Setup' pages with number of pending changes."]

However, the _Onboarding Guide_ you are currently reading is covering the top right corner and thus the yellow button.
So, close the Guide, click the yellow button and open the Guide again.

++++2. Click *Activate on selected sites*.

Checkmk initially saves all changes you make in the *Setup* menu in a temporary _configuration environment_.
Only by activating the pending changes these will be transferred to the _monitoring environment_.
The monitoring environment is accessed via the *Monitor menu*.


[#open_dashboards]
== Open GCP dashboards

For a convenient start into monitoring GCP, Checkmk ships two built-in dashboards:

++++1. Click *Monitor > Cloud* and then  *link:/pass:[$$SITE_NAME$$]/check_mk/index.py?start_url=%2Fpass:[$$SITE_NAME$$]%2Fcheck_mk%2Fdashboard.py%3Fname%3Dgcp_gce_overview[GCP GCE instances]* or 
*link:/pass:[$$SITE_NAME$$]/check_mk/index.py?start_url=%2Fpass:[$$SITE_NAME$$]%2Fcheck_mk%2Fdashboard.py%3Fname%3Dgcp_storage_overview[GCP cloud storage]*.    

This step concludes the Monitor GCP topic.
If you would like to have this topic in more detail and with background information refer to the link:https://docs.checkmk.com/saas/en/monitoring_gcp.html[Checkmk Cloud User Guide].
