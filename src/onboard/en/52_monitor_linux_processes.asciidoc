// -*- coding: utf-8 -*-
// IGNORE
include::global_attr.adoc[]
= Monitor Linux processes
:revdate: 2024-07-17
:title: Monitor Linux processes
:description: It would make little sense for Checkmk to monitor each process found on a host with its own service, because there are simply too many of them on typical Linux and Windows hosts. With the process discovery, you tell the service discovery which processes it should be on the lookout for.


[#process_discovery]
== Find processes

With the following example rule {CMK} will search Apache processes and create a separate service for each operating system user for which such a process is found:

++++1. Click *Setup > Services > Discovery rules >  * and then click *link:/pass:[$$SITE_NAME$$]/check_mk/index.py?start_url=%2Fpass:[$$SITE_NAME$$]%2Fcheck_mk%2Fwato.py%3Fcsrf_token%3D4119b21a-dfcb-4851-a79a-2fcf3824d112%26filled_in%3Dnew_rule%26ruleset_back_mode%3Drulesets%26rule_folder%3D%26varname%3Dinventory_processes_rules%26mode%3Dnew_rule%26folder%3D%26_new_dflt_rule%3DSET[Add rule]*.

++++2. In the *Process discovery* box, set *Process name* to `Apache %u`.

In the resulting service name `%u` will be replaced with the user name.

++++3. Check *Process Matching* and set *Executable* to `/usr/sbin/apache2`.

++++4. Check *Name of operating system user* and select *Grab user from found processes*.

++++5. Leave *Default parameters for detected services* untouched in this rule.

++++6. In the *Conditions* box, make sure that this rule is applied to Linux hosts only.

++++7. Click *Save*.

Note, that the process discovery is generic and not restricted to Linux hosts.
You can proceed in the same way for Windows processes.
To find `svhost` processes, for example, set *Process name* to `svhost %u` and *Executable* to `svhost.exe`.
In the *Conditions* box, make sure that this rule is applied to Windows hosts only.

This completes the definition of _what_.


[#service_discovery]
== Run a service discovery

++++1. Click *Setup > Hosts > link:/pass:[$$SITE_NAME$$]/check_mk/index.py?start_url=%2Fpass:[$$SITE_NAME$$]%2Fcheck_mk%2Fwato.py%3Fmode%3Dfolder[Hosts]*.

++++2. In the *Hosts* table, click a name of a Linux host to open the *Properties of host* page.

++++3. Click *Save & run service discovery*.

You will find one or more new services in the *Undecided services - currently not monitored* table with the name *Process Apache <user_name>*.

++++4. Click *Accept all*.


[#state_and_count]
== Evaluate processes

The definition of _how_ defines the thresholds/check parameters for the individual services.
If you define these values independent of the process discovery with its own, following rule, a change will be valid even without a new service discovery.

In this step, you will change the thresholds for the WARN and CRIT states dependent of the maximum number of processes:

++++1. Click *Setup > Services > Service monitoring rules > State and count of processes* and then click *link:/pass:[$$SITE_NAME$$]/check_mk/index.py?start_url=%2Fpass:[$$SITE_NAME$$]%2Fcheck_mk%2Fwato.py%3Fcsrf_token%3D4119b21a-dfcb-4851-a79a-2fcf3824d112%26filled_in%3Dnew_rule%26ruleset_back_mode%3Drulesets%26rule_folder%3D%26varname%3Dcheckgroup_parameters%253Aps%26mode%3Dnew_rule%26folder%3D%26_new_dflt_rule%3DSET[Add rule]*.

++++2. In the *Value* box, check *Levels for process count* and change the default value `99999` for *Warning above* to `20` and for *Critical above* to `30`.

++++3. In the *Conditions* box, make sure that this rule is applied to Linux hosts only.

++++4. Click *Save*.


[#activate_changes]
== Activate changes

++++1. Click the yellow button on the top right of each configuration environment page with the number of pending changes that are not yet activated:

image::onboarding_button_pending_changes.png[alt="Button on 'Setup' pages with number of pending changes."]

This opens the *link:/pass:[$$SITE_NAME$$]/check_mk/index.py?start_url=%2Fpass:[$$SITE_NAME$$]%2Fcheck_mk%2Fwato.py%3Fmode%3Dchangelog[Activate pending changes]* page.

++++2. Click *Activate on selected sites*.

This step concludes the Monitor Linux processes topic.
If you would like to have this topic in more detail and with background information refer to the link:https://docs.checkmk.com/saas/en/wato_services.html#processes[Checkmk Cloud User Guide].
