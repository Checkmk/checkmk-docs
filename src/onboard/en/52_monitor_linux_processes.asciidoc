// -*- coding: utf-8 -*-
// IGNORE
include::global_attr.adoc[]
= Linux processes
:revdate: 2024-08-29
:title: Monitor Linux processes
:description: It would make little sense for Checkmk to monitor each process found on a host with its own service, because there are simply too many of them on typical Linux and Windows hosts. With the process discovery, you tell the service discovery which processes it should be on the lookout for.


[#process_discovery]
== Find processes

****
*Please note* the process discovery described below is operating system independent. You can proceed in the same way for Windows services.
****

With the following example rule {CMK} will search Apache processes and create a separate service for each operating system user for which such a process is found:

++++1. Click *Setup > Services > Discovery rules > Process discovery* and then click *link:wato.py?filled_in=new_rule&ruleset_back_mode=rulesets&rule_folder=&varname=inventory_processes_rules&mode=new_rule&folder=&_new_dflt_rule=SET["Add rule", window=main]*.

++++2. In the *Process discovery* box, set *Process name* to `Apache %u`.

In the resulting service name `%u` will be replaced with the user name.

++++3. Check *Process Matching* and set *Executable* to `/usr/sbin/apache2`.

++++4. Check *Name of operating system user* and select *Grab user from found processes*.

image::onboarding_adjust_services_linux_step1.png[alt="Configure process discovery"]

++++5. Leave *Default parameters for detected services* untouched in this rule.

++++6. In the *Conditions* box, assign this rule to the Linux host on which you want to monitor these processes.

++++7. Click *Save*.

This completes the definition of _what_.


[#service_discovery]
== Run a service discovery

++++1. Click *Setup > Hosts > link:wato.py?mode=folder["Hosts", window=main]*.

++++2. In the *Hosts* table, click the name of the Linux host to which you assigned the rule in the first step.
This opens the *Properties of host* page.

++++3. Click *Save & run service discovery*.

image::onboarding_adjust_services_linux_step2.png[alt="Run service discovery"]

You will find one or more new services in the *Undecided services - currently not monitored* table with the name *Process Apache <user_name>*.

++++4. Click *Accept all*.


[#state_and_count]
== Evaluate processes

In order to define _how_ the services on your Linux host should be monitored, you can use the *State and count of processes* rule.
A change made with this rule will be valid even without a new service discovery.

In this step, you will change the thresholds for the WARN and CRIT states depending on the maximum number of processes:

++++1. Click *Setup > Services > Service monitoring rules > State and count of processes* and then click *link:wato.py?filled_in=new_rule&ruleset_back_mode=rulesets&rule_folder=&varname=checkgroup_parameters%3Aps&mode=new_rule&folder=&_new_dflt_rule=SET["Add rule", window=main]*.

++++2. In the *Value* box, check *Levels for process count* and change the default value `99999` for *Warning above* to `20` and for *Critical above* to `30`.

image::onboarding_adjust_services_linux_step3.png[alt="Define how your Linux processes should be monitored"]

++++3. In the *Conditions* box, assign this rule again to the Linux host on which you want to monitor the processes.

++++4. Click *Save*.


[#activate_changes]
== Activate changes

++++1. Click this link *link:wato.py?mode=changelog["Activate pending changes", window=main]*

This opens the activate changes page.

++++2. Click *Activate on selected sites*.

image::onboarding_activate_changes.png[alt="Activate changes"]

This step concludes the Monitor Linux processes topic.
If you would like to have this topic described in more detail and with background information refer to the link:https://docs.checkmk.com/saas/en/wato_services.html#processes[Checkmk Cloud User Guide^].
