// -*- coding: utf-8 -*-
include::global_attr.adoc[]
= Benachrichtigungen einschalten
:revdate: 2025-01-30
:title: Benachrichtigungen einschalten
:description: Für Benachrichtigungen in {CMK} muss der Versand per E-Mail vorbereitet und aktiviert werden. Anschließend werden Benachrichtigungen getestet.

{related-start}
xref:intro_extend#[Das Monitoring weiter ausbauen]
xref:notifications#[Benachrichtigungen]
{related-end}


[#notifications]
== Grundlegendes zu Benachrichtigungen

Benachrichtigungen (_notifications_) bedeuten in {CMK}, dass Benutzer aktiv darüber informiert werden, wenn sich der Zustand eines Hosts oder Services ändert.
Nehmen wir an, zu einem bestimmten Zeitpunkt geht auf dem Host `mywebsrv17` der Service `HTTP foo.bar` von {OK} auf {CRIT}.
{CMK} erkennt dies und sendet standardmäßig an alle Kontaktpersonen dieses Services eine E-Mail mit den wichtigsten Daten zu diesem Ereignis.
Später ändert sich der Zustand wieder von {CRIT} auf {OK} und die Kontakte bekommen eine erneute E-Mail -- diesmal zu dem Ereignis, das _Recovery_ genannt wird.

Dies ist aber nur die einfachste Art der Benachrichtigung.
Es gibt zahlreiche Möglichkeiten, wie Sie das verfeinern können:

* Sie können per SMS, Pager, Slack und anderen Internetdiensten benachrichtigen.
* Sie können Benachrichtigungen an bestimmten xref:glossar#time_period[Zeitperioden] festmachen, z.B. um Bereitschaftsdienste zu berücksichtigen.
* Sie können Eskalationen definieren, falls der zuständige Kontakt nicht schnell genug aktiv wird.
* Benutzer können selbstständig Benachrichtigungen „abonnieren“ oder abbestellen, wenn Sie das zulassen möchten.
* Sie können generell über Regeln festlegen, wer wann über was benachrichtigt werden soll.

Bevor Sie jedoch mit den Benachrichtigungen beginnen, sollten Sie noch Folgendes beachten:

* Benachrichtigungen sind ein optionales Feature.
Manche Anwender verzichten auf Benachrichtigungen, da Sie einen Leitstand haben, der rund um die Uhr besetzt ist und nur mit der Statusoberfläche arbeitet.

* Aktivieren Sie die Benachrichtigungen zunächst nur für sich selbst und machen Sie sich für *alles* zuständig.
Beobachten Sie mindestens ein paar Tage, wie groß das Volumen an Benachrichtigungen ist.

* Aktivieren Sie die Benachrichtigungen für andere Benutzer erst dann, wenn Sie die Fehlalarme (_false positives_) auf ein Minimum reduziert haben.
Was Sie dafür tun können, haben wir im xref:intro_finetune#[Kapitel über die Feinjustierung des Monitorings] beschrieben.


ifdef::onprem[]
[#notify_init]
== E-Mail-Versand vorbereiten

Der einfachste und bei weitem üblichste Weg ist die Benachrichtigung per E-Mail.
In einer E-Mail ist genug Platz, um auch die Graphen von Metriken mitzusenden.

Bevor Sie per E-Mail benachrichtigen können, muss Ihr {CMK}-Server für das Versenden von E-Mails eingerichtet sein.
Bei allen unterstützten Linux-Distributionen läuft das auf Folgendes hinaus:

. Installieren Sie einen SMTP-Serverdienst.
Dies geschieht meist automatisch bei der Installation der Distribution.

. Geben Sie einen *Smarthost* an.
Nach diesem werden Sie meist bei der Installation des SMTP-Servers gefragt.
Der Smarthost ist ein Mailserver in Ihrem Unternehmen, der für {CMK} die Zustellung der E-Mails übernimmt.
Sehr kleine Unternehmen haben meist keinen eigenen Smarthost.
In diesem Fall verwenden Sie den SMTP-Server, der Ihnen von Ihrem E-Mail-Provider bereitgestellt wird.

Wenn der E-Mail-Versand korrekt eingerichtet ist, sollten Sie in der Lage sein, auf der Kommandozeile eine E-Mail zu versenden, z.B. über diesen Befehl:

[{shell-raw}]
----
{c-omd} echo "test-content" | mail -s test-subject bill.martin@example.com
----

Die E-Mail sollte ohne Verzögerung zugestellt werden.
Falls das nicht klappt, finden Sie Hinweise in der Logdatei des SMTP-Servers im Verzeichnis `/var/log/`.
Mehr Details zum Einrichten des E-Mail-Versands unter Linux finden Sie im xref:notifications#smtp[Artikel über Benachrichtigungen.]
endif::[]


[#mail_activate]
== E-Mail-Benachrichtigungen aktivieren

ifdef::saas[]
Der einfachste und bei weitem üblichste Weg ist die Benachrichtigung per E-Mail.
In einer E-Mail ist genug Platz, um auch die Graphen von Metriken mitzusenden.

{CE} nutzt den Amazon Simple Email Service (SES), so dass der Versand von E-Mails für Benachrichtigungen ohne weitere Konfiguration möglich ist.
endif::[]

Wenn der E-Mail-Versand funktioniert, ist das Aktivieren der Benachrichtigungen sehr einfach.
Damit ein Benutzer Benachrichtigungen per E-Mail erhält, müssen die folgenden Voraussetzungen erfüllt sein:

ifdef::onprem[]
* Dem Benutzer ist eine E-Mail-Adresse zugeordnet.
endif::[]

* Der Benutzer ist für Hosts oder Services zuständig -- über die Zuweisung von Kontaktgruppen.

* Es gibt eine Benachrichtigungsregel, die dafür sorgt, dass die Mitglieder der Kontaktgruppen per E-Mail benachrichtigt werden.

ifdef::onprem[]
E-Mail-Adresse und Kontaktgruppen weisen Sie über die Eigenschaften des Benutzers zu, wie wir es zuvor im xref:intro_users#create_users[Kapitel über die Benutzerverwaltung] gezeigt haben, z. B. indem Sie dem Benutzerkonto `cmkadmin` Ihre E-Mail-Adresse und die Kontaktgruppe [.guihint]#Everything# hinzufügen.
{CMK} wird mit einer Benachrichtigungsregel ausgeliefert, die jeden Kontakt der Hosts und Services über wichtige Zustandsänderungen per HTML-E-Mail benachrichtigt.
endif::[]

ifdef::saas[]
Kontaktgruppen weisen Sie über die Eigenschaften des Benutzers zu, wie wir es zuvor im xref:intro_users#create_users[Kapitel über die Benutzerverwaltung] gezeigt haben, z. B. indem Sie Ihrem Benutzerkonto die Kontaktgruppe [.guihint]#Everything# hinzufügen.
{CE} wird mit Benachrichtigungsregeln ausgeliefert, die jeden Kontakt wichtiger Hosts über wichtige Zustandsänderungen dieser Hosts und deren Services per HTML-E-Mail benachrichtigt.
endif::[]

Was dabei „wichtig“ bedeutet, erfahren Sie im nächsten Abschnitt.


[#test]
== Benachrichtigungen testen
// FIXME 2.4.0 SaaS: GUI notifications overhaul (neue Screenshots sollten ausreichen)

Es wäre ein bisschen umständlich, zum Test der Benachrichtigungen auf ein echtes Problem zu warten oder gar eines zu provozieren.
Einfacher geht das mit [.guihint]#Test notifications,# einem Werkzeug, mit dem Sie eine Benachrichtigung für einen Host oder einen Service simulieren und die Benachrichtigung auch gleich versenden lassen können.

Öffnen Sie zuerst mit [.guihint]#Setup > Events > Notifications# die Benachrichtigungszentrale:

ifdef::onprem[]
image::intro_notifications.png[alt="Einstiegsseite im Setup für die Benachrichtigungen."]

Wenn Sie diese Seite das erste Mal aufrufen, werden Sie über die noch nicht konfigurierte „Fallback-E-Mail-Adresse" informiert, wie im vorherigen Screenshot zu sehen ist.
Diese Information können Sie im Moment ignorieren.
Wir gehen auf das Thema im Artikel zu xref:notifications.html#fallback[Benachrichtigungen] ein.
Bis Sie diesen Abschnitt gelesen haben, empfehlen wir, die Information als Erinnerung stehen zu lassen, und sie nicht durch Klick auf [.guihint]#Do not show again# wegzuklicken.

Ansonsten zeigt diese Seite Statusinformationen -- wie die Zahl gesendeter und fehlgeschlagener Benachrichtigungen -- und dient zum Aufruf von Aktionen rund um das Thema Benachrichtigungen, z. B. der Erstellung einer Benachrichtigungsregel, aber auch dem Aufruf von Host- und Service-Regeln, die Benachrichtigungen beeinflussen können.

Ganz unten auf der Seite [.guihint]#Notifications,# im Kasten [.guihint]#Global notification rules#, wird die von {CMK} mitgelieferte _globale_ Benachrichtigungsregel angezeigt.
Global deshalb, weil auch jeder Benutzer eigene, benutzerdefinierte Benachrichtigungsregeln erstellen kann.

Die mitgelieferte Benachrichtigungsregel sorgt dafür, dass Benachrichtigungen über alle wichtigen Zustandswechsel von Hosts und Services per HTML-E-Mail an alle zuständigen Kontakte versendet werden.
Als „wichtig“ werden dabei alle Zustandswechsel von Hosts nach {DOWN} und {UP} und von Services nach {CRIT}, {WARN} und {OK} eingestuft.
endif::[]

ifdef::saas[]
image::intro_notifications_saas.png[alt="Einstiegsseite im Setup für die Benachrichtigungen."]

Ganz unten auf der Seite, im Kasten [.guihint]#Global notification rules#, werden die von {CE} mitgelieferten _globalen_ Benachrichtigungsregeln angezeigt.
Global deshalb, weil auch jeder Benutzer eigene, benutzerdefinierte Benachrichtigungsregeln erstellen kann.

Die mitgelieferten Benachrichtigungsregeln sorgen dafür, dass Benachrichtigungen über alle wichtigen Zustandswechsel von wichtigen Hosts und deren Services per HTML-E-Mail an alle zuständigen Kontakte versendet werden.
Als „wichtig“ werden dabei alle Zustandswechsel von Hosts nach {DOWN}, {UP} und {UNREACH} und von Services unter anderem nach {CRIT} und {UNKNOWN} eingestuft.
Wichtige Hosts sind dabei solche, denen das xref:glossar#host_tag[Host-Merkmal] [.guihint]#Productive system# oder [.guihint]#Business critical# zugewiesen ist.

Jeder Host in {CMK} ist erst einmal ein _produktives_ System, da ihm standardmäßig das zugehörige Host-Merkmal zugewiesen wird.
Für einen _geschäftskritischen_ Host werden dagegen granulare Benachrichtigungen versendet, da in der dafür vordefinierten Regel mehr Zustandswechsel aktiviert sind.
Schließlich liefert ein Host mit dem Merkmal [.guihint]#Test system# standardmäßig gar keine Benachrichtigungen.
Wie Sie so ein Host-Merkmal einem Host zuordnen, hatten wir im Kapitel zur xref:intro_finetune.html#assign_tag_to_host[Feinjustierung des Monitorings] gezeigt.
endif::[]

Beim Benachrichtigungstest werden die angezeigten Benachrichtigungsregeln ausgewertet.
Sie öffnen den Benachrichtigungstest mit dem Knopf [.guihint]#Test notifications:#

ifdef::onprem[]
image::intro_test_notifications.png[alt="Dialog zur Festlegung der Eigenschaften der simulierten Benachrichtigung."]
endif::[]

ifdef::saas[]
image::intro_test_notifications_saas.png[alt="Dialog zur Festlegung der Eigenschaften der simulierten Benachrichtigung."]
endif::[]

Wählen Sie einfach einen Host aus und dann als Ereignis einen beliebigen Zustandswechsel.
Durch Aktivieren der Checkbox [.guihint]#Send out# legen Sie fest, dass die Benachrichtigung nicht nur simuliert, sondern auch tatsächlich versendet wird.

Klicken Sie auf [.guihint]#Test notifications.#
Die Ergebnisse werden unten auf der Seite eingeblendet.
Am wichtigsten ist erste Zusammenfassung [.guihint]#Analysis results:#

image::intro_test_notifications_result1.png[alt="Die Zusammenfassung zur Analyse der simulierten Benachrichtigung."]

Für einen erfolgreichen Test muss zumindest eine Benachrichtigungsregel greifen.
Die Meldung `Notifications have been sent` zeigt an, dass die Benachrichtigung auch tatsächlich versendet wurde.

Unter [.guihint]#Resulting notifications# sehen Sie dann, an wen und über welchen Weg die Benachrichtigung abgesetzt wurde:

ifdef::onprem[]
image::intro_test_notifications_result2.png[alt="Die resultierende Benachrichtigung zur Simulation."]
endif::[]

ifdef::saas[]
image::intro_test_notifications_result2_saas.png[alt="Die resultierende Benachrichtigung zur Simulation."]
endif::[]

Im untersten Kasten wird schließlich in der ersten Spalte angezeigt, welche der Benachrichtigungsregeln gegriffen hat icon:icon_checkmark[alt="Symbol zur Anzeige eines positiven Status."] und welche nicht icon:icon_hyphen[alt="Symbol zur Anzeige eines negativen Status."]:

ifdef::onprem[]
image::intro_test_notifications_result3.png[alt="Für jede Benachrichtigungsregel wird angezeigt, ob sie gegriffen hat."]
endif::[]

ifdef::saas[]
image::intro_test_notifications_result3_saas.png[alt="Für jede Benachrichtigungsregel wird angezeigt, ob sie gegriffen hat."]
endif::[]

Der Test sollte sofort zu einer E-Mail für dieses simulierte Problem führen.
Die ausführliche Beschreibung zu den Optionen und den Resultaten für den Benachrichtigungstest erhalten Sie im Artikel zu den xref:notifications#notification_testing[Benachrichtigungen.]

Falls Sie im realen Monitoring, d. h. abseits der Simulation, keine Benachrichtigung bekommen haben, muss das nicht gleich ein Fehler sein.
Es gibt Situationen, in denen die Benachrichtigungen von {CMK} absichtlich unterdrückt werden, z.B.:

* wenn Benachrichtigungen im Snapin xref:intro_tools#master_control[[.guihint]#Master control#] ausgeschaltet sind;

* wenn ein Host oder Service sich in einer Wartungszeit befindet;

* wenn ein Host {DOWN} ist und daher keine Benachrichtigungen seiner Services ausgelöst werden;

* wenn der Zustand in letzter Zeit zu oft gewechselt hat und der Service deswegen als icon:icon_flapping[alt="Symbol zur Anzeige eines unstetigen Zustands."] xref:glossar#flapping[unstetig] (_flapping_) markiert wurde.


[#finetune]
== Benachrichtigungen feinjustieren

Sie können Benachrichtigungen in {CMK} auf unterschiedlichste Art mit komplexen Regeln an Ihre Bedürfnisse (bzw. die Ihrer Firma) anpassen.
Alle Einzelheiten dazu erfahren Sie im xref:notifications#[Artikel über Benachrichtigungen.]


[#troubleshoot]
== Fehlersuche

Das Benachrichtigungsmodul in {CMK} ist sehr komplex -- weil es sehr viele, sehr unterschiedliche Anforderungen abdeckt, die sich in langjähriger Praxiserfahrung als wichtig herausgestellt haben.
Die Frage „Warum hat {CMK} hier nicht benachrichtigt?“ wird Ihnen deswegen gerade am Anfang öfter gestellt werden, als Sie vielleicht vermuten.
Deswegen finden Sie hier ein paar Tipps zur Fehlersuche.

Bei Problemen mit Benachrichtigungen überprüfen Sie zuerst, ob es fehlgeschlagene Benachrichtigungen gibt.
Diese werden auf der Seite [.guihint]#Monitor > System > Failed notifications# aufgelistet.
Die Spalte [.guihint]#Summary# zeigt den Grund des Fehlers -- oder gibt Ihnen zumindest einen Hinweis auf die Ursache.

Eine weitere Möglichkeit bietet Ihnen {CMK} durch die Analyse der letzten Benachrichtigungen, die das System erzeugt hat, und die die Benachrichtigungsregeln durchlaufen haben.
ifdef::onprem[]
Die Tabelle der Benachrichtigungen für die Analyse öffnen Sie mit [.guihint]#Setup > Events > Analyze recent notifications.#
endif::[]
ifdef::saas[]
Die Tabelle der Benachrichtigungen für die Analyse öffnen Sie mit [.guihint]#Setup > Events > Notifications#.
Klicken Sie auf dieser Seite [.guihint]#Show analysis#.
endif::[]
Hier können Sie eine Benachrichtigung erneut senden, sich deren Kontext anzeigen lassen und die zugehörigen Benachrichtigungsregeln analysieren lassen.
Mehr Information dazu finden Sie im Artikel zu den xref:notifications#rule_analysis[Benachrichtigungen.]

Wenn eine Benachrichtigung von einem bestimmten Service nicht ausgelöst wurde, ist der erste Schritt, die Historie der Benachrichtigungen für diesen Service zu kontrollieren.
Dazu öffnen Sie die Detailseite des Services (indem Sie im Monitoring auf den Service klicken).
Wählen Sie im Menü [.guihint]#Service > Service notifications.#
Dort finden Sie alle Ereignisse zu Benachrichtigungen für diesen Service chronologisch von neu nach alt aufgelistet.

ifdef::onprem[]
Hier ist ein Beispiel eines Services, für den die Benachrichtigung versucht wurde, aber der E-Mail-Versand gescheitert ist, weil kein SMTP-Server installiert ist.

image::intro_service_notifications.png[alt="Liste der Ereignisse zu Benachrichtigungen für einen Service."]

Noch mehr Informationen finden Sie in der Datei `~/var/log/notifiy.log`.
Diese können Sie als Instanzbenutzer z.B. mit dem Befehl `less` auslesen:

[{shell}]
----
{c-omd} less var/log/notify.log
----

Falls Sie `less` noch nicht kennen:
Mit der Tastenkombination `Shift+G` springen Sie ans Ende der Datei (was bei Log-Dateien nützlich ist), und mit der Taste `Q` beenden Sie `less`.

Mit dem Kommando `tail -f` können Sie den Dateiinhalt auch fortlaufend beobachten.
Das ist dann sinnvoll, wenn Sie nur an neuen Meldungen interessiert sind, also solchen, die erst nach der Eingabe von `tail` entstehen.

Hier ist ein Ausschnitt aus `notify.log` für eine erfolgreich ausgelöste Benachrichtigung:

.~/var/log/notify.log
[{file}]
----
2024-04-15 16:21:47,912 [20] [cmk.base.notify] Analysing notification (localhost) context with 14 variables
2024-04-15 16:21:47,912 [20] [cmk.base.notify] Global rule 'Notify all contacts of a host/service via HTML email'...
2024-04-15 16:21:47,913 [20] [cmk.base.notify]  -> matches!
2024-04-15 16:21:47,913 [20] [cmk.base.notify]    - adding notification of martin via mail
2024-04-15 16:21:47,913 [20] [cmk.base.notify] Executing 1 notifications:
2024-04-15 16:21:47,913 [20] [cmk.base.notify]   * notifying martin via mail, parameters: graphs_per_notification, notifications_with_graphs, bulk: no
2024-04-15 16:21:47,913 [20] [cmk.utils.notify] sending command LOG;HOST NOTIFICATION: martin;localhost;DOWN;mail;
2024-04-15 16:21:47,913 [20] [cmk.base.notify]      executing /omd/sites/mysite/share/check_mk/notifications/mail
2024-04-15 16:21:48,458 [20] [cmk.base.notify]      Output: Spooled mail to local mail transmission agent
2024-04-15 16:21:48,501 [20] [cmk.utils.notify] sending command LOG;HOST NOTIFICATION RESULT: martin;localhost;OK;mail;Spooled mail to local mail transmission agent;Spooled mail to local mail transmission agent
----
endif::[]

[TIP]
====
Wenn Sie ganz genau wissen wollen, wann Benachrichtigungen erzeugt werden -- und wann eben nicht -- erfahren Sie die ganze Wahrheit wieder im Artikel zu den xref:notifications#conditions[Benachrichtigungen.]
====

Mit dem Einrichten der Benachrichtigungen haben Sie den letzten Schritt vollzogen:
Ihr {CMK}-System ist einsatzbereit!
Damit sind die Möglichkeiten von {CMK} natürlich noch nicht ansatzweise ausgereizt.

xref:intro_extend#[Weiter geht es mit dem Ausbau des Monitorings]
