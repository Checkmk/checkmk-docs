// -*- coding: utf-8 -*-
// IGNORE Ack
// NOLUNR
include::global_attr.adoc[]
= Benachrichtigungen per SIGNL4
:revdate: draft
:title: Benachrichtigungen per SIGNL4 (notifications)
:description: Sie können Benachrichtigungen von {CMK} an die Alarmierungssoftware SIGNL4 senden lassen. Wie Sie die Anbindung durchführen, erfahren Sie hier.

{related-start}
xref:notifications#[Benachrichtigungen]
{related-end}


SIGNL4 ist eine Alarmierungssoftware in der Cloud, um Teams in Rufbereitschaft Alarme unterschiedlichster Systeme zuzustellen -- durch SMS, Push-Benachrichtigung oder Anruf.
Die Alarme werden mit einer mobilen App für iPhone bzw. Android angezeigt.
Per App erfolgt auch die Quittierung, Nachverfolgung und Eskalation.

In {CMK} können Sie SIGNL4 über dessen _Team Secret_ anbinden.
Dadurch werden Benachrichtigungen von {CMK} als Alarme in der SIGNL4 App angezeigt.

Den Rückweg der Kommunikation von {CMK} zu SIGNL4 richten Sie im SIGNL4-Portal ein: durch Auswahl und Konfiguration der {CMK}-Integration.
Anschließend führen Alarme, die in der mobilen App von SIGNL4 quittiert, geschlossen oder kommentiert werden, auch zu einem Update in {CMK}.


[#config_signl4_send]
== SIGNL4 für die Weiterleitung konfigurieren

//SK: Auf die Überschrift "SIGNL4 für die Weiterleitung konfigurieren" folgt unmittelbar der Satz "eine AKtivierung der Weiterleitung [...] ist nicht erforderlich". Ich kenne mich mit SIGNL4 nicht aus, aber das klingt für mich widersprüchlich.

Eine Aktivierung der Weiterleitung in SIGNL4 ist nicht erforderlich.
Das Team Secret, das Sie für die Konfiguration in {CMK} benötigen, können Sie im SIGNL4-Portal auslesen:

. Wählen Sie in der Navigationsleiste [.guihint]#Teams.#

//SK: In einem neuen Team gibt es kein Secret. Es scheint hier notwendig zu sein, einen "Eingehenden Webhook" zu konfigurieren, oder? Die Einrichtung eines solchen, sollte natürlich nicht Teil unserer Dokumentation sein, aber ich habe zumindest den Eindruck, dass der "Eingehende Webhook" zwingend erforderlich ist und deshalb hier erwähnt werden sollte. Fehlermeldung und Screenshot in KNW-1285
//SK: Falls das mit dem Webhook korrekt ist: Im englischen heißt das Ding in SIGNL4 "Webhook (Inbound)". Screenshot in KNW-1285
. Kopieren Sie in der Kachel des Teams, welches Benachrichtigungen von {CMK} erhalten soll, das angezeigte [.guihint]#Secret.#


[#config_checkmk]
== {CMK} konfigurieren
// TK: Momentan (24.01.2024) funktioniert der Rückkanal für Service-Probleme nur, wenn nicht das in CMK eingebaute SIGNL4-Plugin, sondern das SIGNL4-MKP installiert und aktiviert ist: https://exchange.checkmk.com/p/signl4
// SK: Wie in KNW-1285 besprochen.

Wie Sie Benachrichtigungen im Allgemeinen in {CMK} einrichten, haben Sie bereits im Artikel über xref:notifications#[Benachrichtigungen] erfahren.

In {CMK} genügt es nun, das oben kopierte Secret anzugeben:

. Erstellen Sie eine neue Benachrichtigungsregel mit [.guihint]#Setup > Events >  Notifications > Add rule.#
. Wählen Sie als [.guihint]#Notification Method# den Eintrag [.guihint]#SIGNL4 Alerting.#
. Tragen Sie unter [.guihint]#Team Secret# das kopierte Secret ein:
+
image::notifications_signl4.png[alt="Die Einstellungen zur Benachrichtigungsmethode für SIGNL4."]
+
Statt das Secret hier direkt einzugeben, können Sie dieses auch aus dem xref:password_store#[Passwortspeicher] auslesen -- sofern es vorher dort hinterlegt wurde.

Optional dürfen Sie URL-Präfixe angeben, um Links auf Ihre {CMK}-GUI innerhalb der Benachrichtigung zu steuern.

Bei der Kontaktauswahl im folgenden Kasten [.guihint]#Contact selection# beachten Sie die folgenden beiden Punkte:

include::include_ticketsystem.asciidoc[]

Wie Sie die neue Benachrichtigungsmethode testen können, erfahren Sie im Artikel zu den xref:notifications#notification_testing[Benachrichtigungen.]


[#config_signl4_acknowledge]
== SIGNL4 für die Quittierung konfigurieren

Der Rückkanal von SIGNL4 zu {CMK} wird mit der xref:rest_api#[REST-API] von {CMK} realisiert.
Damit die REST-API-Anfragen bei {CMK} ankommen, muss die {CMK}-Instanz öffentlich zugänglich, oder präziser vom SIGNL4-Server aus erreichbar sein.
////
TK: Die Aktionen aus der App kommen von der IP 40.114.193.136 in der Instanz checkmk02.schlenker.dk/mysite an.
OMD[mysite]:~$ nslookup 40.114.193.136
136.193.114.40.in-addr.arpa	name = mail.signl4.com.
Soll/muss/kann SIGNL4-Server also konkretisert werden?
////
// SK: Das ist m.E. nicht unser Problem. Und wie lang dann so eine IP bestehen bleibt... 

Die Konfiguration erfolgt im SIGNL4-Portal:

. Wählen Sie in der Navigationsleiste [.guihint]#Integrations#, dann [.guihint]#Gallery# und suchen Sie in den Integrationen nach `Checkmk`.
Für {CMK} werden zwei Ergebnisse gefunden.
Nur die Integration mit dem Namen [.guihint]#{CMK} ITOM Back channel for 2-way updates in {CMK}# ist für Einrichtung des Rückkanals zuständig.

. Klicken Sie auf diese, um die Einstellungen dieser Integration einzublenden.
// TK: Den Screenshot (fürs Review nur zackzack gemacht) würde ich mir gerne sparen, denn SIGNL4 baut häufig an der Portal-GUI um.
// TK: Ist der Screenshot notwendig zum Verständnis - oder gehts auch ohne?
// SK: Ein Screenshot ist immer nett, aber notwendig ist er hier m.E. nicht. Kann meinetwegen weg.
+
image::notifications_signl4_2.png[alt="Die Einstellungen zur {CMK}-Integration im SIGNL4-Portal."]
+
. Geben Sie im Feld [.guihint]#{CMK} URL# die Basis-URL der REST-API Ihrer {CMK}-Instanz ein, also z.B.: `\https://mydomain/mysite/check_mk/api/1.0/`.

. Geben Sie im Feld [.guihint]#Your {CMK} username# den Namen eines Benutzers der {CMK}-Instanz mit Zugriff auf die REST-API ein.
Für diesen Zweck bietet sich der xref:glossar#automation_user[Automationsbenutzer] `automation` an.

. Geben Sie im Feld [.guihint]#Your {CMK} password# das zugehörige Passwort ein.
Für den Automationsbenutzer ist dies das Automationspasswort (_automation secret_).

//SK: Der Schalter "Annotations as Ack" hat interessante Nebeneffekte. Die Hilfe von SIGNL4 sagt dazu folgendes: "Handle annotations as acknowledgements to display the text in Checkmk".
//SK: Auch wenn es die Hilfe so sagt, war das für mich unerwartet. Wir sollten darauf hinweisen. Die Kommentare ohne Ack in Checkmk reinzubekommen, sollte über unsere API kein Problem sein, wird aber eben nicht so gemacht.
. Aktivieren Sie den Schalter [.guihint]#Annotations as Ack#  wenn Sie Kommentare aus der App auch als Kommentare in {CMK} sehen wollen.

. Klicken Sie abschließend auf [.guihint]#Install.#
Anschließend werden Ihre Eingaben überprüft.
Wenn Sie sich nicht vertippt haben, sollten Sie oben auf der Seite im neu eingeblendeten Feld [.guihint]#Status# diese beruhigende Meldung sehen: `Everything is fine.`

Nach erfolgter Konfiguration ist es möglich, aus der mobilen SIGNL4 App ein Problem in {CMK} zu xref:basics_ackn#[quittieren.]
//SK: Hier auch noch mal. Abgesetzt Kommentare - so "Annotations as Ack" aktiviert ist
Abgesetzte Kommentare und das Schließen eines Alarms aus der App werden in {CMK} als Kommentare beim betroffenen Host/Service vermerkt.
