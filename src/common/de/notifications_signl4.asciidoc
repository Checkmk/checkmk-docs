// -*- coding: utf-8 -*-
// IGNORE Ack
include::global_attr.adoc[]
= Benachrichtigungen per SIGNL4
:revdate: 2024-01-31
:title: Benachrichtigungen per SIGNL4 (notifications)
:description: Sie können Benachrichtigungen von {CMK} an die Alarmierungssoftware SIGNL4 senden lassen. Wie Sie die Anbindung durchführen, erfahren Sie hier.

{related-start}
xref:notifications#[Benachrichtigungen]
{related-end}


SIGNL4 ist eine Alarmierungssoftware in der Cloud, um Teams in Rufbereitschaft Alarme unterschiedlichster Systeme zuzustellen -- durch SMS, Push-Benachrichtigung oder Anruf.
Die Alarme werden mit einer mobilen App für iPhone bzw. Android angezeigt.
Per App erfolgt auch die Quittierung, Nachverfolgung und Eskalation.

In {CMK} können Sie SIGNL4 über dessen _Team Secret_ anbinden.
Dadurch werden Benachrichtigungen von {CMK} als Alarme in der SIGNL4 App angezeigt.

Den Rückweg der Kommunikation von {CMK} zu SIGNL4 richten Sie im SIGNL4-Portal ein: durch Auswahl und Konfiguration der {CMK}-Integration.
Anschließend führen Alarme, die in der mobilen App von SIGNL4 quittiert, geschlossen oder kommentiert werden, auch zu einem Update in {CMK}.


[#config_signl4_secret]
== Team Secret aus SIGNL4 auslesen

In SIGNL4 ist keine Aktivierung der Weiterleitung erforderlich.
Das Team Secret, das Sie für die Konfiguration in {CMK} benötigen, können Sie im SIGNL4-Portal auslesen:

. Wählen Sie in der Navigationsleiste [.guihint]#Teams.#

. Kopieren Sie in der Kachel des Teams, welches Benachrichtigungen von {CMK} erhalten soll, das angezeigte [.guihint]#Secret.#

Ein Secret ist nur dann verfügbar, wenn für das Team die Integration [.guihint]#Webhook (Inbound)# eingerichtet ist.
Die URL dieses Webhooks enthält als letzten Eintrag das Team Secret.


[#config_checkmk]
== {CMK} konfigurieren

Wie Sie Benachrichtigungen im Allgemeinen in {CMK} einrichten, haben Sie bereits im Artikel über xref:notifications#[Benachrichtigungen] erfahren.

In {CMK} genügt es nun, das oben kopierte Secret anzugeben:

. Erstellen Sie eine neue Benachrichtigungsregel mit [.guihint]#Setup > Events >  Notifications > Add rule.#
. Wählen Sie als [.guihint]#Notification Method# den Eintrag [.guihint]#SIGNL4 Alerting.#
. Tragen Sie unter [.guihint]#Team Secret# das kopierte Secret ein:
+
image::notifications_signl4.png[alt="Die Einstellungen zur Benachrichtigungsmethode für SIGNL4."]
+
Statt das Secret hier direkt einzugeben, können Sie dieses auch aus dem xref:password_store#[Passwortspeicher] auslesen -- sofern es vorher dort hinterlegt wurde.

Optional dürfen Sie URL-Präfixe angeben, um Links auf Ihre {CMK}-GUI innerhalb der Benachrichtigung zu steuern.

Bei der Kontaktauswahl im folgenden Kasten [.guihint]#Contact selection# beachten Sie die folgenden beiden Punkte:

include::include_ticketsystem.asciidoc[]

Wie Sie die neue Benachrichtigungsmethode testen können, erfahren Sie im Artikel zu den xref:notifications#notification_testing[Benachrichtigungen.]


[#config_signl4_acknowledge]
== SIGNL4 für die Quittierung konfigurieren

Der Rückkanal von SIGNL4 zu {CMK} wird mit der xref:rest_api#[REST-API] von {CMK} realisiert.
Damit die REST-API-Anfragen bei {CMK} ankommen, muss die {CMK}-Instanz öffentlich zugänglich, oder präziser vom SIGNL4-Server aus erreichbar sein.

Die Konfiguration erfolgt im SIGNL4-Portal:

. Wählen Sie in der Navigationsleiste [.guihint]#Integrations#, dann [.guihint]#Gallery# und suchen Sie in den Integrationen nach `Checkmk`.
Für {CMK} werden zwei Ergebnisse gefunden.
Nur die Integration mit dem Namen [.guihint]#{CMK} ITOM Back channel for 2-way updates in {CMK}# ist für Einrichtung des Rückkanals zuständig.

. Klicken Sie auf diese, um die Einstellungen dieser Integration einzublenden.
+
. Geben Sie im Feld [.guihint]#{CMK} URL# die Basis-URL der REST-API Ihrer {CMK}-Instanz ein, also z.B.: `\https://mydomain/mysite/check_mk/api/1.0/`.

. Geben Sie im Feld [.guihint]#Your {CMK} username# den Namen eines Benutzers der {CMK}-Instanz mit Zugriff auf die REST-API ein.
Für diesen Zweck bietet sich der xref:glossar#automation_user[Automationsbenutzer] `automation` an.

. Geben Sie im Feld [.guihint]#Your {CMK} password# das zugehörige Passwort ein.
Für den Automationsbenutzer ist dies das Automationspasswort (_automation secret_).

. Durch das Aktivieren des Schalters [.guihint]#Annotations as Ack# werden Kommentare aus der App auch als Kommentare in {CMK} sichtbar.
Jeder aus der App gesendete Kommentar führt dann gleichzeitig zur Quittierung des Problems. 

. Klicken Sie abschließend auf [.guihint]#Install.#
Anschließend werden Ihre Eingaben überprüft.
Wenn Sie sich nicht vertippt haben, sollten Sie oben auf der Seite im neu eingeblendeten Feld [.guihint]#Status# diese beruhigende Meldung sehen: `Everything is fine.`

Nach erfolgter Konfiguration ist es möglich, aus der mobilen SIGNL4 App ein Problem in {CMK} zu xref:basics_ackn#[quittieren.]
Abgesetzte Kommentare -- sofern [.guihint]#Annotations as Ack# aktiviert ist -- und das Schließen eines Alarms aus der App werden in {CMK} als Kommentare beim betroffenen Host/Service vermerkt.
