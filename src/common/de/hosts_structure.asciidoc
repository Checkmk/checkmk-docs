// -*- coding: utf-8 -*-
// IGNORE subfolders
include::global_attr.adoc[]
= Strukturierung der Hosts
:revdate: draft
:title: Strukturierung der Hosts
:description: Skalierbarkeit gehört zum Grunddesign von {CMK}. Welche Möglichkeiten es gibt, Hosts zu strukturieren, erfahren Sie hier.

{related-start}
xref:hosts_setup#[Verwaltung der Hosts]
{related-end}


[#intro]
== Einleitung

{CMK} bietet so einige Möglichkeiten, um Hosts zu organisieren: Ordner, Host-Merkmale, Labels, Parents, Host-Gruppen.
Manchmal ist die Entscheidung aber nicht so einfach, welches Werkzeug für das konkrete Problem am geeignetsten ist und
einfach scheinende Fragen stellen sich als komplizierter heraus, als gedacht:
Warum gibt es eigentlich Host-Merkmale _und_ Labels?
Welche Eigenschaften können Ordnern zugewiesen werden und werden dann in der Ordnerstruktur vererbt?
Wo finde ich in einer Regel die Bedingung für Host-Gruppen?
(Spoiler-Alarm: Die gibt es nicht.)

Dieser Artikel gibt eine Übersicht über die verschiedenen Strukturierungselemente in {CMK} und erläutert ihre Gemeinsamkeiten und Unterschiede.
Damit haben Sie dann alle Informationen zur Hand, um die für Ihre Umgebung passende Struktur aufzusetzen.
Wir wissen, dass momentan noch Aspekte fehlen, die für dieses Thema wichtig sind.
Wir arbeiten daher immer wieder daran, diese Lücken nach und nach zu stopfen.

Besonders interessant sind die Strukturierungselemente für die xref:glossar#configuration_environment[Konfigurationsumgebung], die in Regeln als Bedingungen ausgewählt werden können, also Ordner, Host-Merkmale und Labels.
Damit können Sie regelbasiert auf Ihre Struktur zugreifen und zum Beispiel (neue) Hosts automatisch in die für sie vorgesehenen Ordner sortieren.
Zusätzlich erfahren Sie für jedes der vorgestellten Strukturierungselemente, wie Sie es in der xref:glossar#monitoring_environment[Monitoring-Umgebung] nutzen können.

Am xref:summary[Ende des Artikel] werden schließlich die wichtigen Eigenschaften der Strukturierungselemente in einer Tabelle zusammengefasst.


[#folder]
== Ordner und Vererbung

[#folder_structure]
=== Mit Ordnern strukturieren

Jeder, der mit Computern arbeitet, ist mit Dateien und Ordnern vertraut.
In {CMK} wird dieses bekannte Prinzip für die Strukturierung von Hosts übernommen, die in Ordnern gespeichert sind.
Vordefiniert ist mit dem Ordner [.guihint]#Main# nur die Wurzel des Ordnerbaums.
Unterhalb dieses Hauptordners können Sie Ihre eigene Ordnerstruktur mit beliebig vielen Unterordnern als Host-Baum erstellen.
Übliche Kriterien für den Aufbau des Host-Baums sind Standort, Technologie und Organisationsstruktur.
Im Hauptordner [.guihint]#Main# landen Sie, wenn Sie [.guihint]#Setup > Hosts > Hosts# auswählen.

Über Ordner können Attribute an Unterordner und enthaltene Hosts *vererbt* werden.
Wie die Vererbung genau abläuft, erfahren Sie im Artikel über die xref:hosts_setup#inheritance[Verwaltung der Hosts.]
Vererbt werden die Ordnerattribute, d.h. die Ordnereigenschaften, die im [.guihint]#Setup# auf der Seite [.guihint]#Folder properties# angezeigt werden wie z.B. Monitoring-Agenten und Permissions -- aber auch andere Strukturierungselemente wie Host-Merkmale, Labels oder Parents.
Viele der Ordnereigenschaften finden Sie auch bei den Host-Eigenschaften auf der Seite [.guihint]#Properties of host.#
ifdef::onprem[]
Die Vererbung ist besonders nützlich für Attribute, die bei vielen Hosts gleich sind, z.B. ob der Host per {CMK}-Agent oder per SNMP überwacht werden soll.
endif::[]
ifdef::saas[]
Die Vererbung ist besonders nützlich für Attribute, die bei vielen Hosts gleich sind, z.B. ob der Host per {CMK}-Agent überwacht werden soll.
endif::[]
Ein weiterer Vorteil der Vererbung von Ordnerattributen ist, dass Sie Ordner für die Aufnahme von Hosts vorbereiten können, die erst in Zukunft hinzukommen werden.
Einfach den neuen Host in den richtigen Ordner werfen und alle vordefinierten Attribute stimmen automatisch.

Um die Vorteile der Vererbung voll auszunutzen, hat es sich bewährt, als Erstes ein Ordnungssystem zu überlegen und dieses danach mit Inhalt zu füllen.
Sie beschäftigen sich also erst mit dem Aufbau der Ordner und ihrer Hierarchie.
Danach sortieren Sie die Hosts ein.

Das ist umso wichtiger, je größer die Umgebung ist, und je zahlreicher die Hosts sind.
Zwar kann eine einmal aufgesetzte Ordnerstruktur auch nachträglich geändert und etwa Ordner problemlos umbenannt werden.
Allerdings ist dabei Vorsicht geboten:
Das Verschieben eines Hosts in einen anderen Ordner kann nämlich zur Folge haben, dass sich dessen Attribute ändern, ohne dass Sie sich dessen vielleicht bewusst sind, weil der Zielordner andere Attribute haben kann als der Quellordner.

Eine Ordnerstruktur alleine kann aber nur in seltenen Fällen die Komplexität der Wirklichkeit abbilden.
Wenn Sie Ihre Hosts nach _vielen unterschiedlichen Kriterien_ organisieren wollen (oder müssen), dann bieten sich als Ergänzung die Host-Merkmale an, die im xref:host_tags[nächsten Kapitel] beschrieben werden.


[#folder_monitoring]
=== Die Ordnerstruktur im Monitoring

Die Baumstruktur, die sich durch die Ordner ergibt, ist auch in der xref:glossar#monitoring_environment[Monitoring-Umgebung] sichtbar
-- allerdings erst dann, wenn ein Ordner mindestens einen Host enthält.


[#filter_bar]
[discrete]
=== Filterleiste
Zum einen gibt es in in der Filterleiste der xref:glossar#view[Tabellenansichten] den Filter [.guihint]#Folder#, mit dem Sie die aktuelle Ansicht auf die Hosts unterhalb von einem bestimmten Ordner einschränken können.

Wie das folgende Bild zeigt, gibt es weitere Filter auch für andere Strukturierungselemente wie Host-Merkmale, Labels und Host-Gruppen.

.In der Filterleiste haben Sie Zugriff auf diverse Strukturierungselemente
image::hosts_filterbar.png[alt="Tabellenansicht mit Filterleiste und ausgewählten Filtern für Strukturierungselemente.",width=60%]


[#tree_of_folders]
[discrete]
=== Tree of folders
Zum zweiten bietet in der xref:user_interface.html#sidebar[Seitenleiste] das Snapin [.guihint]#Tree of folders# die gleiche Auswahlmöglichkeit wie das xref:user_interface#monitor_menu[Monitor-Menü], aber kann zusätzlich noch die Anzeige auf einen Ordner einschränken:

.Das Snapin [.guihint]#Tree of folders# zeigt ganz unten die Ordnerstruktur an
image::hosts_treeoffolders_snapin.png[alt="Snapin Tree of folders.",width=50%]


[#host_tags]
== Host-Merkmale

Host-Merkmale (englisch: _host tags_) sind in diesem Handbuch im xref:intro_finetune#host_tags[Leitfaden für Einsteiger] und in einem xref:host_tags#[eigenen Artikel] ausführlich beschrieben.
Daher an dieser Stelle nur das Wichtigste in Kürze:

Ein Host-Merkmal ist ein Attribut, das einem Host zugewiesen wird.
Host-Merkmale sind in Gruppen organisiert, den sogenannten Host-Merkmalsgruppen (englisch: _host tag groups_). 
Mit der Erstellung einer Host-Merkmalsgruppe werden alle Merkmale dieser Gruppe vollständig definiert.
Die Merkmale einer Gruppe schließen sich gegenseitig aus, d.h. jeder Host erhält genau ein Merkmal aus der Gruppe.
Wenn Sie nichts anderes festgelegt haben, ist dies das erste Merkmal der Gruppe, das als Standardwert dient.

Verfeinerungen dieses generellen Konzepts sind die xref:host_tags#checkbox_tag[Checkbox-Merkmale] und die xref:host_tags#aux_tag[Hilfsmerkmale.]
Ein Checkbox-Merkmal ist eine spezielle Host-Merkmalsgruppe mit nur einem Element und dient der Ja-/Nein-Entscheidung der Art: „Auf diesem Host läuft Oracle.“
Mit Hilfsmerkmalen (_auxiliary tags_) können Sie verschiedene Merkmale einer Gruppe zusammenfassen, z. B. die Merkmale `Windows Server 2012 R2` und `Windows Server 2016` zum Hilfsmerkmal `Windows`.


[#host_tags_structure]
=== Mit Host-Merkmalen strukturieren

Host-Merkmale haben Eigenschaften, die Labels *und* Ordnern ähneln.

Ein Merkmal oder ein Label einem Host zuzuordnen ist im Ergebnis sehr ähnlich.
Das zugewiesene Kennzeichen können Sie in beiden Fällen in der Konfiguration nutzen, um Bedingungen in Regeln festzulegen.
Allerdings müssen Sie, bevor Sie ein Host-Merkmal vergeben können, die zugehörige _Host-Merkmalsgruppe_ definieren -- sich also Gedanken um alle möglichen Ausprägungen eines solchen Merkmals machen.

Die _Abgeschlossenheit_ einer Host-Merkmalsgruppe erinnert daher an das Aufsetzen der xref:folder_structure[Ordnerstruktur.]
Genauso, wie ein Host nur in einem Ordner abgelegt werden kann, kann er auch nur ein Merkmal einer Host-Merkmalsgruppe tragen.
Anders herum: Ein Host ist immer einem Ordner zugeordnet und hat stets ein Merkmal einer Host-Merkmalsgruppe (wenn wir mal kurz die Checkbox-Merkmale außen vor lassen).
Daher eignen sich Host-Merkmale für Eigenschaften, die immer da sind (oder zumindest sein sollen) und in der Regel durch den {CMK}-Administrator für das gesamte zu überwachende System und für alle {CMK}-Benutzer vorgegeben werden.

Wie für die Ordnerstruktur gilt:
Für die Konfiguration großer Umgebungen ist es sehr hilfreich, von Beginn an eine wohlüberlegte Struktur der Host-Merkmale aufzusetzen.

Einem Host ordnen Sie Merkmale zu in den Host-Eigenschaften auf der Seite [.guihint]#Properties of host# -- beim Erstellen oder Bearbeiten eines Hosts.
Viele Attribute finden Sie sowohl in den Eigenschaften eines Hosts als auch in den Ordnereigenschaften wieder -- und genau das trifft auch auf die Host-Merkmale zu.
Das heißt, Host-Merkmale sind nicht nur für Hosts sondern auch für Ordner gültig.
Und damit werden auch Host-Merkmale über die Ordnerstruktur in {CMK} vererbt.
Um zu verhindern, dass es bei der Vererbung zu ungewollten Überraschungen kommt, sollten Sie bei der Festlegung der Host-Merkmalsgruppe auf den Standardwert achten.
In der Regel ist es sinnvoll, hier einen neutralen Wert festzulegen wie `None` oder `not applicable`.

Nachträgliche xref:host_tags#edit_delete_tag[Änderungen] einmal eingerichteter Host-Merkmale sind möglich, sollten aber vermieden werden -- sofern es sich um die Umbenennung der ID eines Merkmals handelt, da dies in den meisten Fällen manuelle Nacharbeit erfordert.
Änderungen, die lediglich die Anzeige betreffen oder nur neue Auswahlmöglichkeiten hinzufügen, sind dagegen unproblematisch und haben keine Auswirkung auf die bestehenden Hosts und Regeln.


[#host_tags_monitoring]
=== Die Host-Merkmale im Monitoring

Host-Merkmale sind nicht nur bei der Konfiguration, sondern auch im Monitoring nützlich.
Zum Beispiel gibt es in der Filterleiste von Tabellenansichten auch Filter für Host-Merkmale, wie es der Screenshot im Kapitel zu xref:filter_bar[Ordnern] zeigt.

Darüber hinaus bietet Ihnen in der Seitenleiste das xref:glossar#snapin[Snapin] [.guihint]#Virtual host tree# die Möglichkeit eine „virtuelle“ Hierarchie aus Host-Merkmalen abzubilden.
Im Artikel zu den xref:host_tags#tags_in_monitoring[Host-Merkmalen] erfahren Sie, wie das geht.


[#labels]
== Labels

Labels sind Attribute, die einem Host zugewiesen werden und damit -- genau wie Host-Merkmale -- Kennzeichen für einen Host.
Die ausführliche Einleitung des Artikels zu den xref:labels#[Labels] erklärt daher das Konzept der Labels im Vergleich und in Abgrenzung zu den Host-Merkmalen.
An dieser Stelle können wir uns auf das Wesentliche der Labels beschränken:

Labels sind einfache Schlüssel-Wert-Paare, wie z.B. `os:linux`, `os:windows` oder `foo:bar`, die nirgendwo vordefiniert sind.
Bei der Festlegung der Labels gibt es (fast) keine Einschränkungen -- bis auf die folgenden:
Schlüssel und Wert müssen durch Doppelpunkt getrennt sein.
Ein Host kann beliebig viele Labels haben, aber pro Schlüssel nur einen Wert.
Also kann ein Host, der das Label `foo:bar` hat, nicht gleichzeitig `foo:bar2` haben.

Übrigens können in {CMK} nicht nur Hosts sondern auch Services Labels tragen.
Allerdings gibt es bei den Service-Labels einige Besonderheiten zu beachten, die im Artikel zu den xref:labels.html#service_labels[Labels] beschrieben sind.


[#labels_structure]
=== Mit Labels strukturieren

Wenn die Label erstmal gesetzt sind, dann haben Sie mit Ihnen die gleichen Möglichkeiten, die Ihnen auch Ordner und Host-Merkmale bieten:
Während der Konfiguration können Sie die Bedingungen der Regeln in Abhängigkeit der Labels definieren.

Während bei den Host-Merkmalen bereits durch die Definition der Host-Merkmalsgruppe alle Hosts mit einem Host-Merkmal versorgt werden, läuft die Zuweisung bei Labels anders.
Labels können xref:labels#explicit[explizit], über xref:labels.html#rules[Regeln] und xref:labels.html#automatic[automatisch] gesetzt werden.
Die unterschiedlichen Wege, über die Hosts an ihre Labels kommen können, sollten Sie beachten, wenn es darum geht, wie Sie Labels für die Strukturierung Ihrer Hosts nutzen können.

Die explizite Zuweisung von Labels erfolgt in den Eigenschaften eines Hosts, im Kasten [.guihint]#Custom attributes#:
Schlüssel-Wert-Paar eingeben, Enter-Taste drücken: Fertig!
Auch in den Eigenschaften von Ordnern können Labels gesetzt werden, die dann über die Ordnerstruktur in {CMK} vererbt werden.

Wenn Sie für ein Label eigentlich keinen Wert brauchen, sondern nur wissen wollen, ob an dem Host ein bestimmtes Label hängt oder nicht, vergeben Sie z.B. einfach `yes` als Wert (`vm:yes`).
Falls Sie dieses Schema konsequent einhalten, haben Sie es später leichter, für solche Labels Bedingungen zu definieren.

Die explizite Zuweisung ist sehr einfach, hat aber ihre Tücken, denn die Gefahr von Inkonsistenzen durch Schreibfehler ist groß.
Da Labels frei vergeben werden können, kann {CMK} auch nicht überprüfen ob `foo:Bar`, `Foo:bar` oder `Fu:baa` das „richtige“ Label ist.
Sie sollten sich daher auch überlegen, wie Sie es mit der Groß-/Kleinschreibung halten.
Denn wenn Sie später Bedingungen über Labels definieren, dann muss die Schreibweise sowohl beim Schlüssel als auch beim Wert strikt beachtet werden.

Es liegt daher nahe, für die Strukturierung von Hosts auf die explizite Zuweisung zu verzichten und Labels regelbasiert oder automatisch erstellen zu lassen.

Wenn sich Host-Merkmale für globale Eigenschaften eignen, die immer da sind und in der Regel durch den {CMK}-Administrator für das gesamte zu überwachende System und für alle {CMK}-Benutzer vorgegeben werden, dann können einzelne {CMK}-Benutzer die spezifischen Anforderungen in ihrem Verantwortungsbereich mit Labels umsetzen.
Für eine überschaubare lokale Struktur können die Labels die Lücken füllen, die von der globalen Administration freigelassen wurden, und dabei ihre Vorteile ausspielen:
Sie sind schnell und einfach erstellt -- und auch wieder gelöscht.


[#labels_monitoring]
=== Die Labels im Monitoring

Die vollständige Übersicht aller Labels eines Hosts erhalten Sie in der Monitoring-Umgebung, in der Statusansicht eines Hosts.
In der Filterleiste von Tabellenansichten haben Sie Zugriff auf alle Host-Labels -- und können diese sogar mit den booleschen Operatoren `Not`, `And` und `Or` zum Filtern kombinieren.
Beide Wege sind im Artikel zu den xref:labels#views[Labels] beschrieben.


[#parents]
== Parents


[#parents_structure]
=== Mit Parents strukturieren

Was Parents sind, und wie sie funktionieren, haben Sie bereits in den xref:monitoring_basics#parents[Grundlagen des Monitorings] erfahren.


[#parents_create_manual]
=== Parents manuell anlegen

Einen Parent für einen einzelnen Host legen Sie so fest:
Wählen Sie [.guihint]#Setup > Hosts > Hosts# und klicken Sie den gewünschten Host an, um seine Eigenschaften anzuzeigen.
Im Kasten [.guihint]#Basic settings# tragen Sie den Parent über seinen Namen oder die IP-Adresse ein.
Sobald ein Parent angegeben wird, erscheint ein weiteres Eingabefeld für einen zusätzlichen Parent:

.Bei der manuellen Zuweisung können auch mehrere Parents angegeben werden
image::hosts_properties_parents.png[alt="Dialog mit den Eigenschaften eines Hosts zur Festlegung der Parents."]

*Wichtig*: Geben Sie nur direkte Parent-Hosts ein.

Analog lassen sich Parents auch in den Eigenschaften von Ordnern festlegen und auf die beinhalteten Hosts vererben, wie es im obigen Kapitel über xref:folder[Ordner und Vererbung] steht.


[#parents_scan]
=== Parents per Scan anlegen lassen

Wenn Sie Ihr Monitoring frisch aufsetzen und von vorne herein sauber mit Ordnern und Parents planen, werden Sie mit der Parent-Vererbung über Ordner vermutlich gut zurecht kommen.
Sie können Parents aber auch über den [.guihint]#Parent scan# automatisch einrichten lassen.

Der Scan sucht über das IP-Protokoll auf dem Network Layer des OSI-Modells (Schicht 3) via `traceroute` nach dem letzten Gateway vor einem Host.
Wird ein solches Gateway gefunden und gehört dessen Adresse zu einem Ihrer überwachten Hosts, so wird dieser als Parent gesetzt.
Bekommt `traceroute` von den _Hops_ vor dem anvisierten Host keine Informationen, so wird der letzte erfolgreiche Hop verwendet.

Wird jedoch kein Gateway unter den überwachten Hosts gefunden, legt {CMK} per Default einen künstlichen „Ping-only-Host“ an, standardmäßig im Ordner [.guihint]#Parents#, der gleich mit erstellt wird.

Diese Standardeinstellung kann allerdings auch zu unerwünschten Ergebnissen führen:
Nehmen wir als Beispiel ein typisches, kleines Netzwerk mit dem Adressbereich _192.168.178.0/24._
Wird in das Monitoring nun ein Host mit einer Adresse aus einem anderen Adressbereich aufgenommen, der nicht angepingt werden kann, so versucht der Scan den Weg über den Router -- und findet dort nur den Knotenpunkt des Netz-Providers.
Und so könnte dann zum Beispiel ein Telekom-Server aus dem WAN-Bereich als Parent für diesen Host gesetzt werden.
Um dies zu vermeiden, können Sie die entsprechende Option vor dem Scan deaktivieren.

Wenn Sie einen Ordner mit neuen Hosts auf Parents scannen wollen, gehen Sie wie folgt vor:
Öffnen Sie zunächst den gewünschten Ordner und wählen Sie im Menü [.guihint]#Hosts > Detect network parent hosts#, um die Scan-Konfiguration zu öffnen.
Sie können übrigens auch, statt eines ganzen Ordners, nur eine Auswahl von Hosts scannen lassen, indem Sie diese vorher in der ersten Spalte der Liste auswählen.

.Der Scan bietet reichlich Optionen zur Konfiguration
image::hosts_parent_scan.png[alt="Dialog mit der Scan-Konfiguration für die Parents."]

Um alle Hosts in allen Unterordnern komplett neu einzuscannen, unabhängig von eventuell manuell gesetzten Parents, wählen Sie die Optionen [.guihint]#Include all subfolders# und [.guihint]#Scan all hosts#.
Im Bereich [.guihint]#Performance# können Sie die Scan-Dauer anpassen, die bei vielen Hosts recht lang ausfallen kann.

Unter [.guihint]#Creation of gateway hosts# bestimmen Sie, ob, wie und unter welchem Alias neu gefundene Parent-Hosts erzeugt werden.
Deaktivieren Sie die Funktion, wenn Sie Parents auf überwachte Hosts beschränken wollen.

Klicken Sie nun auf [.guihint]#Start#.
Die Ausgabe des Scans können Sie live mitverfolgen.

Anschließend sehen Sie die konfigurierten Parents sowie gegebenenfalls einen neuen Ordner [.guihint]#Parents# in [.guihint]#Main# (falls Sie dies vor dem Scan so angegeben haben).

.Im [.guihint]#Setup# werden die Parents in einer eigenen Spalte angezeigt
image::hosts_parents_list.png[alt="Liste der Hosts mit Anzeige der Parents."]

Damit ist der Scan abgeschlossen.


[#parents_monitoring]
=== Parents im Monitoring

Nach einem durchgeführten Scan und der Aktivierung der Änderungen werden die Parent-Child-Beziehungen als Topologie-Karte visualisiert, die Sie über [.guihint]#Monitor > Overview > Parent / Child topology# aufrufen können:

.Anzeige der Parent-Child-Beziehungen im Monitoring
image::hosts_parents_topology.png[alt="Aus den Parent-Child-Beziehungen umgesetzte Netztopologie.",width=55%]

ifdef::onprem[]
[TIP]
====
Wenn die Ergebnisse des Scans an einigen Stellen nicht plausibel erscheinen, ist ein manueller Aufruf von `traceroute` bisweilen hilfreich, um die einzelnen Hops nachzuvollziehen.
====
endif::[]


[#host_groups]
== Host-Gruppen

Mit Host-Gruppen können Sie eine Reihe von Hosts zusammenfassen, um diese im Monitoring anzeigen zu lassen.
So können Sie zum Beispiel alle Linux-, Windows- und bestimmte Application-Server gemeinsam betrachten, indem Sie für diese Server-Typen jeweils eine Host-Gruppe einrichten.

Eine Host-Gruppe wird über eine Regel befüllt. 
In der Bedingung dieser Regel können Sie, wie gewohnt, auf Ordner, Host-Merkmale und Labels zugreifen.
Host-Gruppen selbst tauchen *nicht* standardmäßig als Auswahlkriterien in Regeln auf, denn sie dienen nicht der Konfiguration, sondern den Ansichten.


[#host_groups_create]
=== Host-Gruppe erstellen

Sie finden die Host-Gruppen unter [.guihint]#Setup > Hosts > Host groups.#

Eine neue Host-Gruppe legen Sie über den Aktionsknopf [.guihint]#Add group# an.
Das Anlegen ist trivial und beschränkt sich auf die Vergabe eines eindeutigen Namens, der später nicht mehr geändert werden kann, und eines Alias:

.Mit Name und Alias ist die Host-Gruppe fertig konfiguriert
image::hosts_hostgroups_properties.png[alt="Dialog mit Eigenschaften einer Host-Gruppe."]


[#host_groups_include_hosts]
=== Hosts in Host-Gruppe aufnehmen

Um Hosts in Host-Gruppen aufzunehmen, bemühen Sie den xref:glossar#rule_set[Regelsatz] [.guihint]#Assignment of hosts to host groups#, den Sie unter [.guihint]#Setup > Hosts > Host monitoring rules# finden.
Legen Sie eine neue Regel an.

Zunächst wählen Sie im Kasten [.guihint]#Assignment of hosts to host groups# die Host-Gruppe aus, der Hosts zugeordnet werden sollen, im Beispiel etwa der Gruppe `My Linux servers`:

.Zur Auswahl werden die bereits erstellten Host-Gruppen angeboten
image::hosts_hostgroups_rule_assignment.png[alt="Dialog zur Auswahl der Host-Gruppe in einer Regel."]

Anschließend kümmern Sie sich im Kasten [.guihint]#Conditions# um den oder _die_ Filter, um die Gruppe einzuschränken -- denn Filter lassen sich natürlich auch kombinieren.
Sie können Hosts nach Ordnern, Host-Merkmalen und Host-Labels filtern oder spezifische Hosts angeben.
Möchten Sie Hosts mit zwei Merkmalen aus ein und derselben Host-Merkmalsgruppe in die Host-Gruppe aufnehmen, müssen Sie zwei separate Regeln anlegen.
Generell sind die Gruppenzuordnungen kumulativ.
Hosts können in mehreren Gruppen sein und Gruppen von mehreren Regeln gefüllt werden.

Im folgenden Beispiel nutzen wir das von {CMK} automatisch zugewiesene Host-Label `cmk/os_family:linux`, um die Linux-Server der Host-Gruppe hinzuzufügen:

.Für die Festlegung der Bedingung werden u.a. Ordner, Host-Merkmale und Host-Labels angeboten
image::hosts_hostgroups_rule_conditions.png[alt="Dialog zur Festlegung der Bedingungen für die Zuweisung zur Host-Gruppe."]

Wie üblich, müssen Sie die Änderungen anschließend noch aktivieren.


[#host_groups_monitoring]
=== Host-Gruppen im Monitoring

[discrete]
==== Übersicht der Host-Gruppen

Das Ergebnis Ihrer Zuordnungen im [.guihint]#Setup# können Sie komfortabel im Monitoring überprüfen.
Unter [.guihint]#Monitor > Overview > Host groups# werden Ihnen die existierenden Host-Gruppen aufgelistet:

.Host-Gruppen im Monitoring
image::hosts_hostgroups_view.png[alt="Tabellenansicht der Host-Gruppen."]

Über einen Klick auf den Namen einer Host-Gruppe gelangen Sie zur vollständigen Ansicht der Hosts dieser Gruppe.

Abseits dieser Übersicht können Sie Host-Gruppen an mehreren Stellen einsetzen:
ifdef::onprem[]
zur Erstellung von Tabellenansichten und NagVis-Karten sowie als Filter in Regeln für Benachrichtigungen und Alert Handlers.
endif::[]
ifdef::saas[]
zur Erstellung von Tabellenansichten sowie als Filter in Regeln für Benachrichtigungen.
endif::[]


[discrete]
==== Tabellenansichten

Wichtig bei der Erstellung von xref:glossar#view[Tabellenansichten] (über [.guihint]#Customize > Visualization > Views#) ist lediglich die Auswahl einer Datenquelle ([.guihint]#Datasource#), die Host-Gruppen nutzt, z.B. [.guihint]#Host groups.#

Im [.guihint]#Monitor#-Menü finden Sie freilich bereits fertige Ansichten, beispielsweise [.guihint]#Host groups#, die wir bereits im vorherigen Abschnitt gezeigt haben.


ifdef::onprem[]
[discrete]
==== NagVis-Karten

Auf xref:nagvis#[NagVis-Karten] können Sie mit dem Snapin [.guihint]#NagVis maps# der xref:user_interface#sidebar[Seitenleiste] zugreifen.
In einer NagVis-Karte bekommen Sie als Ergebnis beispielsweise die Zusammenfassung für eine Host-Gruppe per Hover-Menü über ein einzelnes Symbol:

.Zu den NagVis-Karten geht es über das Snapin [.guihint]#NagVis maps# der Seitenleiste
image::hosts_hostgroups_nagvis.png[alt="Anzeige einer Host-Gruppe in einer NagVis-Karte."]
endif::[]


[discrete]
ifdef::onprem[]
==== Benachrichtigungen und Alert Handlers

In den xref:glossar#rule_set[Regelsätzen] für xref:glossar#notification[Benachrichtigungen] und xref:alert_handlers#[Alert Handlers] werden Ihnen die Host-Gruppen als Filter in den Bedingungen ([.guihint]#Conditions#) angeboten:
endif::[]
ifdef::saas[]
==== Benachrichtigungen

In den xref:glossar#rule_set[Regelsätzen] für xref:glossar#notification[Benachrichtigungen] werden Ihnen die Host-Gruppen als Filter in den Bedingungen ([.guihint]#Conditions#) angeboten:
endif::[]

.Auswahl der Host-Gruppen in der Bedingung einer Benachrichtigungsregel
image::hosts_hostgroups_notifications_rule.png[alt="Dialog zur Auswahl von Host-Gruppen in einer Benachrichtigungsregel."]


[#summary]
== Zusammenfassung

Zur Verbesserung der Übersichtlichkeit zeigt die folgende Tabelle wichtige Eigenschaften der in diesem Artikel vorgestellten Strukturierungselemente.

[cols="~,~,~,12,12,~",options="header"]
|===
|Strukturierungselement
|Erstellung
|Hinzufügen von Hosts
|Bedingung in Regeln
|Vererbung über Ordner
|Sichtbarkeit im Monitoring

|Ordner
|Manuell im Setup ([.guihint]#Setup > Hosts > Hosts#)
|Manuell im Setup ([.guihint]#Setup > Hosts > Hosts#)
|Ja
|-- 
|Snapin [.guihint]#Tree of folders#, Filter in Tabellenansichten

|Host-Merkmale
|Manuell im Setup ([.guihint]#Setup > Hosts > Tags#) durch Festlegung der Host-Merkmalsgruppe
|Automatisch durch Festlegung der Host-Merkmalsgruppe
|Ja
|Ja
|Snapin [.guihint]#Virtual host tree#, Filter in Tabellenansichten 

|Labels |Manuell/explizit im Setup ([.guihint]#Properties of host#), per Regel ([.guihint]#Host labels#) oder automatisch
|-- (Ein Label wird stets für einen Host erstellt.)
|Ja
|Ja
|Statusansicht eines Hosts ([.guihint]#Status of Host#), Filter in Tabellenansichten

|Parents |Manuell im Setup ([.guihint]#Properties of host#) oder automatisch per Scan in einem Ordner oder für ausgewählte Hosts ([.guihint]#Hosts > Detect network parent hosts#)
|-- (Ein Parent wird stets für einen Host erstellt.)
|Nein
|Ja
|Topologie-Karte ([.guihint]#Monitor > Overview > Parent / Child topology#)

|Host-Gruppen
|Manuell im Setup ([.guihint]#Setup > Hosts > Host groups#)
|Per Regel ([.guihint]#Assignment of hosts to host groups#)
|Nein
|Nein
|Als eigene Ansicht ([.guihint]#Monitor > Overview > Host groups#), Filter in Tabellenansichten, etc.
|===
