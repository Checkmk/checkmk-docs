// -*- coding: utf-8 -*-
// IGNORE
include::global_attr.adoc[]
= Benachrichtigungen per ilert
:revdate: 2024-01-23
:title: Benachrichtigungen per ilert (notifications)
:description: Sie können Benachrichtigungen von {CMK} an die Plattform ilert senden lassen. Wie Sie die Anbindung durchführen, erfahren Sie hier.

{related-start}
xref:notifications#[Benachrichtigungen]
{related-end}


link:https://www.ilert.com/de[ilert^] ist eine Plattform für Alarmierung, Rufbereitschaften und Statusseiten, die Alarme aus verschiedenen Quellen sammelt und weiterverarbeiten kann.
{CMK} kann als eine dieser Alarmquellen genutzt werden.
Die Benachrichtigungen von {CMK} werden in ilert als Alarme (_alerts_) angezeigt, für die wiederum Aktionen festgelegt werden können,
wie die die Einrichtung von Arbeitsabläufen (_workflows_) oder die Weiterleitung per E-Mail und an andere Incident-Management-Systeme wie z.B. Jira oder TOPdesk.

Die Anbindung erfolgt über einen API-Schlüssel, den Sie in ilert für eine Alarmquelle der Integration {CMK} erstellen.

[TIP]
====
Wie Sie nach erfolgter Anbindung die Alarme in ilert weiterverarbeiten können, erfahren Sie in unserem link:https://checkmk.com/de/blog/setting-up-checkmk-in-ilert[Blog-Artikel.^]
====


[#config_ilert]
== ilert konfigurieren

In ilert erstellen Sie für {CMK} eine neue Alarmquelle (_alert source_) und erhalten zum Abschluss der Einrichtung den zugehörigen API-Schlüssel:

. Öffnen Sie die Seite [.guihint]#Alert sources# und starten Sie die Erstellung einer neue Alarmquelle mit [.guihint]#Create a new alert source.#
Ein Wizard führt Sie durch die nächsten Schritte.
Im folgenden werden die Einträge vorgeschlagen, mit denen Sie am schnellsten ans Ziel kommen.
Die im Wizard getroffenen Entscheidungen können Sie später durch das Editieren der Alarmquelle ändern.

. Wählen Sie auf der ersten Wizard-Seite {CMK} als Integration für die Alarmquelle aus und bestätigen Sie mit [.guihint]#Next.#
Geben Sie anschließend Ihrer Alarmquelle einen Namen.
Wählen Sie dann eine Eskalationskette (_escalation policy_) aus, z. B. [.guihint]#Default.#
Als Letztes wählen Sie die Alarm-Gruppierung oder lassen es (erstmal) bleiben mit [.guihint]#Do not group alerts.#

. Beenden Sie den Wizard mit [.guihint]#Continue setup#.
Sie erhalten eine Zusammenfassung der bisher gemachten Einstellungen und weitere Auswahlmöglichkeiten für Alarmvorlage (_alert template_) und Benachrichtigungspriorität (_notification priority_).
+
Die Benachrichtigungspriorität können Sie sowohl in ilert als auch xref:config_checkmk[später in {CMK}] festlegen.
Wenn Sie möchten, dass die Priorität von {CMK} gesteuert wird, dann wählen Sie hier [.guihint]#High (with escalation)# oder [.guihint]#Low (no escalation),# das heißt einen Wert, der in beiden Systemen verfügbar ist.
Lassen Sie außerdem die Prioritätsbindung (_priority mapping_) deaktiviert.

. Bestätigen Sie mit [.guihint]#Finish setup.#
Auf der folgenden Seite wird der API-Schlüssel (_API key_) angezeigt, den Sie für die Konfiguration in {CMK} benötigen.
Vor dem Schlüssel finden Sie einen Knopf zum Kopieren in die Zwischenablage.


[#config_checkmk]
== {CMK} konfigurieren

Wie Sie Benachrichtigungen im Allgemeinen in {CMK} einrichten, haben Sie bereits im Artikel über xref:notifications#[Benachrichtigungen] erfahren.

In {CMK} genügt es nun, den oben kopierten Schlüssel anzugeben:

. Erstellen Sie eine neue Benachrichtigungsregel mit [.guihint]#Setup > Events >  Notifications > Add rule.#
. Wählen Sie als [.guihint]#Notification Method# den Eintrag [.guihint]#iLert.#
. Tragen Sie unter [.guihint]#API key# den kopierten Schlüssel ein:
+
image::notifications_ilert.png[alt="Die Einstellungen zur Benachrichtigungsmethode für ilert."]
+
Statt den Schlüssel hier direkt einzugeben, können Sie diesen auch aus dem xref:password_store#[Passwortspeicher] auslesen -- sofern er vorher dort hinterlegt wurde.

Die Auswahl unter [.guihint]#Notification priority# überschreibt die Benachrichtigungspriorität in bestimmten Fällen, wie bei der xref:config_ilert[Konfiguration von ilert] beschrieben.

Mit den beiden Eingabefeldern zu [.guihint]#Custom incident summary# legen Sie fest, wie eine {CMK}-Benachrichtigung in ilert in der Liste der Alerts als [.guihint]#Summary# angezeigt wird.

Optional dürfen Sie URL-Präfixe angeben, um Links auf Ihre {CMK}-GUI innerhalb der Benachrichtigung zu steuern.

Bei der Kontaktauswahl im folgenden Kasten [.guihint]#Contact selection# beachten Sie die folgenden beiden Punkte:

include::include_ticketsystem.asciidoc[]

[TIP]
====
In ilert werden nur die
ifdef::onprem[]
xref:notifications#environment_variables[{CMK}-Benachrichtigungstypen]
endif::[]
ifdef::saas[]
{CMK}-Benachrichtigungstypen
endif::[]
`PROBLEM`, `ACKNOWLEDGEMENT` und `RECOVERY` verarbeitet - alle anderen werden ignoriert.
====

Wie Sie die neue Benachrichtigungsmethode testen können, erfahren Sie im Artikel zu den xref:notifications#notification_testing[Benachrichtigungen.]
