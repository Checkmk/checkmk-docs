// -*- coding: utf-8 -*-
// IGNORE checkboxes
include::global_attr.adoc[]
= Kommandos
:revdate: draft
:title: Kommandos
:description: Lernen Sie hier, wie Sie mit {CMK} im Monitoring gezielt Aktionen auf Hosts oder Services per Kommando ausführen.

{related-start}
link:basics_ackn.html[Quittierung von Problemen]
link:basics_downtimes.html[Wartungszeiten]
link:notifications.html[Benachrichtigungen]
{related-end}


[#command_execute]
== Ein Kommando ausführen

Mit Kommandos auf Hosts, Services und anderen Objekten können Sie in den Ablauf des Monitorings eingreifen. 
Am häufigsten werden die Kommandos zum Quittieren von Problemen und zum Setzen von Wartungszeiten verwendet. 
Aber es gibt eine Reihe von weiteren Kommandos, von denen manche dem Administrator vorbehalten sind.
Welche Kommandos in einer xref:views#[Ansicht] (_view_) genau zur Verfügung stehen, hängt also von Ihrer Berechtigung (xref:wato_user#roles[Rolle]) ab und auch von der Art der angezeigten Objekte.

Zu den Kommandos gelangen Sie in einer Ansicht über das Menü [.guihint]#Commands#. 
Bei Auswahl eines der Kommandos wird unterhalb der Menüleiste bzw. Aktionsleiste ein Bereich mit den Parametern des Kommandos eingeblendet. Bei Auswahl von [.guihint]#Acknowledge problems# sieht das so aus:

image::commands_acknowledge.png[]

Manche Kommandos brauchen weitere Angaben, wie z.B. einen Kommentar für die Quittierung. 
Das Drücken des Knopfs [.guihint]#Acknowledge# öffnet eine Nachfrage zur Bestätigung:

image::commands_confirm_acknowledgement.png[]

*Hinweis:* Wenn Sie hier mit [.guihint]#Confirm# bestätigen, wird das gewählte Kommando auf *allen* gerade in der Ansicht gezeigten Objekten ausgeführt.
Wenn Sie vorher eine Auswahl treffen möchten, haben Sie drei Möglichkeiten:

* Sie gehen in die Detailansicht eines Hosts oder eines Services, um nur auf diesem ein Kommando auszuführen.
* Sie setzen in der Ansicht icon:icon_filter[] [.guihint]#Filter#, um die Liste der gezeigten Objekte einzuschränken.
* Sie aktivieren die Checkboxen mit icon:icon_checked_checkbox[] [.guihint]#Show checkboxes#.

Bei aktivierten Checkboxen erscheint eine zusätzliche Spalte ganz links in der Ansicht, in der Sie die Objekte auswählen können, für die das Kommando ausgeführt werden soll:

image::commands_list_checkboxes.png[]

Durch einen Klick auf das kleine Kreuz in der Titelzeile können Sie alle Checkboxen der ganzen Tabelle ein- oder ausschalten.


[#commands]
== Die Kommandos im Überblick

Die verfügbaren Kommandos finden Sie im Menü [.guihint]#Commands#:

image::commands_menu_more.png[width=40%]

Beachten Sie, dass Sie sich in diesem Menü xref:intro_gui#show_less_more[weniger oder mehr anzeigen] lassen können.

Die wichtigsten Kommandos in Kurzfassung:

// TK: In der folgenden Tabelle Fake check results und Send custom notification erweitert um die Details, die aus notifications rausgeflogen sind.
// TK: Bei Fake check results zusätzlich neuer Hinweis zu soft state.
[cols="35,~"]
|===
|Acknowledge problems |xref:basics_ackn#[Probleme quittieren.]
|Remove acknowledgments |Alle Quittierungen entfernen.
|Schedule downtimes |xref:basics_downtimes#[Wartungszeiten] (_scheduled downtimes_) setzen.
|Remove downtimes |Alle Wartungszeiten entfernen.

|Fake check results |Die Ergebnisse von Checks manuell bestimmen, also die Ausgabe, Performance-Daten oder schlicht den Status eines Hosts oder Services.
Nützlich ist das beispielsweise, um die Auswirkungen unterschiedlicher Ausgaben und Status auf das Monitoring, Ansichten oder auch xref:glossar#notification[Benachrichtigungen] zu testen.
Nach einem mit diesem Kommando initiierten Zustandswechsel sollte dann beim nächsten regulären Check der ursprüngliche Zustand wiederhergestellt werden. +
*Hinweis:* Für den Test von Benachrichtigungen ist dieses Kommando nur bedingt einsetzbar, da ein Zustandswechsel oft nur zu einen xref:notifications#repeated_check_attempts[Soft State] führt, für den keine Benachrichtigungen erzeugt werden.
Außerdem kann der Host/Service bei häufigen Zustandswechseln nach einiger Zeit icon:icon_flapping[] xref:notifications#flapping[unstetig] werden.
Weitere Zustandswechsel lösen dann ebenfalls keine Benachrichtigungen mehr aus.
Nutzen Sie daher für den xref:notifications#notification_testing[Test von Benachrichtigungen] [.guihint]#Test notifications.# 
|Reschedule active checks |Aktive Checks außerhalb des üblichen Rhythmus manuell neu ansetzen, zum Beispiel das Hardware/Software [.guihint]#Inventory#.
Bei vielen Hosts könnte dies jedoch kurzfristig zu Spitzen bei der CPU-Auslastung führen.
Um dem entgegen zu wirken, lassen sich die Checks über einen einzugebenden Zeitraum in Minuten gleichmäßig verteilen.
|Send custom notification |Benutzerdefinierte Benachrichtigungen erstellen.
Dadurch wird kein Zustandswechsel ausgelöst.
Mit diesem Kommando erzeugte Benachrichtigungen sind vom speziellen Typ `CUSTOM` und können per Benachrichtigungsregeln auch speziell ausgewertet werden.
|Add comment |Kommentar hinzufügen. Ein Kommentar wird in einer Ansicht mit dem Symbol icon:icon_comment[] gekennzeichnet.
|===
// TK: Kommando "Archive events of hosts" (gibt es in einigen Views) nicht beschrieben, weil es offensichtlich nicht so wichtig ist, siehe CMK-7082

*Tipp:* In die Kommentare zu [.guihint]#Acknowledge problems#, [.guihint]#Schedule downtimes# und [.guihint]#Add comment# können Sie eine URL der Form
`\https://www.example.com` eintragen. Diese wird dann automatisch in einen Link umgewandelt.


