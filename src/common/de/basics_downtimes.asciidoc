// -*- coding: utf-8 -*-
// IGNORE % Virtualisierungs
include::global_attr.adoc[]
= Wartungszeiten
:revdate: 2024-02-22
:title: Wartungszeiten
:description: Geplante Ausfälle müssen im Monitoring berücksichtigt werden. Wie Wartungszeiten in {CMK} abgebildet werden können, erfahren Sie hier.

{related-start}
xref:commands#[Kommandos]
xref:notifications#[Benachrichtigungen]
xref:timeperiods#[Zeitperioden (Time Periods)]
{related-end}


[#mode]
== Funktionsweise

Im IT-Betrieb unterscheidet man zwei Arten von Ausfällen: geplante und ungeplante.
Das Monitoring-System kann -- wenn es einen Ausfall feststellt -- natürlich erst mal nicht wissen, ob dieser geplant war oder nicht.
Über das Konzept von _Wartungszeiten_ (Englisch _scheduled downtimes_) können Sie geplante Ausfallzeiten eines Hosts oder Services dem System bekannt machen,
indem Sie für die entsprechenden Objekte eine Wartungszeit definieren.
Befindet sich ein Host oder Service in so einer Wartungszeit, hat das folgende Auswirkungen:

* In den xref:glossar#view[Tabellenansichten] erscheint ein Symbol bei den betroffenen Hosts und Services:
Hosts und Services werden mit einem icon:icon_downtime[alt="Symbol zur Anzeige einer Wartungszeit."] Leitkegel markiert.
Wird ein Host mit allen seinen Services in die Wartung geschickt, erhalten die Services das icon:icon_derived_downtime[alt="Symbol zur Anzeige einer abgeleiteten Wartungszeit bei einem Service."] Symbol mit Server und kleinem Leitkegel.
In der xref:history[History] werden gestartete Wartungszeiten mit icon:icon_alert_downtime[alt="Symbol zur Anzeige einer gestarteten Wartungszeit."] markiert und beendete mit icon:icon_alert_downtimestop[alt="Symbol zur Anzeige einer beendeten Wartungszeit."].

* Die Benachrichtigungen über Probleme sind während der Wartung abgeschaltet.

* Die betroffenen Hosts/Services tauchen im xref:user_interface#overview[[.guihint]#Overview#] nicht mehr als Probleme auf.

* In der xref:availability#[Verfügbarkeitsanalyse] werden geplante Wartungszeiten gesondert berücksichtigt.

* Zu Beginn und Ende einer Wartungszeit wird eine spezielle Benachrichtigung ausgelöst, die darüber informiert.


[#enter]
== Wartungszeiten festlegen

Das Festlegen von Wartungszeiten geschieht über xref:commands#[Kommandos.]
Alle Aktionen, die Wartungszeiten betreffen, sind hier in einem eigenen Kasten zusammengefasst:

ifdef::onprem[]
.Der Dialog zur Definition einer Wartungszeit in den kommerziellen Editionen 
endif::[]
image::basics_downtimes_schedule.png[alt="Dialog zur Definition einer Wartungszeit."]

Das Feld [.guihint]#Comment# muss immer ausgefüllt werden.
Sie können an dieser Stelle auch eine URL in der Form `\https://www.example.com` eintragen, die dann als anklickbarer Link zur Verfügung steht.
Für die zeitliche Definition gibt es zahlreiche unterschiedliche Möglichkeiten -- 
vom einfachen [.guihint]#2 hours#, welches die Wartung *ab sofort* definiert, bis hin zu Start und Ende eines expliziten Zeitraums, mit dem auch eine Wartung in der Zukunft definiert werden kann.


[#scheduled]
=== Regelmäßige Wartungszeiten

ifdef::onprem[]
{cee-only}
endif::[]
Manche Wartungen werden regelmäßig ausgeführt -- wie z.B. der automatische Neustart eines Servers einmal pro Woche.
Jedes Mal von Hand eine Wartung einzutragen wäre recht umständlich.
Wenn es nur um die xref:glossar#notification[Benachrichtigungen] geht, können Sie hierzu mit xref:glossar#time_period[Zeitperioden] und den Regelsätzen [.guihint]#Notification period for hosts# und [.guihint]#Notification period for services# arbeiten.
Dies hat allerdings verschiedene Einschränkungen.
Eine Wichtige ist, dass man für das Anlegen von Zeitperioden globale Konfigurationsberechtigungen benötigt.

ifdef::onprem[]
Die kommerziellen Editionen bieten daher das Konzept von sich automatisch periodisch wiederholenden Wartungszeiten.
endif::[]
ifdef::saas[]
{CE} bietet daher das Konzept von sich automatisch periodisch wiederholenden Wartungszeiten.
endif::[]
Diese können auf zwei verschiedene Arten eingetragen werden.


==== Anlegen mittels Kommando

Der erste Weg führt über die Option [.guihint]#Repeat.#

image::basics_downtimes_periodic.png[alt="Die Wiederholungsperiode auswählen."]

Dabei wählen Sie die Periode aus, mit der sich die Wartung wiederholen soll.
Das *erste* Auftreten tragen Sie über [.guihint]#Start# und [.guihint]#End# ein.
Von der hier eingetragenen Startzeit aus wird die Periode berechnet.
Es gibt folgende Möglichkeiten:

[cols="30,~"]
|===

|[.guihint]#never# |Die Wartungszeit wird nicht wiederholt, d.h. nur einmal ausgeführt (Standardeinstellung).
|[.guihint]#hour# |Die Wartungszeit wiederholt sich stündlich genau um die gleiche Uhrzeit.
|[.guihint]#day# |Tägliche Wiederholung um die gleiche Uhrzeit.
|[.guihint]#week# |Wiederholung alle sieben Tage am gleichen Wochentag und zur gleichen Uhrzeit wie beim ersten Mal.
|[.guihint]#second week# |Wie wöchentlich, nur jetzt 14-tägig.
|[.guihint]#fourth week# |Wie wöchentlich, aber jetzt alle 28 Tage.
|[.guihint]#same nth weekday (from beginning)# |Hiermit können Sie monatliche Wiederholungen auf Basis des Wochentags realisieren.
Wenn also die Startzeit am zweiten Montag des Monats ist, wird fortan jeden Monat am zweiten Montag wieder eine Wartung eingetragen.
|[.guihint]#same nth weekday (from end)# |Analog zur vorherigen Option, allerdings wird jetzt vom Ende des Monats gerechnet, also so etwas wie „jeder letzte Freitag im Monat“.
|[.guihint]#same day of the month# |Bei dieser Variante bleibt der Wochentag unberücksichtigt.
Hier geht es nur darum, der wievielte Tag im Monat es ist.
Wenn also das Startdatum am 5. eines Monats ist, so wird die Wartungszeit fortan jeden 5. eines Monats wiederholt.
|===


==== Anlegen mittels Regeln

Eine alternative, sehr elegante Methode für das Einrichten von periodischen Wartungszeiten ist das Anlegen über xref:glossar#rule[Regeln.]
Mithilfe von xref:glossar#host_tag[Host-Merkmalen] können Sie damit z.B. Dinge bestimmen wie:
_Jeder produktive Windows-Server bekommt jeden Sonntag von 22:00 bis 22:10 Uhr eine Wartungszeit._

Zwar könnten Sie fast das Gleiche erreichen, indem Sie mit der Host-Suche alle betroffenen Server finden und die Wartungszeit dann über ein Kommando eintragen.
Aber dies funktioniert natürlich nur für *bestehende* Server.

Wird in Zukunft ein neuer Host ins Monitoring aufgenommen, so fehlt ihm dieser Eintrag.
Wenn Sie stattdessen mit Regeln arbeiten, haben Sie dieses Problem nicht mehr.
Ein weiterer Vorteil von Regeln ist, dass Sie die Wartungsrichtlinie später ändern können -- einfach durch Anpassung der Regeln.

Die Regeln für die regelmäßigen Wartungszeiten finden Sie unter [.guihint]#Setup > Hosts > Host monitoring rules > Recurring downtimes for hosts#
beziehungsweise [.guihint]#Setup > Services > Service monitoring rules > Recurring downtimes for services.#

image::basics_downtimes_recurring_rule.png[alt="Festlegung einer regelmäßigen Wartungszeit mittels Regel."]


[#advanced_options]
=== Weitere Optionen

Für die Definition von Wartungszeiten gibt es neben den eben beschriebenen regelmäßigen Wartungszeiten noch weitere Möglichkeiten.
Diese finden Sie in den [.guihint]#Advanced options:#

image::basics_downtimes_advanced.png[alt="Die erweiterten Optionen für Wartungszeiten."]

ifdef::onprem[]
Die Option [.guihint]#Only for hosts: Set child hosts in downtime# ist für Router und Switche nützlich, aber z.B. auch für Virtualisierungs-Hosts.
endif::[]
ifdef::saas[]
Die Option [.guihint]#Only for hosts: Set child hosts in downtime# ist z.B. für Virtualisierungs-Hosts nützlich.
endif::[]
{CMK} wird so auch automatisch für alle Hosts eine Wartungszeit setzen, welche über den betroffenen Host direkt (oder bei ausgewähltem [.guihint]#Include indirectly connected hosts (recursively)# auch indirekt) erreichbar sind.

Mit der Option [.guihint]#Only start downtime if host/service goes DOWN/UNREACH...# beginnt die Wartungszeit nicht automatisch zum angegebenen Zeitpunkt, sondern erst dann, wenn der Host tatsächlich in einen Problemzustand eintritt.
Diese Option ist z.B. nützlich, wenn Sie wissen, dass ein Host für ein paar Minuten {DOWN} gehen wird, aber die exakte Uhrzeit nicht vorhersagen können.

Beispiel:
Sie definieren eine Wartungszeit von 14:00 bis 16:00 Uhr und aktivieren die Option [.guihint]#Only start downtime if host/service goes DOWN/UNREACH...# mit einer maximalen Dauer von 30 Minuten.
Um 14:00 Uhr wird die Wartungszeit noch nicht automatisch aktiv, sondern ist nur in Wartestellung.
Sobald der Host auf {DOWN} oder {UNREACH} geht, beginnt die Wartungszeit und das Pausenzeichen erscheint.
Sie dauert jetzt genau die bei der Option angegebene Zeit -- egal wie sich der tatsächliche Zustand vom Host entwickelt und ggf. auch über die eingestellte Endzeit der Wartungszeit hinaus.

image::basics_downtimes_flexible.png[alt="Einstellung einer flexiblen Wartungszeit."]

Die Start-/Endzeit ist also bei den flexiblen Wartungszeiten nur das Zeitfenster, innerhalb dessen die Wartungszeit beginnt.
Wenn innerhalb dieses Zeitfensters kein Problemzustand eintritt, so wird die Wartungszeit einfach ausgelassen.
Alles für Hosts gesagte gilt natürlich für Services analog.


[#activate]
== Wartungszeiten aktivieren

Mit einem Klick auf [.guihint]#On service: Schedule downtime# bzw. [.guihint]#On host: Schedule downtime# aktivieren Sie die soeben definierten Einstellungen für die betreffenden Services bzw. Hosts.

Haben Sie gerade Wartungszeiten für Services geplant, beispielsweise in der Ansicht [.guihint]#Services of Host,# können Sie zudem mit einem Klick auf [.guihint]#Schedule downtime on host# dafür sorgen, dass sich die Wartungszeiten nicht auf die Services, sondern stattdessen direkt auf den zugehörigen Host beziehen.

image::basics_downtimes_schedule_host.png[alt="Bestätigung, dass die Wartungszeit tatsächlich auf den Host angewendet werden soll."]


[#edit_remove]
== Wartungszeiten ändern und löschen

Für die Wartungszeiten gibt es in {CMK} eine eigene Ansicht, die Sie erreichen über [.guihint]#Monitor > Overview > Scheduled downtimes:#

image::basics_downtimes_downtimeslist.png[alt="Ansicht der Wartungszeiten."]

Wie in jeder Ansicht können Sie über die icon:icon_filter[alt="Symbol zur Anzeige der Filterleiste."] Filter die Auswahl einschränken.
ifdef::onprem[]
Über die icon:icon_commands[alt="Symbol zur Anzeige eines Kommandos."] Kommandos in dieser Ansicht können Sie eine oder mehrere Wartungszeiten entfernen und sogar auch nachträglich ändern (nur kommerzielle Editionen), z.B. wenn diese verlängert werden müssen, da die eigentliche Wartung länger dauert als zunächst vorgesehen.
endif::[]
ifdef::saas[]
Über die icon:icon_commands[alt="Symbol zur Anzeige eines Kommandos."] Kommandos in dieser Ansicht können Sie eine oder mehrere Wartungszeiten entfernen und sogar auch nachträglich ändern, z.B. wenn diese verlängert werden müssen, da die eigentliche Wartung länger dauert als zunächst vorgesehen.
endif::[]

image::basics_downtimes_editdowntimes.png[alt="Änderung einer Wartungszeit."]


[#history]
== History

Die Ansicht [.guihint]#Monitor > History > Downtime history# zeigt nicht die aktuellen Wartungszeiten, sondern deren Geschichte -- also alle Ereignisse, bei denen eine Wartungszeit begonnen hat oder endete (entweder durch ein natürliches Ende oder durch das Löschen per Kommando).

image::basics_downtimes_downtimes_history.png[alt="Übersicht vergangener Wartungszeiten."]


[#availability]
== Wartungszeiten und Verfügbarkeit

Wie eingangs erwähnt, haben Wartungszeiten eine Auswirkung auf die Berechnung der xref:availability#[Verfügbarkeitsanalyse.]
Standardmäßig werden alle Wartungszeiten in einen eigenen „Topf“ gerechnet und in der Spalte [.guihint]#Downtime# angezeigt.

image::basics_downtimes_availability_list.png[alt="Verfügbarkeitsanalyse der Hosts."]

Wie genau Wartungszeiten verrechnet werden sollen, können Sie über [.guihint]#Availability > Change computation options# einstellen:

image::basics_downtimes_availability_option.png[alt="Auswahl zur Berücksichtigung von Wartungszeiten.", width=50%, align=center]

[cols="30,~"]
|===

|[.guihint]#Honor scheduled downtimes# |Wartungszeiten werden in die Verfügbarkeitsgrafiken eingerechnet und als eigenständige Spalte angezeigt.
Das ist das Standardverhalten.
|[.guihint]#Exclude scheduled downtimes# |Wartungszeiten werden bei der Berechnung der 100{nbsp}% komplett ausgeklammert.
Alle prozentualen Angaben über die Verfügbarkeit beziehen sich also nur auf die restlichen Zeiten, quasi zur Beantwortung der Frage:
_Wie viel Prozent der Nicht-Wartungszeit war das Objekt verfügbar?_
|[.guihint]#Ignore scheduled downtimes# |Wartungszeiten werden überhaupt nicht berücksichtigt, sondern nur der tatsächliche Status, den das Objekt jeweils hatte.
|===

Zusätzlich gibt es noch unter [.guihint]#Phases# die Option [.guihint]#Treat phases of UP/OK as non-downtime.#
Wenn diese ausgewählt ist, dann werden Zeiten, in denen ein Objekt in einer Wartung, aber trotzdem gleichzeitig {OK} bzw. {UP} ist, *nicht* als Wartungszeit gewertet.
Somit geht in die Berechnung nur derjenige Teil der Wartungszeiten ein, der *tatsächlich* mit einem Ausfall verbunden war.
