// -*- coding: utf-8 -*-
// IGNORE acknowledgement checkboxes
include::global_attr.adoc[]
= {CMK} im Monitoring
:revdate: 2025-01-30
:title: {CMK} im Monitoring
:description: Probleme zu quittieren und Wartungszeiten einzurichten sind wichige Aufgaben im Monitoring mit {CMK}.

{related-start}
xref:intro_finetune#[Das Monitoring feinjustieren]
xref:basics_ackn#[Quittierung von Problemen]
xref:basics_downtimes#[Wartungszeiten]
{related-end}


[#monitoring]
== Wichtige Aufgaben im Monitoring

Sie haben Hosts aufgenommen und sich wichtige Werkzeuge angesehen:
Jetzt können Sie loslegen mit dem eigentlichen Monitoring.
Denn der Sinn von {CMK} ist es ja nicht, sich ständig mit der Konfiguration zu befassen, sondern eine Unterstützung beim IT-Betrieb zu leisten.

Zwar zeigen Ihnen bereits die standardmäßig verfügbaren Ansichten oder z.B. das Snapin [.guihint]#Overview# sehr genau, wie viele und welche Probleme es gerade gibt.
Zur Abbildung eines Arbeitsablaufs (_workflow_), d.h. dem „richtigen Arbeiten“ mit dem Monitoring, benötigen Sie aber noch etwas mehr Informationen über:

* die Quittierung von Problemen
* das Senden von Benachrichtigungen im Falle von Problemen
* das Setzen von Wartungszeiten

Dieses Kapitel befasst sich nur mit dem ersten und dem letzten Punkt.
Die Benachrichtigungen behandelt später ein xref:intro_notifications#[eigenes Kapitel], da für dieses Thema einige spezielle Vorbereitungen zu treffen sind.


[#ack]
== Probleme quittieren

Im xref:intro_tools#overview[[.guihint]#Overview#] hatten Sie schon gesehen, dass Probleme entweder unbehandelt (_unhandled_) oder bearbeitet (_handled_) sein können.
Das Quittieren ist nun genau die Aktion, die aus einem unbehandelten Problem ein bearbeitetes macht.
Das muss nicht unbedingt heißen, dass sich wirklich jemand darum kümmert.
Manche Probleme verschwinden ja auch von selbst wieder.
Aber das Quittieren hilft, einen Überblick zu behalten und einen Workflow zu etablieren.

Was passiert beim Quittieren eines Problems genau?

* Im [.guihint]#Overview# wird das Problem in der Spalte [.guihint]#Unhandled# beim Host oder Service nicht mehr gezählt.
* Die Dashboards listen das Problem ebenfalls nicht mehr auf.
* Das Objekt (Host oder Service) wird in Tabellenansichten mit dem Symbol icon:icon_ack[alt="Symbol zur Anzeige der Quittierung."] markiert.
* Ein Eintrag erfolgt in die Objekthistorie, sodass die Aktion später nachvollzogen werden kann.
* Wiederholte Benachrichtigungen (falls konfiguriert) werden gestoppt.

Wie quittieren Sie nun ein Problem?

Rufen Sie zunächst eine Tabellenansicht auf, in der das Problem enthalten ist.
Am einfachsten ist der Einstieg über die vordefinierten Ansichten im Menü [.guihint]#Monitor > Problems > Host problems# oder [.guihint]#Service problems#.
Zu diesen gelangen Sie übrigens fast noch schneller, wenn Sie im [.guihint]#Overview# die Zahl der Probleme anklicken.

Sie können in der Liste den problematischen Host oder Service anklicken und dann auf der Seite mit den Details die Quittierung nur für diesen einzelnen Host oder Service durchführen.
Wir bleiben aber auf der Seite mit der Liste, da Sie hier alle Optionen haben, um nur ein Problem oder gleich mehrere auf einmal zu quittieren.

Es ist gar nicht so selten, dass Sie eine Reihe (zusammengehöriger) Probleme auf einmal quittieren wollen.
Das geht einfach, indem Sie sich mit einem Klick auf [.guihint]#Show checkboxes# eine neue erste Spalte in der Liste einblenden lassen, die eine Checkbox vor jeder Zeile enthält.
Die Checkboxen sind alle nicht markiert, denn die Auswahl treffen Sie:
Markieren Sie die Checkbox für jeden gewünschten Host oder Service.

*Wichtig:* Wenn Sie auf einer Seite mit einer Liste eine Aktion durchführen, ohne dass Sie Checkboxen eingeblendet haben, dann wird diese Aktion für *alle* Listeneinträge durchgeführt.

Klicken Sie nun auf [.guihint]#Acknowledge problems#.
Dies blendet am Beginn der Seite den folgenden Bereich ein:

ifdef::onprem[]
.Der Dialog zum Quittieren von Problemen in {RE}
image::intro_command_acknowledge.png[alt="Dialog zum Quittieren von Problemen."]
endif::[]
ifdef::saas[]
.Der Dialog zum Quittieren von Problemen
image::intro_command_acknowledge_saas.png[alt="Dialog zum Quittieren von Problemen."]
endif::[]

Tragen Sie einen Kommentar ein und klicken Sie auf [.guihint]#Acknowledge problems# -- und mit der Bestätigung der „Sind Sie sicher?“-Frage{nbsp}...

image::intro_really_acknowledge.png[alt="Bestätigungsdialog zur Quittierung."]

&#8230; gelten alle vorher ausgewählten Probleme als quittiert.

Abschließend noch einige Hinweise:

* Mit dem Menüeintrag [.guihint]#Commands > Remove acknowledgments# können Sie Quittierungen auch wieder entfernen.
* Quittierungen können automatisch ablaufen.
ifdef::onprem[]
Dazu dient die Option [.guihint]#Expire on,# die aber nur in den kommerziellen Editionen verfügbar ist.
endif::[]
ifdef::saas[]
Dazu dient die Option [.guihint]#Expire on.#
endif::[]

Weitere Informationen zu allen Quittierungsoptionen erhalten Sie im xref:basics_ackn#[Artikel über die Quittierung.]


[#downtimes]
== Wartungszeiten einrichten

Manchmal gehen Dinge nicht aus Versehen kaputt, sondern mit Absicht -- oder etwas vorsichtiger ausgedrückt, ein Ausfall wird absichtlich in Kauf genommen.
Denn jedes Stück Hard- oder Software muss gelegentlich gewartet werden, und während der dazu notwendigen Umbauarbeiten wird der betroffene Host oder Service im Monitoring sehr wahrscheinlich in den Zustand {DOWN} oder {CRIT} gehen.

Für diejenigen, die auf Probleme in {CMK} reagieren sollen, ist es dabei natürlich sehr wichtig, dass sie über geplante Ausfälle Bescheid wissen und nicht wertvolle Zeit mit „Fehlalarmen“ verlieren.
Um dies zu gewährleisten, kennt {CMK} das Konzept der (geplanten) Wartungszeit (in Englisch _scheduled downtime_ oder kürzer _downtime_).

Wenn also für ein Objekt eine Wartung ansteht, können Sie dieses in den Wartungszustand versetzen -- entweder sofort oder aber auch für einen Zeitraum in der Zukunft.

Die Einrichtung von Wartungszeiten ist sehr ähnlich zum Ablauf der Quittierung von Problemen:
Sie starten wieder mit einer Tabellenansicht, in der das gewünschte Objekt (Host oder Service) enthalten ist, für das Sie eine Wartungszeit einrichten wollen.
Zum Beispiel können Sie im [.guihint]#Overview# auf die Zahl der Hosts oder der Services klicken, um sich alle Objekte auflisten zu lassen.

In der dann angezeigten Liste blenden Sie mit [.guihint]#Show checkboxes# die Checkboxen ein und wählen alle relevanten Einträge aus.

Klicken Sie nun [.guihint]#Schedule downtimes.#
Dies blendet am Beginn der Seite den folgenden Bereich ein:

ifdef::onprem[]
.Der Dialog zur Wartungszeit eines Hosts in {RE}
image::intro_command_downtime.png[alt="Dialog zur Festlegung einer Wartungszeit."]
endif::[]
ifdef::saas[]
.Der Dialog zur Wartungszeit eines Hosts
image::intro_command_downtime_saas.png[alt="Dialog zur Festlegung einer Wartungszeit."]
endif::[]

Bei den Wartungszeiten gibt es einen ganzen Haufen von Optionen.
Einen Kommentar müssen Sie in jedem Fall eingeben.
Für die Festlegung des Zeitraums gibt es zahlreiche unterschiedliche Möglichkeiten -- vom einfachen [.guihint]#2 hours#, welches die Wartung *ab sofort* definiert, 
bis hin zu der Angabe eines expliziten Zeitraums, mit dem auch eine Wartung in der Zukunft definiert werden kann.
Im Gegensatz zu den Quittierungen haben Wartungszeiten grundsätzlich ein Ende, das vorher festgelegt wird.

Hier noch ein paar Hinweise:

* Wenn Sie einen Host in die Wartung schicken, werden automatisch auch alle seine Services mitgeschickt.
Sparen Sie sich daher die Arbeit, dies doppelt zu tun.

* Die *flexiblen* Wartungszeiten beginnen tatsächlich erst dann, wenn das Objekt in einen anderen Zustand als {OK} wechselt.

ifdef::onprem[]
* Wenn Sie eine der kommerziellen Editionen nutzen, können Sie auch *regelmäßige* Wartungszeiten definieren (z.B. wegen eines obligatorischen Reboots einmal in der Woche).
endif::[]
ifdef::saas[]
* Sie können auch *regelmäßige* Wartungszeiten definieren (z.B. wegen eines obligatorischen Reboots einmal in der Woche).
endif::[]

* Einen Überblick über aktuell laufende Wartungszeiten erhalten Sie in [.guihint]#Monitor > Overview > Scheduled downtimes#.

Die Auswirkungen einer Wartungszeit sind folgende:

* Im [.guihint]#Overview# tauchen die betroffenen Hosts und Services nicht mehr als Probleme auf.
* In Tabellenansichten wird der ausgewählte Host oder Service mit dem icon:icon_downtime[alt="Symbol zur Anzeige einer Wartungszeit."] Leitkegel markiert.
Wird ein Host mit allen seinen Services in die Wartung geschickt, erhalten die Services das icon:icon_derived_downtime[alt="Symbol zur Anzeige einer abgeleiteten Wartungszeit bei einem Service."] Symbol mit Server und kleinem Leitkegel.
* Für diese Objekte wird die Benachrichtigung über Probleme während der Wartung abgeschaltet.
* Zu Beginn und Ende einer Wartungszeit wird eine spezielle Benachrichtigung ausgelöst.
* In der xref:availability#[Verfügbarkeitsanalyse] werden geplante Wartungszeiten gesondert berücksichtigt.

Eine detaillierte Beschreibung zu allen genannten und weiteren Aspekten finden Sie im xref:basics_downtimes#[Artikel über Wartungszeiten.]

xref:intro_finetune#[Weiter geht es mit der Feinjustierung]
