// -*- coding: utf-8 -*-
// IGNORE + % BuiltInRole Subskriptions
// SKIPCOMMITS 2025-06-03
include::global_attr.adoc[]
= Microsoft Azure überwachen
:revdate: 2025-07-07
:title: Microsoft Azure überwachen
:description: Die Integration von Microsoft Azure in {CMK} ermöglicht die nahtlose Überwachung von Cloud und On-Premises in einer Oberfläche und wird hier im Detail beschrieben.


== Einleitung

ifdef::saas[]
[TIP]
====
{CE} (SaaS) enthält im xref:intro_setup#onboarding_guide[Onboarding Guide] eine Kurzanleitung zur Einrichtung des Monitorings von Microsoft Azure.
Wir empfehlen, diese zuerst auszuprobieren und den hier vorliegenden Artikel vor allem als Referenz zu betrachten.
====
endif::[]

[{image-left}]
image::azure_logo.png[width=140]

{CMK} enthält ein umfangreiches Monitoring von Microsoft Azure, welches aus einem Konnektor zu Azure und einer stattlichen Sammlung von Check-Plugins besteht, die für Sie verschiedenste Metriken und Zustände abrufen und auswerten.

ifdef::onprem[]
Neben den allgemeinen Informationen zu den link:https://checkmk.com/integrations/azure_usagedetails[Kosten^] Ihrer Azure-Umgebung und dem aktuellen link:https://checkmk.com/integrations/azure_status[Status^] der Azure-Dienste in Ihrer Region, können Sie mit allen Editionen von {CMK} die folgenden Microsoft Azure-Produkte überwachen:
endif::[]
ifdef::saas[]
Neben den allgemeinen Informationen zu den link:https://checkmk.com/integrations/azure_usagedetails[Kosten^] Ihrer Azure-Umgebung und dem aktuellen link:https://checkmk.com/integrations/azure_status[Status^] der Azure-Dienste in Ihrer Region, können Sie mit {CE} (SaaS) die folgenden Microsoft Azure-Produkte überwachen:
endif::[]

* link:https://checkmk.com/integrations?distributions%5B%5D=check_mk&distributions%5B%5D=check_mk_cloud&search=azure_vm[Virtual Machines^]
* link:https://checkmk.com/integrations?distributions%5B%5D=check_mk&distributions%5B%5D=check_mk_cloud&search=azure_storageaccounts[Storage Accounts^]
* link:https://checkmk.com/integrations?distributions%5B%5D=check_mk&distributions%5B%5D=check_mk_cloud&search=azure_mysql[MySQL Database^]
* link:https://checkmk.com/integrations?distributions%5B%5D=check_mk&distributions%5B%5D=check_mk_cloud&search=azure_postgresql[PostgreSQL Database^]
* link:https://checkmk.com/integrations?distributions%5B%5D=check_mk&distributions%5B%5D=check_mk_cloud&search=azure_databases[SQL Database^]
* link:https://checkmk.com/integrations?distributions%5B%5D=check_mk&distributions%5B%5D=check_mk_cloud&search=azure_load_balancer[Load Balancer^]
* link:https://checkmk.com/integrations?distributions%5B%5D=check_mk&distributions%5B%5D=check_mk_cloud&search=azure_virtual_network[Virtual Network Gateways^]
* link:https://checkmk.com/integrations?distributions%5B%5D=check_mk&distributions%5B%5D=check_mk_cloud&search=azure_traffic_manager[Traffic Manager^]
* link:https://checkmk.com/integrations?distributions%5B%5D=check_mk&distributions%5B%5D=check_mk_cloud&search=azure_ad[Active Directory (AD) Connect^]
* link:https://checkmk.com/integrations/azure_sites[Webserver^]

ifdef::onprem[]
Mit {CCE} und {CME} können Sie darüber hinaus noch die folgenden Produkte in Ihr Monitoring aufnehmen:
endif::[]

* link:https://checkmk.com/integrations/azure_app_gateway[Application Gateway^]
* link:https://checkmk.com/integrations/azure_vault_backup_containers[Recovery Services vaults^]

Eine vollständige Auflistung aller verfügbaren Check-Plugins für die Überwachung von Azure finden Sie in unserem link:https://checkmk.com/integrations?tags=azure[Katalog der Check-Plugins^].
Wie Sie Ihre AKS-Cluster (Azure Kubernetes Service) ins Monitoring aufnehmen, beschreiben wir im Artikel xref:monitoring_kubernetes#[Kubernetes überwachen].


[#quick_setup]
== Monitoring per Quick Setup einrichten (optional)

Das Monitoring übersichtlicher Azure-Umgebungen lässt sich am schnellsten mit unserem _Quick Setup_ einrichten.
Öffnen Sie dafür [.guihint]#Setup > Quick Setup > Microsoft Azure# und klicken Sie dort auf [.guihint]#Add configuration#.
Das Quick Setup führt Sie dann Schritt für Schritt ans Ziel.

Der größte Vorteil des Quick Setup liegt sicherlich darin, dass etwaige Fehler unmittelbar während der Einrichtung angezeigt werden.
Im Fall der Fälle erhalten Sie dann einen klaren und dedizierten Hinweis, was Sie korrigieren müssen, bevor Sie zum nächsten Schritt gehen können.

Eine detaillierte Anleitung, wie Sie die notwendigen Vorbereitungen in Ihrer Azure-Umgebung vornehmen können, finden Sie im Kapitel xref:preparation[Azure für {CMK} vorbereiten].

Falls Sie zu einem späteren Zeitpunkt Änderungen an der durch das Quick Setup erzeugten xref:glossar#quick_setup_configuration[Konfiguration] vornehmen wollen oder müssen, können Sie erneut den Weg über [.guihint]#Setup > Quick Setup# nehmen.
Klicken Sie dort auf das Symbol icon:icon_edit[] und wählen Sie anschließend diejenige der angezeigten Komponenten, die Sie bearbeiten möchten.

[TIP]
====
Die weiteren Kapitel dieses Artikels dienen Nutzern des Quick Setup lediglich als Referenz.
Sollte Ihre Azure-Umgebung hingegen eher komplex sein, empfiehlt es sich, die Einrichtung weiterhin nach den folgenden Schritten durchzuführen.
====


[#preparation]
== Azure für {CMK} vorbereiten

Um Azure mit {CMK} zu überwachen, benötigen Sie einige Daten aus Ihrer Azure-Umgebung.
Mindestens die Directory-ID (auch Tenant-ID genannt) und eine Application-ID (auch Client-ID genannt) werden zwingend benötigt.
In den meisten Fällen müssen Sie auch Ihre Subskriptions-ID angeben.
Letztere benötigen Sie nur dann *nicht*, wenn Sie *ausschließlich* Ihr Azure AD überwachen wollen.

In den folgenden Kapiteln zeigen wir Ihnen, wo Sie diese Daten finden bzw. welche Voraussetzungen Sie dafür schaffen müssen.

[TIP]
====
An dieser Stelle ist zu sagen, dass sich Webportale von Hyperscalern und Anbietern von Cloud-Diensten mit schöner Regelmäßigkeit ändern.
Wir bemühen uns, die folgenden Informationen aktuell und gleichzeitig so allgemein zu halten, dass die jeweiligen Orte und Funktionen im Portal auch auffindbar bleiben, wenn ein Screenshot mal nicht mehr zu 100 % zum Gesehenen passt.
====


[#app_registration]
=== App anlegen

Registrieren Sie zunächst eine App in Azure.
Über diese App wird {CMK} die gewünschten Daten aus Azure auslesen.
Sie finden die Option dafür im link:https://portal.azure.com[Azure-Portal^] unter [.guihint]#(All services > Identity > Identity management > ) App registrations#.
Alternativ können Sie hier die Suche des Portals verwenden und dort `App registrations` eingeben.
Auf der Seite angekommen, müssen Sie nun auf [.guihint]#New registration# klicken.

Vergeben Sie einen Namen Ihrer Wahl.
Im Beispiel verwenden wir `my-checkmk-app`.
Der Name ist jedoch nur informativ.
Der Bezug auf die App wird stattdessen über die Application-ID hergestellt, die Sie in einem nächsten Schritt angezeigt bekommen.
Im Abschnitt [.guihint]#Supported account types# müssen Sie nichts ändern und das Feld [.guihint]#Redirect URI# muss leer bleiben.
Bestätigen Sie Ihre Eingaben mit einem Klick auf [.guihint]#Register#.

[{image-border}]
image::azure_register_1.png[]

Nachdem Sie die App angelegt haben, sollten Sie in einer Übersicht zu dieser neuen App landen.
Ist dem nicht so, finden Sie die neue App in der oben beschriebenen Liste aller [.guihint]#App registrations# im Reiter [.guihint]#All applications#.
In den Details der App finden Sie nun sowohl die [.guihint]#Application (client) ID# als auch die [.guihint]#Directory (tenant) ID#, welche Sie später in {CMK} eintragen müssen.

[{image-border}]
image::azure_register_2.png[]


[#client_secret]
=== Client-Schlüssel für die App anlegen

Nun brauchen Sie noch einen geheimen Client-Schlüssel (im Englischen schlicht _client secret_ genannt), mit dem sich {CMK} bei der API von Azure anmelden kann.
Um einen solchen Schlüssel zu erzeugen, klicken Sie in der Übersicht der App auf [.guihint]#Certificates & secrets#, dann auf den Reiter [.guihint]#Client secrets# und schließlich auf [.guihint]#New client secret.#

[{image-border}]
image::azure_register_5.png[]

Dadurch öffnet sich der Dialog [.guihint]#Add a client secret#.
Vergeben Sie einen beliebigen Namen und wählen Sie aus, wie lange der Schlüssel gültig sein soll.
Wenn Sie später, in der xref:azure_agent[Regel für den Spezialagenten,] die Option [.guihint]#App Registrations# aktiveren, bekommen Sie einen praktischen Service, der Sie daran erinnert, wenn sich diese Gültigkeitsdauer dem Ende nähert.
Bestätigen Sie den Dialog mit einem Klick auf [.guihint]#Add.#

image::azure_register_6.png[width=76%]

Jetzt ist es wichtig, dass Sie den [.guihint]#Value# dieses neuen Schlüssel umgehend kopieren.
Nach einer gewissen Zeit werden im Azure-Portal nur noch die ersten drei Zeichen solcher Schlüssel angezeigt.

[{image-border}]
image::monitoring_azure_copy_secret.png[]


=== Optional: Weitere API-Berechtigungen hinzufügen

Sie müssen der App zusätzliche API-Berechtigungen erteilen, wenn Sie die folgenden Services mit {CMK} überwachen möchten:

* Users in the Active Directory
* AD Connect Sync
* App Registrations

Die Vergabe der Berechtigungen starten Sie in der Übersicht Ihrer neuen App, die Sie noch vom vorherigen Abschnitt geöffnet haben sollten.

Klicken Sie auf [.guihint]#API permissions# und anschließend auf [.guihint]#Add a permission.#
In dem Dialog, der sich öffnet, müssen Sie den Punkt [.guihint]#Microsoft Graph# finden und anklicken.
Wählen Sie anschließend [.guihint]#Application permissions# und tippen Sie `Directory.Read.All` in die Suche ein.
Aktivieren Sie die zugehörige Checkbox und klicken Sie auf [.guihint]#Add permissions#.
Für diese Berechtigung wird eine zusätzliche Zustimmung durch einen Administrator Ihrer Azure-Umgebung benötigt ([.guihint]#Admin consent required#).
Wenn Sie über der Liste der erteilten Berechtigungen nicht den Knopf [.guihint]#Grant admin consent# sehen, müssen Sie sich an einen solchen Administrator wenden.


[#assign_role]
=== Der App eine Rolle zuweisen

Damit {CMK} über die neue App an die Monitoring-Daten kommen kann, müssen Sie der App noch eine Rolle auf Ebene der Subskription zuweisen.
Wählen Sie dazu in der Hauptnavigation auf der linken Seite den Punkt [.guihint]#All services# und dann unter [.guihint]#General# den Punkt [.guihint]#Subscriptions.#
Auch hier können Sie wieder die Suche im Portal bemühen, wenn sich der entsprechende Knopf nicht finden lässt.

Wenn Sie über mehrere Subskriptionen verfügen, müssen Sie jetzt noch den Namen der Subskription anklicken, die Sie überwachen möchten.
Sie landen dann auf einer Übersichtsseite für Ihre Subskription.
Notieren Sie sich hier die [.guihint]#Subscription ID#.
Diese müssen Sie später in die Regel des Spezialagenten eintragen.

Klicken Sie im Anschluss auf [.guihint]#Access Control (IAM)# und dort auf [.guihint]#Add# und dann auf [.guihint]#Add role assignment:#

[{image-border}]
image::azure_access_control.png[]

Wählen Sie jetzt die Rolle aus, die [.guihint]#Reader# heißt und den [.guihint]#Type# [.guihint]#BuiltInRole# hat.
Da es insgesamt über 100 Rollen gibt, die das Wort „Reader“ im Namen tragen, gilt es hier aufmerksam zu sein.
Klicken Sie anschließend auf [.guihint]#Next#, um zum Reiter [.guihint]#Members# zu kommen.

Klicken Sie hier auf [.guihint]#+ Select members.#

[{image-border}]
image::azure_role_assignment.png[]

Im Dialog [.guihint]#Select members# geben Sie im Suchfeld den Namen der App ein, wie Sie ihn vorhin angelegt haben, wählen die App aus und klicken auf [.guihint]#Select.#
Nach zwei weiteren Klicks auf [.guihint]#Review + assign# ist die Einrichtung im Azure-Portal abgeschlossen.


[#setup]
== Grundlegendes Monitoring in {CMK} konfigurieren

Bevor Sie mit der Konfiguration in {CMK} starten, vergewissern Sie sich, dass Sie die folgenden vier Azure-spezifischen Informationen parat haben, die Sie sich im vorherigen Kapitel besorgt haben:

. Ihre Tenant-ID (auch bekannt als „Directory-ID“)
. Die Application-ID (Client-ID) der App
. Den geheimen Client-Schlüssel zu dieser App
. Ihre Subskriptions-ID


[#create_host]
=== Host für Azure anlegen

Auch wenn Sie es bei Azure nicht mit einem physikalischen Host zu tun haben, legen Sie in {CMK} für Ihr Azure-Directory einen Host an.
Den Host-Namen können Sie nach Belieben vergeben.
*Wichtig:* Da Azure ein Dienst ist und daher keine IP-Adresse oder DNS-Namen hat (den Zugriff macht der Spezialagent von selbst), müssen Sie die [.guihint]#IP address family# auf [.guihint]#No IP# einstellen.

image::azure_wato_no_ip.png[]

Speichern Sie am besten mit [.guihint]#Save & view folder,# da die Service-Erkennung natürlich noch nicht funktionieren kann.


[#azure_agent]
=== Den Azure-Agenten konfigurieren

Da Azure nicht über den normalen {CMK}-Agenten abgefragt werden kann, richten Sie jetzt den xref:glossar#special_agent[Spezialagenten] für Azure ein.
Hierbei kontaktiert {CMK} den Ziel-Host nicht wie üblich über TCP Port 6556,
sondern ruft stattdessen ein Hilfsprogramm auf, welches mit dem Zielsystem über ein die anwendungsspezifische API von Azure kommuniziert.

Dazu legen Sie unter [.guihint]#Setup > Agents > VM, Cloud, Container > Microsoft Azure# eine Regel an, deren xref:wato_rules#conditions[Bedingungen] ausschließlich auf den gerade angelegten Azure-Host greifen.
Dort finden Sie die Eingabefelder für die IDs und das Secret:

//SK: In der nächsten Iteration wird dieser Screenshot gekürzt. Übrig bleibt an dieser Stelle dann nur der obere Teil, in dem die IDs und das Secret eingegeben werden müssen.
image::azure_agent_rule.png[]

Hier können Sie auch die Ressourcengruppen oder Ressourcen auswählen, die Sie überwachen möchten.
Wenn Sie [.guihint]#explicitly specified groups# *nicht* angekreuzt haben, werden automatisch alle Ressourcengruppen überwacht.


=== Test

Wenn Sie jetzt eine Service-Erkennung auf dem Azure-Host machen, sollte mindestens der Service mit dem Namen [.guihint]#Azure Agent Info# erkannt werden:

image::azure_services_ok.png[]

Falls der Zugriff auf die API nicht klappt (z.B. wegen einer falschen ID, fehlerhaften Berechtigungen oder wie im Bild, weil der Client-Schlüssel nicht stimmt), erscheint im Statustext von [.guihint]#Azure Agent Info# eine entsprechende Fehlermeldung:

image::azure_services_fail.png[]


[#resource_groups]
=== Ressourcengruppen als Hosts verfügbar machen

Aus Gründen der Übersichtlichkeit ist das Azure-Monitoring von {CMK} so aufgebaut, dass jede Azure-Ressourcengruppe durch einen (sozusagen logischen) Host im {CMK} repräsentiert wird.
Dies geschieht mit Hilfe des xref:glossar#piggyback[Piggyback]-Mechanismus.
Dabei werden Daten, die vom Azure-Host per Spezialagenten abgerufen werden, innerhalb von {CMK} an diese Ressourcengruppen-Hosts umgeleitet.

Die Ressourcengruppen-Hosts erscheinen nicht automatisch im {CMK}.
Legen Sie diese Hosts entweder von Hand an oder optional mit der xref:dcd#[dynamischen Host-Verwaltung.]
Wichtig dabei ist, dass die Namen der Hosts exakt mit den Namen der Ressourcengruppen übereinstimmen -- und zwar auch die Groß-/Kleinschreibung!
Wenn Sie sich über die genaue Schreibung der Gruppen unsicher sind, können Sie diese direkt aus dem Service [.guihint]#Azure Agent Info# auf dem Azure-Host ablesen.

ifdef::onprem[]
[TIP]
====
Mit dem Kommando `cmk-piggyback list orphans` finden Sie alle xref:piggyback#orphaned_piggyback_data[verwaisten Piggybacked-Hosts,] für die es zwar Daten gibt, die aber noch nicht als Hosts in {CMK} angelegt sind.
====
endif::[]

Konfigurieren Sie die Ressourcengruppen-Hosts ohne IP-Adresse (analog zum Azure-Host) und wählen Sie als Agent [.guihint]#No API integrations, no Checkmk agent# und als Piggyback [.guihint]#Always use and expect piggyback data# aus.

image::wato_host_no_agent.png[]

Wenn Sie jetzt die Service-Erkennung zu einem dieser Ressourcengruppen-Hosts machen, finden Sie dort weitere Services, welche speziell diese Ressourcengruppe betreffen:

image::azure_services_piggy.png[]

[TIP]
====
Wenn Sie die Namen der Ressourcengruppen-Hosts frei wählen möchten, können Sie mit der Regel [.guihint]#Setup > Agents > Access to Agents > Host name translation for piggybacked hosts# eine Umrechnung von Ressourcengruppen zu Hosts definieren.
====


[#advanced_configuration]
== Erweiterte Konfiguration

[#azure_vms]
=== Virtuelle Maschinen (VMs)

Wenn Sie über Azure virtuelle Maschinen überwachen, welche Sie gleichzeitig als normale Hosts in {CMK} haben, können Sie die Azure-Services, welche sich auf diese VMs beziehen, anstelle zu den Ressourcengruppen-Hosts direkt zu den VM-Hosts in {CMK} zuordnen lassen.

Wählen Sie dazu in der Azure-Regel bei der Option [.guihint]#Map data relating to VMs# die Einstellung [.guihint]#Map data to the VM itself.#
Damit dies funktioniert, muss der {CMK}-Host der VM im Monitoring den exakt gleichen Namen haben wie die entsprechende VM in Azure.


[#monitor_cost]
=== Kosten überwachen

Die Regel [.guihint]#Microsoft Azure# ist so voreingestellt, dass {CMK} auch alle Kosten, die in Ihrer Azure-Umgebung anfallen, überwacht.
Konkret zeigen die Services die Kosten an, welche am Vortag angefallen sind.
Auf diese Weise erkennen Sie schnell, wenn es hier zu Veränderungen gekommen ist.

Um eine bessere Übersicht zu erhalten, wo genau Kosten entstanden sind und um gezielt Schwellwerte setzen zu können, werden mehrere Services erzeugt.
Die Gesamtkosten auf Ebene Ihres Azure-Directory werden bei dem xref:create_host[Azure-Host] angezeigt, den Sie zuerst angelegt haben.
Zusätzlich werden Services für jeden Host erzeugt, der eine xref:resource_groups[Ressourcengruppe] repräsentiert.
Auf beiden Ebenen erzeugt {CMK} pro sogenanntem „Resource Provider“ (bspw. `microsoft.compute` and `microsoft.network`) einen Service für die Kosten.
Die Gesamtsumme für die Ressourcengruppe bzw. das gesamte Azure-Directory zeigt dann der Service [.guihint]#Costs Summary.#

Für all diese Services können Sie mit der Regel [.guihint]#Azure Usage Details (Costs)# individuelle Schwellwerte festlegen.

Sollten Sie keine Kostenüberwachung wünschen, müssen Sie in der Regel [.guihint]#Microsoft Azure# die Option [.guihint]#Usage Details# deaktivieren.


[#import_tags]
=== Tags aus Azure importieren

Standardmäßig importiert {CMK} alle Tags aus Ihrer Azure-Umgebung und wandelt diese in Host- und Service-Labels um.
Die Zuordnung läuft erwartbar ab.
Tags, die an einer Ressourcengruppe hängen, werden in {CMK} dem Host zugeordnet, der eben diese Ressourcengruppe repräsentiert und Tags einer VM werden zu Host-Labels dieser VM.

Alle Labels, die so entstehen, erhalten das Präfix `cmk/azure/`.
Außerdem werden Zeichen und Werte, die zu ungültigen Labels in {CMK} führen würden, ersetzt.
Dabei werden leere Werte (gemeint ist das Feld [.guihint]#Value# in Azure) durch `true` ersetzt und Doppelpunkte innerhalb des Namens oder des Werts, werden durch einen Unterstrich ersetzt.

[TIP]
====
Aus Gründen der Kompatibilität werden die Tags aus Azure zusätzlich auch ohne das Präfix `cmk/azure/` und ohne die Zeichenersetzungen importiert.
Hierbei können allerdings uneindeutige und unbenutzbare Labels entstehen, weshalb wir von deren Verwendung dringend abraten.
Ab {CMK} {v24} werden diese zusätzlichen Labels nicht mehr erzeugt und nach einem Update auf {CMK} {v24} verschwinden diese Labels bei der nächsten Service-Erkennung.
====

Mit der Option [.guihint]#Filter tags imported as host/service labels# haben Sie die Möglichkeit den Import der Tags aus Azure zu steuern.
Wenn Sie hier die Checkbox aktivieren, können Sie den Import mit [.guihint]#Do not import tags# gänzlich unterbinden.
Wählen Sie hier [.guihint]#Filter valid tags by key pattern,# können Sie im folgenden Feld einen regulären Ausdruck eintragen.
{CMK} wird dann nur Labels aus Tags erzeugen, die auf diesen regulären Ausdruck passen.


[#rate_limit]
=== Begrenzung der API-Abfragen

Stand heute sind die API-Abfragen, die {CMK} zum Monitoring benötigt, bei Azure kostenlos (im Gegensatz zu xref:monitoring_aws#[AWS]).
Allerdings gibt es eine Begrenzung in der Anzahl der Abfragen pro Zeit („throttling limits“).

Aufgrund der Bauart der API benötigt {CMK} pro abgefragter Ressource mindestens eine oder mehrere Abfragen.
Daher skaliert die Gesamtzahl der benötigten Abfragen linear mit der Anzahl der überwachten Ressourcen.
Wird das Limit erreicht oder überschritten, scheitert die Abfrage mit einem HTTP-Code 429 (Too many requests) und der [.guihint]#Check_MK# Service des Azure-Hosts geht auf {CRIT}.

Das Limit ist von Azure als sogenannter „Token Bucket“ Algorithmus realisiert.
Alles beginnt damit, dass Sie ein „Guthaben“ von 250 verbleibenden Abfragen haben.
Jede Abfrage verbraucht davon einen.
Gleichzeitig kommen 25 Abfragen pro Sekunde zum Guthaben dazu.
In der Ausgabe des Services [.guihint]#Azure Agent Info# sehen Sie, wie viele Abfragen aktuell noch übrig sind.

Konkret bedeutet das:

* Wenn Ihre Abfragerate ausreichend klein ist, sind die verfügbaren Abfragen immer knapp unter 250.
* Wenn Ihre Rate zu hoch ist, sinkt das Guthaben langsam auf 0 und es werden dann sporadisch Fehler bei der Abfrage auftreten.

In diesem Fall können Sie die Abfragerate reduzieren, indem Sie weniger Ressourcengruppen oder Ressourcen abfragen oder indem Sie das Check-Intervall des aktiven Checks [.guihint]#Check_MK# auf dem Azure-Host reduzieren.
Dies geht mit der Regel [.guihint]#Normal check interval for service checks.#

Damit Sie rechtzeitig reagieren können, überwacht der Service [.guihint]#Azure Agent Info# die Anzahl der verbleibenden Abfragen.
Per Default sind hier allerdings keine Schwellwerte gesetzt.
Sie können diese über die Regel [.guihint]#Azure Agent Info# selbst einstellen.

Der Artikel link:https://learn.microsoft.com/de-de/azure/azure-resource-manager/management/request-limits-and-throttling[Verstehen, wie Anforderungen durch Azure Resource Manager gedrosselt werden] auf Microsoft Learn erklärt diesen Sachverhalt noch etwas genauer.


[#dashboards]
== Dashboards
// TODO: Wenn wir bessere Screenshots haben, kann man auch auf die Anwendungsfälle zu diesen Dashboards besser eingehen.

ifdef::onprem[]
{CCE-only}
Zum komfortablen Einstieg in die Überwachung von Azure liefert {CMK} ab {CE} die beiden eingebauten xref:glossar#dashboard[Dashboards] [.guihint]#Azure VM instances# und [.guihint]#Azure storage accounts# mit aus.
endif::[]
ifdef::saas[]
Zum komfortablen Einstieg in die Überwachung von Azure liefert {CE} (SaaS) die beiden eingebauten xref:glossar#dashboard[Dashboards] [.guihint]#Azure VM instances# und [.guihint]#Azure storage accounts# mit aus.
endif::[]
Beide finden Sie im Monitoring als Menüeinträge unter [.guihint]#Monitor > Cloud.#

Damit Sie einen direkten Eindruck bekommen, finden Sie nachfolgend zwei Beispiele, wie diese Dashboards aufgebaut sind.
Zuerst das Dashboard zu den VM-Instanzen, bei der Sie auf der linken Seite den aktuellen Zustand und auf der rechten Seite den zeitlichen Verlauf der wichtigsten Metriken vergleichen können:

image::monitoring_azure_dashboard_vm.png[alt="Dashboard zu den Azure VM-Instanzen."]

Das Dashboard zu den Storage Accounts ist ganz ähnlich aufgebaut.
Auf der linken Seite finden Sie aktuelle Daten der jeweiligen Buckets.
Auf der rechten werden wieder die wichtigsten Metriken im zeitlichen Verlauf dargestellt:

image::monitoring_azure_dashboard_storage.png[alt="Dashboard zu den Azure Storage Accounts."]
