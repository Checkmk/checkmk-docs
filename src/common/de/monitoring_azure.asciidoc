// -*- coding: utf-8 -*-
// IGNORE + % Subskriptions
include::global_attr.adoc[]
= Microsoft Azure überwachen
:revdate: 2025-02-06
:title: Microsoft Azure überwachen
:description: Die Integration von Microsoft Azure in {CMK} ermöglicht die nahtlose Überwachung von Cloud und On-Premises in einer Oberfläche und wird hier im Detail beschrieben.


== Einleitung

ifdef::saas[]
[TIP]
====
{CE} (SaaS) enthält im xref:intro_setup#onboarding_guide[Onboarding Guide] eine Kurzanleitung zur Einrichtung des Monitorings von Microsoft Azure.
Wir empfehlen, diese zuerst auszuprobieren und den hier vorliegenden Artikel vor allem als Referenz zu betrachten.
====
endif::[]

[{image-left}]
image::azure_logo.png[width=140]

{CMK} enthält ein umfangreiches Monitoring von Microsoft Azure, welches aus einem Konnektor zu Azure und einer stattlichen Sammlung von Check-Plugins besteht, die für Sie verschiedenste Metriken und Zustände abrufen und auswerten.

Neben den allgemeinen Informationen zu den link:https://checkmk.com/de/integrations/azure_usagedetails[Kosten^] Ihrer Azure-Umgebung und dem aktuellen link:https://checkmk.com/de/integrations/azure_status[Status^] der Azure-Dienste in Ihrer Region, können Sie mit
ifdef::onprem[]
allen Editionen von {CMK} 
endif::[]
ifdef::saas[]
{CE} (SaaS) 
endif::[]
die folgenden Microsoft Azure-Produkte überwachen:

* link:https://checkmk.com/de/integrations?distributions%5B%5D=check_mk&distributions%5B%5D=check_mk_cloud&search=azure_vm[Virtual Machines^]
* link:https://checkmk.com/de/integrations?distributions%5B%5D=check_mk&distributions%5B%5D=check_mk_cloud&search=azure_storageaccounts[Storage Accounts^]
* link:https://checkmk.com/de/integrations?distributions%5B%5D=check_mk&distributions%5B%5D=check_mk_cloud&search=azure_mysql[MySQL Database^]
* link:https://checkmk.com/de/integrations?distributions%5B%5D=check_mk&distributions%5B%5D=check_mk_cloud&search=azure_postgresql[PostgreSQL Database^]
* link:https://checkmk.com/de/integrations?distributions%5B%5D=check_mk&distributions%5B%5D=check_mk_cloud&search=azure_databases[SQL Database^]
* link:https://checkmk.com/de/integrations?distributions%5B%5D=check_mk&distributions%5B%5D=check_mk_cloud&search=azure_load_balancer[Load Balancer^]
* link:https://checkmk.com/de/integrations?distributions%5B%5D=check_mk&distributions%5B%5D=check_mk_cloud&search=azure_virtual_network[Virtual Network Gateways^]
* link:https://checkmk.com/de/integrations?distributions%5B%5D=check_mk&distributions%5B%5D=check_mk_cloud&search=azure_traffic_manager[Traffic Manager^]
* link:https://checkmk.com/de/integrations?distributions%5B%5D=check_mk&distributions%5B%5D=check_mk_cloud&search=azure_ad[Active Directory (AD) Connect^]
* link:https://checkmk.com/de/integrations/azure_sites[Webserver^]

ifdef::onprem[]
Mit {CCE} und {CME} können Sie darüber hinaus noch die folgenden Produkte in Ihr Monitoring aufnehmen:
endif::[]

* link:https://checkmk.com/de/integrations/azure_app_gateway[Application Gateway^]
* link:https://checkmk.com/de/integrations/azure_vault_backup_containers[Recovery Services vaults^]

Eine vollständige Auflistung aller verfügbaren Check-Plugins für die Überwachung von Azure finden Sie in unserem link:https://checkmk.com/de/integrations?tags=azure[Katalog der Check-Plugins^]. Wie Sie Ihre AKS-Cluster (Azure Kubernetes Service) ins Monitoring aufnehmen, beschreiben wir im Artikel xref:monitoring_kubernetes#[Kubernetes überwachen].


// FIXME 2.4.0 SaaS: Quick Setup ist neu
ifdef::onprem[]
[#quick_setup]
== Monitoring per Quick Setup einrichten (optional)

Das Monitoring übersichtlicher Azure-Umgebungen lässt sich am schnellsten mit unserem _Quick Setup_ einrichten.
Öffnen Sie dafür [.guihint]#Setup > Quick Setup > Microsoft Azure# und klicken Sie dort auf [.guihint]#Add configuration#.
Das Quick Setup führt Sie dann Schritt für Schritt ans Ziel.

Der größte Vorteil des Quick Setup liegt sicherlich darin, dass etwaige Fehler unmittelbar während der Einrichtung angezeigt werden.
Im Fall der Fälle erhalten Sie dann einen klaren und dedizierten Hinweis, was Sie korrigieren müssen, bevor Sie zum nächsten Schritt gehen können.

Eine detaillierte Anleitung, wie Sie die notwendigen Vorbereitungen in Ihrer Azure-Umgebung vornehmen können, finden Sie im Kapitel xref:preparation[Azure für {CMK} vorbereiten].

Falls Sie zu einem späteren Zeitpunkt Änderungen an der durch das Quick Setup erzeugten xref:glossar#quick_setup_configuration[Konfiguration] vornehmen wollen oder müssen, können Sie erneut den Weg über [.guihint]#Setup > Quick Setup# nehmen.
Klicken Sie dort auf das Symbol icon:icon_edit[] und wählen Sie anschließend diejenige der angezeigten Komponenten, die Sie bearbeiten möchten.

[TIP]
====
Die weiteren Kapitel dieses Artikels dienen Nutzern des Quick Setup lediglich als Referenz.
Sollte Ihre Azure-Umgebung hingegen eher komplex sein, empfiehlt es sich, die Einrichtung weiterhin nach den folgenden Schritten durchzuführen.
====
endif::[]


[#preparation]
== Azure für {CMK} vorbereiten

=== App anlegen

Um Azure mit {CMK} zu überwachen, benötigen Sie Ihre Subskriptions-ID und Ihre Tenant-ID (auch bekannt als „Directory-ID“).

Registrieren Sie zunächst das {CMK}-Monitoring als App, damit Sie mit der API von Azure arbeiten können.
Sie finden die Option dafür im link:https://portal.azure.com[Azure-Portal^] unter [.guihint]#Microsoft Entra ID > Manage > App registrations > New registration#:

[{image-border}]
image::azure_register_1.png[]

Vergeben Sie einen Namen Ihrer Wahl.
Im Beispiel verwenden wir `my-check-mk-app`.
Der Name ist jedoch nur informativ.
Der Bezug auf die App wird stattdessen über eine UUID hergestellt, die Sie in einem späteren Schritt angezeigt bekommen.
Im Abschnitt [.guihint]#Supported account types# müssen Sie nichts ändern.
Die [.guihint]#Redirect URI# können Sie optional setzen.

Wählen Sie nach dem Anlegen die neue App in der Liste der Apps aus.
Wenn diese in der Liste nicht angezeigt wird, dann stellen Sie die Auswahl [.guihint]#My apps# auf [.guihint]#All apps# um.
In den Details der App finden Sie auch die [.guihint]#Application (client) ID,# welche Sie später benötigen.
Die [.guihint]#Object-ID# ist nicht notwendig.

[{image-border}]
image::azure_register_2.png[]


=== Rechte für die App vergeben

Damit Ihre neue App Zugriffsrechte auf die Monitoring-Daten bekommt, müssen Sie diese hier vergeben.
Wählen Sie dazu in der Hauptnavigation auf der linken Seite den Punkt [.guihint]#All resources# und hierin den Punkt [.guihint]#Subscriptions:#

[{image-border}]
image::azure_subscriptions.png[]

In der Navigation dieser Seite gehen Sie auf [.guihint]#Access Control (IAM)# und dort auf [.guihint]#Add# und [.guihint]#Add role assignment:#

[{image-border}]
image::azure_access_control.png[]

Tragen Sie nun die Rolle [.guihint]#Reader#, bei [.guihint]#Assign access to# den Wert [.guihint]#Azure AD user, group, or service principal#
und bei [.guihint]#Select# den Namen Ihrer neuen App ein:

image::azure_role_assignment.jpg[width=380]


=== Schlüssel für die App anlegen

Nun brauchen Sie noch einen Schlüssel (ein Secret), mit dem sich {CMK} bei der API anmelden kann.
Diesen legen Sie bei den Eigenschaften der App unter [.guihint]#Certificates & secrets# an.
Der Eintrag dazu heißt [.guihint]#Client secrets.#
Wir wählen hier [.guihint]#New client secret.#

[{image-border}]
image::azure_register_5.png[]

Microsoft möchte im folgenden Fenster, dass Sie in das Feld [.guihint]#Description# einen Namen Ihrer Wahl eintragen.
Wir wählen hier `my-check-mk-key`.
Vergessen Sie nicht, bei [.guihint]#Expires# eine für Sie passende Wahl zu treffen.

image::azure_register_6.png[width=175]

Die Einrichtung unter Azure ist nun abgeschlossen und Sie sollten jetzt über die folgenden vier Informationen verfügen:

. Ihre Subskriptions-ID
. Ihre Tenant-ID (auch bekannt als „Directory-ID“)
. Die Application-ID (Client-ID) der App [.guihint]#my-check-mk-app#
. Das Secret des Schlüssels [.guihint]#my-check-mk-key# zu dieser App

Falls Sie Ihre Tenant-ID nicht zur Hand haben, finden Sie diese, wenn Sie mit der Maus über Ihren Login-Namen fahren, im Tooltipp unter [.guihint]#Directory:#

image::azure_register_tenant_id.png[width=600]

Die Subskriptions-ID können Sie z.B. auf der Seite [.guihint]#Cost Management + Billing# unter [.guihint]#My subscriptions# einsehen.
*Hinweis*: Microsoft zeigt inzwischen nicht mehr einen Hash, sondern einen von Menschen lesbaren Namen als ID an.
Sie können diesen ganz normal nutzen.


[#setup]
== Grundlegendes Monitoring in {CMK} konfigurieren

[#create_host]
=== Host für Azure anlegen

Auch wenn Sie es bei Azure nicht mit einem physikalischen Host zu tun haben, legen Sie in {CMK} für Ihr Azure-Directory einen Host an.
Den Host-Namen können Sie nach Belieben vergeben.
Wichtig: Da Azure ein Dienst ist und daher keine IP-Adresse oder DNS-Namen hat (den Zugriff macht der Spezialagent von selbst),
müssen Sie die [.guihint]#IP address family# auf [.guihint]#No IP# einstellen.

image::azure_wato_no_ip.png[]

Speichern Sie am besten mit [.guihint]#Save & Finish,# da die Service-Erkennung natürlich noch nicht funktionieren kann.


=== Den Azure-Agenten konfigurieren

Da Azure nicht über den normalen {CMK}-Agenten abgefragt werden kann, richten Sie jetzt den xref:glossar#special_agent[Spezialagenten] für Azure ein.
Hierbei kontaktiert {CMK} den Ziel-Host nicht wie üblich über TCP Port 6556, sondern ruft stattdessen ein Hilfsprogramm auf,
welches mit dem Zielsystem über ein die anwendungsspezifische API von Azure kommuniziert.

Dazu legen Sie unter [.guihint]#Setup > Agents > VM, cloud, container > Microsoft Azure# eine Regel an,
deren xref:wato_rules#conditions[Bedingungen] ausschließlich auf den gerade angelegten Azure-Host greifen.
Dort finden Sie die Eingabefelder für die IDs und das Secret:

image::azure_agent_rule.png[]

Hier können Sie auch die Ressourcengruppen oder Ressourcen auswählen, die Sie überwachen möchten.
Wenn Sie [.guihint]#explicitly specified groups# *nicht* angekreuzt haben, werden automatisch alle Ressourcengruppen überwacht.


=== Test

Wenn Sie jetzt eine Service-Erkennung auf dem Azure-Host machen, sollte auf diesem ein einziger Service mit dem Namen [.guihint]#Azure Agent Info# erkannt werden:

image::azure_services_ok.png[]

Falls der Zugriff auf die API nicht klappt (z.B. wegen einer falschen ID oder fehlerhaften Berechtigungen),
erscheint im Statustext von [.guihint]#Azure Agent Info# eine Fehlermeldung der Azure-API:

image::azure_services_fail.png[]


[#resource_groups]
=== Ressourcengruppen als Hosts verfügbar machen

Aus Gründen der Übersichtlichkeit ist das Azure-Monitoring von {CMK} so aufgebaut, dass jede Azure-Ressourcengruppe durch einen (sozusagen logischen) Host im {CMK} repräsentiert wird.
Dies geschieht mit Hilfe des xref:piggyback#[Piggyback-Mechanismus].
Dabei werden Daten, die vom Azure-Host per Spezialagenten abgerufen werden, innerhalb von {CMK} an diese Ressourcengruppen-Hosts umgeleitet.

Die Ressourcengruppen-Hosts erscheinen nicht automatisch im {CMK}.
Legen Sie diese Hosts entweder von Hand an oder optional mit der xref:dcd#[dynamischen Host-Verwaltung.]
Wichtig dabei ist, dass die Namen der Hosts exakt mit den Namen der Ressourcengruppen übereinstimmen -- und zwar auch die Groß-/Kleinschreibung!
Wenn Sie sich über die genaue Schreibung der Gruppen unsicher sind, können Sie diese direkt aus dem Service [.guihint]#Azure Agent Info# auf dem Azure-Host ablesen.

ifdef::onprem[]
Übrigens: mit dem Hilfsskript `find_piggy_orphans` aus dem treasures-Verzeichnis finden Sie alle Piggyback Hosts, für es Daten gibt,
die aber noch nicht als Host im {CMK} angelegt sind:

[{shell}]
----
{c-omd} share/doc/check_mk/treasures/find_piggy_orphans
Glastonbury
Woodstock
----
endif::[]

Konfigurieren Sie die Ressourcengruppen-Hosts ohne IP-Adresse (analog zum Azure-Host) und wählen Sie als Agent [.guihint]#No API integrations, no Checkmk agent# und als Piggyback [.guihint]#Always use and expect piggyback data# aus.

image::wato_host_no_agent.png[]

Wenn Sie jetzt die Service-Erkennung zu einem dieser Ressourcengruppen-Hosts machen, finden Sie dort weitere Services, welche speziell diese Ressourcengruppe betreffen:

image::azure_services_piggy.png[]

[TIP]
====
Wenn Sie die Namen der Ressourcengruppen-Hosts frei wählen möchten, können Sie mit der Regel [.guihint]#Setup > Agents > Access to Agents > Hostname translation for piggybacked hosts# eine Umrechnung von Ressourcengruppen zu Hosts definieren.
====


[#advanced_configuration]
== Erweiterte Konfiguration

[#azure_vms]
=== Virtuelle Maschinen (VMs)

Wenn Sie über Azure virtuelle Maschinen überwachen, welche Sie gleichzeitig als normale Hosts in {CMK} haben, können Sie die Azure-Services, welche sich auf diese VMs beziehen, anstelle zu den Ressourcengruppen-Hosts direkt zu den VM-Hosts in {CMK} zuordnen lassen.

Wählen Sie dazu in der Azure-Regel bei der Option [.guihint]#Map data relating to VMs# die Einstellung [.guihint]#Map data to the VM itself.#
Damit dies funktioniert, muss der {CMK}-Host der VM im Monitoring den exakt gleichen Namen haben wie die entsprechende VM in Azure.


[#monitor_cost]
=== Kosten überwachen

Die Regel [.guihint]#Microsoft Azure# ist so voreingestellt, dass {CMK} auch alle Kosten, die in Ihrer Azure-Umgebung anfallen, überwacht.
Konkret zeigen die Services die Kosten an, welche am Vortag angefallen sind.
Auf diese Weise erkennen Sie schnell, wenn es hier zu Veränderungen gekommen ist.

Um eine bessere Übersicht zu erhalten, wo genau Kosten entstanden sind und um gezielt Schwellwerte setzen zu können, werden mehrere Services erzeugt.
Die Gesamtkosten auf Ebene Ihres Azure-Directory, werden bei dem xref:create_host[Azure-Host] angezeigt, den sie zuerst angelegt haben.
Zusätzlich werden Services für jeden Host erzeugt, der eine xref:resource_groups[Ressourcengruppe] repräsentiert.
Auf beiden Ebenen erzeugt {CMK} pro sogenanntem „Resource Provider“ (bspw. `microsoft.compute` and `microsoft.network`) einen Service für die Kosten.
Die Gesamtsumme für die Ressourcengruppe bzw. das gesamte Azure-Directory zeigt dann der Service [.guihint]#Costs Summary.#

Für all diese Services können Sie mit der Regel [.guihint]#Azure Usage Details (Costs)# individuelle Schwellwerte festlegen.

Sollten Sie keine Kostenüberwachung wünschen, müssen Sie in der Regel [.guihint]#Microsoft Azure# die Option [.guihint]#Usage Details# deaktivieren.


[#rate_limit]
=== Rate-Limit der API-Abfragen

Stand heute sind die API-Abfragen, die {CMK} zum Monitoring benötigt, bei Azure kostenlos (im Gegensatz zu xref:monitoring_aws#[AWS]).
Allerdings gibt es eine Begrenzung in der Anzahl der Abfragen pro Zeit („Rate-Limit“).
Pro Application-ID liegt die Grenze bei 12.000 Leseabfragen pro Stunde.

Aufgrund der Bauart der API benötigt {CMK} pro abgefragte Ressource mindestens eine oder mehrere Abfragen.
Daher skaliert die Gesamtzahl der benötigten Abfragen linear mit der Anzahl der überwachten Ressourcen.
Wird das Rate-Limit erreicht oder überschritten, scheitert die Abfrage mit einem HTTP-Code 429 (Too many requests) und der [.guihint]#Check_MK# Service des Azure-Hosts geht auf {CRIT}.

Das Rate-Limit ist von Azure als sogenannter „Token Bucket“ Algorithmus realisiert.
Alles beginnt damit, dass Sie ein „Guthaben“ von 12.000 verbleibenden Abfragen haben.
Jede Abfrage verbraucht davon einen.
Gleichzeitig kommen 3,33 Abfragen pro Sekunde zum Guthaben dazu.
In der Ausgabe des Services [.guihint]#Azure Agent Info# sehen Sie, wie viele Abfragen aktuell noch übrig sind.

Konkret bedeutet das:

* Wenn Ihre Abfragerate ausreichend klein ist, sind die verfügbaren Abfragen immer knapp unter 12.000.
* Wenn Ihre Rate zu hoch ist, sinkt das Guthaben langsam auf 0 und es werden dann sporadisch Fehler bei der Abfrage auftreten.

In diesem Fall können Sie die Abfragerate reduzieren, indem Sie weniger Ressourcengruppen oder Ressourcen abfragen oder indem Sie das Check-Intervall des aktiven Checks [.guihint]#Check_MK# auf dem Azure-Host reduzieren.
Dies geht mit der Regel [.guihint]#Normal check interval for service checks.#

Damit Sie rechtzeitig reagieren können, überwacht der Service [.guihint]#Azure Agent Info# die Anzahl der verbleibenden Abfragen und warnt Sie rechtzeitig vorher.
Per Default ist die Warnschwelle bei 50{nbsp}% und die kritische Schwelle bei 25{nbsp}% verbleibender Abfragen.


[#dashboards]
== Dashboards

ifdef::onprem[]
{CCE-only}
Zum komfortablen Einstieg in die Überwachung von Azure liefert {CMK} ab {CE}
endif::[]
ifdef::saas[]
Zum komfortablen Einstieg in die Überwachung von Azure liefert {CE} (SaaS)
endif::[]
die beiden eingebauten xref:glossar#dashboard[Dashboards] [.guihint]#Azure VM instances# und [.guihint]#Azure storage accounts# mit aus.
Beide finden Sie im Monitoring als Menüeinträge unter [.guihint]#Monitor > Cloud.#

Damit Sie einen direkten Eindruck bekommen, finden Sie nachfolgend zwei Beispiele, wie diese Dashboards aufgebaut sind.
Zuerst das Dashboard zu den VM-Instanzen, bei der Sie auf der linken Seite den aktuellen Zustand und auf der rechten Seite den zeitlichen Verlauf der wichtigsten Metriken vergleichen können:

image::monitoring_azure_dashboard_vm.png[alt="Dashboard zu den Azure VM-Instanzen."]

Das Dashboard zu den Storage Accounts ist ganz ähnlich aufgebaut.
Auf der linken Seite finden Sie aktuelle Daten der jeweiligen Buckets.
Auf der rechten werden wieder die wichtigsten Metriken im zeitlichen Verlauf dargestellt:

image::monitoring_azure_dashboard_storage.png[alt="Dashboard zu den Azure Storage Accounts."]
