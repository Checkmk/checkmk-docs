// -*- coding: utf-8 -*-
// IGNORE AMQP RabbitMQ

include::global_attr.adoc[]
= Ports
:revdate: 2025-02-06
:title: Ports - Ports used by {CMK}
:description: {CMK} uses some ports for communication which must be enabled. You can find out what these are here.

{related-start}
ifdef::onprem[]
xref:install_packages#[Basic information on the installation of {CMK}]
endif::[]
xref:wato#[Configuring {CMK}]
xref:wato_monitoringagents#[Monitoring agents]
{related-end}


[#overview]
== Overview

For monitoring hosts and services as well as communication between different components of a {CMK} installation, {CMK} in many cases uses data transmission over TCP/IP or UDP/IP.

This article will give you an overview of which ports are needed for each type of communication.
ifdef::onprem[]
These ports must be enabled in the firewall configuration or bound to a container when {CMK} is used in that container.
endif::[]
ifdef::saas[]
These ports must be enabled in the firewall configuration.
endif::[]

The communication direction is incoming to the component mentioned in the chapter heading, unless otherwise mentioned.

ifdef::onprem[]
*Note:* The majority of port numbers listed here are standard ports.
These can be manually changed to other ports at any time. Those ports that are not active by default, but instead must be enabled as needed, are additionally marked with a note.
endif::[]


[#monitoring]
ifdef::onprem[]
== Monitoring of hosts (agent, SNMP)
endif::[]
ifdef::saas[]
== Monitoring of hosts
endif::[]

ifdef::onprem[]
[#host_incoming_cmk_outgoing]
=== Monitored host

The following ports on monitored hosts must be accessible from the {CMK} server.

[cols="10,10,~,~",options="header"]
|===
|Port |Protocol |Designation |Supplementary Information
|161 |UDP |xref:glossar#snmp[Simple Network Management Protocol (SNMP)]|Hosts monitored via SNMP receive the `GET-REQUEST` via this port.
|6556 |TCP |xref:glossar#agent[Agent] |Hosts monitored via the xref:wato_monitoringagents#agents[{CMK} agent] are queried over this port. Communication is TLS encrypted or in plain text (as for the xref:agent_linux_legacy#[Linux agent in legacy mode]).
| - |ICMP |Ping |{CMK} monitors the accessibility of hosts via ping. If this is not possible, the host state determination must be specified with the xref:hosts_setup#monitoring_agents[[.guihint]#Host Check Command#] rule.
|===

xref:glossar#active_check[Active checks] directly access the ports of the monitored services, which must therefore also be accessible from the {CMK} server.
Monitoring with xref:glossar#special_agent[special agents] may require opening other/additional ports.
For example, the special agent for VMware ESXi (as well as NetApp and many others) requires the opening of port 443 on the ESXi server.
endif::[]

[#cmk_incoming_host_outgoing]
=== The {CMK} server

The following ports on the {CMK} server must be accessible to the hosts in the monitoring.

[cols="10,10,~,~",options="header"]
|===
|Port |Protocol |Designation |Supplementary information
ifdef::onprem[]
|80 |TCP |Hypertext Transfer Protocol (HTTP) |xref:glossar#agent_updater[Agent Updater] (xref:glossar#agent_bakery[Agent Bakery]), Agent Controller port discovery
|162 |UDP |Simple Network Management Protocol Trap (SNMPTRAP) EC |Receive xref:ec#snmp[SNMP traps via Event Console] _(can be optionally enabled)_
|443 |TCP |Hypertext Transfer Protocol over SSL/TLS (HTTPS) |Agent Updater (Agent Bakery), Agent Controller port discovery, with transport encryption
|514 |TCP and UDP |Syslog (EC) |Receive xref:ec#setup[syslog messages via the Event Console] _(can be optionally enabled)_
|6559 |UDP |link:https://checkmk.com/werk/8350[Real-time checks^] |Receive UDP packets for real-time checks of individual services (rarely used, _can be optionally enabled_)
endif::[]
ifdef::saas[]
|443 |TCP |Hypertext Transfer Protocol over SSL/TLS (HTTPS) |xref:glossar#agent_updater[Agent Updater] (xref:glossar#agent_bakery[Agent Bakery]), Agent Controller port discovery
endif::[]
|8000 |TCP |Agent Controller TLS registration, agents in xref:glossar#push_mode[push mode] |If multiple sites are running on the {CMK} server, additional ports (8001, 8002...) may be needed.
|===

The TLS registration of agents uses the REST API on port 
ifdef::onprem[]
80/443
endif::[]
ifdef::saas[]
443
endif::[]
to discover the port to register (normally 8000 TCP).
If both ports are unreachable, the port can be specified via a xref:agent_linux#networkrequirements[command line option].
If port 8000 is unreachable, xref:agent_linux#proxyregister[a registration by proxy] can be performed through other hosts in the monitoring.


ifdef::onprem[]
[#distributed_monitoring]
== Distributed monitoring

[#remote_incoming_cmk_outgoing]
=== Remote sites

The following ports on remote sites must be accessible from the {CMK} server operating as the central site.

[cols="10,10,~,~",options="header"]
|===
|Port |Protocol|Name |Supplementary information
|80 |TCP |HTTPS (Hypertext Transfer Protocol) |Synchronization in xref:glossar#distributed_monitoring[distributed monitoring]
|443 |TCP |Hypertext Transfer Protocol over SSL/TLS (HTTPS) |Synchronization in distributed monitoring, with transport encryption
|5671 |TCP |Advanced Message Queuing Protocol (AMQP) |A message broker is used to forward xref:piggyback#distributed_piggyback[Piggyback data in distributed monitoring]
|6555 |TCP |Notification spooler |The xref:distributed_monitoring#notifications[notification spooler] is used to send notifications centrally, here when a connection is established by the central site _(can be optionally enabled)_
|6557 |TCP |xref:glossar#livestatus[Livestatus] |If multiple sites are running on the {CMK} server, additional ports may be required _(can be optionally enabled)_
|6558 |TCP | |xref:ec#statusinterface[Event Console status port] _(can be optionally enabled)_
|===


[#cmk_incoming_remote_outgoing]
=== The central site

In principle, distributed monitoring is already possible without further aids such as tunneling if the central site can establish a connection to the remote sites.
Accessibility of the central site by remote sites is only required for optional functionalities (e.g. Agent Bakery).

The following ports on the {CMK} server operating as a central site must be accessible by the associated remote sites to provide the described functionality.

[cols="10,10,~,~",options="header"]
|===
|Port |Protocol |Designation |Supplementary information
|80 |TCP |Hypertext Transfer Protocol (HTTP) |For xref:glossar#agent_bakery[Agent Bakery] and xref:dcd#[dynamic host management]
|443 |TCP |Hypertext Transfer Protocol over SSL/TLS (HTTPS) |For Agent Bakery and dynamic host management, with transport encryption
|5671 |TCP |Advanced Message Queuing Protocol (AMQP) |A message broker is used to forward xref:piggyback#distributed_piggyback[Piggyback data in distributed monitoring]
|6555 |TCP |Notification spooler |The xref:distributed_monitoring#notifications[notification spooler] is used to send notifications centrally, here when a connection is established by a remote site _(can be optionally enabled)_
|===

[TIP]
====
If the _message broker RabbitMQ_ is used (currently only required for forwarding xref:piggyback#distributed_piggyback[piggyback data in distributed monitoring]), ensure star-shaped mutual accessibility of port 5671:
Each remote site must be able to reach the central site and the central site must be able to reach each remote site.
If meshed accessibility is also possible, where remote sites can reach each other directly, messages are transmitted via this direct route.
====
endif::[]


ifdef::onprem[]
[#loopback]
== Local ports on the {CMK} server

The following ports are used by the {CMK} server on the local loopback interface.
If you use a very strict firewall configuration on your {CMK} server, these ports must be enabled for incoming and outgoing communication on the IP address 127.0.0.1 (IPv4), respectively ::1 (IPv6).

[cols="10,10,~,~",options="header"]
|===
|Port |Protocol |Designation |Supplementary information
|5000 |TCP | HTTP Site Apache |Each {CMK} site has its own Apache, which is accessed by the externally callable Apache as a reverse proxy. Additional sites use port 5001, etc.
|6558 |TCP | | Event Console status port _(can be optionally enabled)_
|15671 |TCP | RabbitMQ Management |This port is used internally for the link:https://www.rabbitmq.com/docs/networking#ports[administration of the RabbitMQ message broker^] (currently only required for the forwarding of piggyback data in distributed monitoring).
|25672 |TCP | RabbitMQ Management |This port is used internally for the administration of the RabbitMQ message broker (see above).
|===
endif::[]

ifdef::onprem[]
[#loopbackwindows]
== Local port on Windows hosts

The following port is used on Windows hosts in monitoring for communication of the two components, _agent program_ and _Agent Controller_.
If you use a very strict firewall configuration on the monitored host, this port must be enabled for incoming and outgoing communication on the IP address 127.0.0.1 (IPv4), respectively ::1 (IPv6).

[cols="10,10,~,~",options="header"]
|===
|Port |Protocol |Designation |Supplementary information
|28250 |TCP |{CMK} agent |The agent program opens the port. The `cmk-agent-ctl.exe` Agent Controller responsible for encrypted communication with the {CMK} server accesses it.
|===
endif::[]


ifdef::onprem[]
[#appliance_cluster]
== The {CMK} appliance cluster

You can combine two {CMK} appliances ('nodes') into a xref:appliance_cluster#[cluster].
All configurations and data will then be synchronized between the two devices.

The following ports must be enabled for inbound and outbound communication for both nodes.

*Attention!* 
Since the communication between both appliances is unencrypted, you might need to take some measures to prevent unauthorized persons from intercepting the network traffic.
For example, this could be a direct connection if both appliances are in a rack, or the use of an encrypted VLAN if physical proximity is not desired.

[cols="10,10,~,~",options="header"]
|===
|Port |Protocol |Designation |Supplementary information
|3121 |TCP |Pacemaker |Pacemaker cluster resource manager
|4321 |UDP |Corosync |Corosync cluster engine
|4323 |UDP |Corosync |Corosync cluster engine
|7789 |TCP |DRBD |Synchronization of DRBD (Distributed Replicated Block Device)
|===
endif::[]


ifdef::onprem[]
[#misc_ports]
== Accessible ports (outgoing)

You may need some additional ports reachable from the {CMK} server:

[cols="10,10,~,~",options="header"]
|===
|Port |Protocol |Designation |Supplementary information
|53 |UDP |DNS |Name servers specified in the system settings must be reachable
|123 |UDP |NTP |Time synchronization
|25/465/587 |TCP |SMTP |Transmission of notifications from the {CMK} server via email (ports depending on the mail server configuration)
|443 |TCP |HTTPS |Communication with the xref:license#[license server] (only commercial editions, Server: `license.checkmk.com`, alternative: xref:license#manualtrans[manual submission])
|389/636 |TCP |LDAP |LDAP authentication (port 389 TCP, as LDAPS on port 636 TCP)
|===
endif::[]

////
* SMTP to send notifications from the {CMK} server via email (port 25, 465 or 587 TCP depending on the mail server configuration)
* NTP time synchronization (port 123 UDP)
* DNS (port 53 UDP)
* LDAP authentication (port 389 TCP, as LDAPS on port 636 TCP)
////