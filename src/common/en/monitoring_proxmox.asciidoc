// -*- coding: utf-8 -*-
// IGNORE Blogartikel PVEAuditor
// NO-LUNR
include::global_attr.adoc[]
= Proxmox überwachen
:revdate: draft
:title: Monitoring Proxmox
:description: With {CMK}, you can also monitor the Proxmox virtualization environment. Read here for basic information on setup.

{related-start}
xref:agent_linux#[Monitoring Linux]
xref:special_agents#[Special agents]
link:https://checkmk.com/de/integrations[Catalog of check plug-ins^]
xref:intro_setup_monitor#[Setting up monitoring]
{related-end}

////
Start of translation

== Einleitung

[{image-left}]
image::logo_proxmox.png[width=140]

Proxmox-Monitoring ist unerlässlich für genaue, zeitnahe Einblicke in den Zustand Ihrer virtuellen Umgebung.

Dieser Artikel behandelt - für den schnellen Einstieg - nur die in {CMK} relevanten Einstellungen für die Nutzung des Spezialagenten.
Er ist damit vor allem für Benutzer gedacht, die "nur noch" {CMK} einrichten wollen.
Wenn Sie sich darüber hinaus für weiterführende Informationen, die Überwachung von Proxmox Clustern und die Einrichtung innerhalb von Proxmox interessieren, empfehlen wir Ihnen den Blogartikel 
link:https://checkmk.com/blog/proxmox-monitoring[Proxmox monitoring: How to do it efficiently with Checkmk.]


== Voraussetzungen in Proxmox

Als Grundlage für eine erfolgreiche Überwachung mit {CMK} benötigen Sie eine eingerichtete Proxmox VE Konfiguration.

Legen Sie in Proxmox einen Benutzer im Realm 'Proxmox VE authentication server' an, welchen Sie ausschließlich für die Überwachung durch Checkmk verwenden (im folgenden Beispiel heißt dieser Benutzer `checkmk`).

Dieser Benutzer braucht in seinen Permissions (über User permissions oder Group permissions) die folgenden Einträge:

* Rolle: PVEAuditor
* Path: /

Außerdem empfehlen wir Ihnen {CMK} Linux-Agenten auf den Proxmox-Knoten zu installieren - damit erhalten Sie noch weitaus mehr interessante Informationen zu Ihrer Proxmox-Umgebung.


== Einrichtung in {CMK}

Sobald Sie Ihr Proxmox vorbereitet haben, richten Sie die {CMK}-Seite ein.

[#create_host]
=== Host für Proxmox anlegen

Legen Sie zuerst einen Host für den Proxmox-Knoten an, wie im Abschnitt xref:hosts_setup.html#create_hosts[Hosts im Setup erstellen und bearbeiten] beschrieben.

image::monitoring_proxmox_newhost.png[alt="Einstellung des Monitoring-Agents für den neuen Host."]

Wenn Sie unserer Empfehlung gefolgt sind und auf dem Proxmox-Knoten einen Agenten installiert haben, dann setzen Sie die Option [.guihint]#Checkmk agent / API integrations# auf [.guihint]#Configured API integrations and Checkmk agent#.

Richten Sie danach die Konfiguration des Proxmox-Spezialagenten ein über [.guihint]#Setup > Agents > VM, cloud, container > Proxmox VE# und dann [.guihint]#Add rule#:

image::monitoring_proxmox_addrule.png[alt="Der Spezialagent mit Username, Passwort und expliziten Hosts."]

Als [.guihint]#Username# müssen Sie `checkmk@pve` angeben.

Gleichzeitig sollten Sie das Monitoring explizit auf Ihre Proxmox-Knoten einschränken.


[#hosts]
=== Hosts für die Proxmox-VMs anlegen

Der Spezialagent liefert ganz viele Daten über die VMs und Container an (xref:glossar#piggyback[Piggyback]).
Damit hieraus die gewünschten Piggybacked-Hosts entstehen, müssen Sie als nächstes diverse Hosts anlegen.
Deren Namen müssen dabei exakt den Benennungen in Proxmox entsprechen.
Als Nutzer einer unserer kommerziellen Editionen können Sie dies alternativ einfach der xref:dcd#[dynamischen Host-Verwaltung] überlassen.


==== Dynamische Host-Verwaltung einrichten

{cee-only}
Der Menüeintrag [.guihint]#Setup > Hosts > Dynamic host management# bringt Sie zur Übersichtsseite aller bereits konfigurierten Verbindungen.
Klicken Sie hier auf icon:icon_new[] [.guihint]#Add connection# und geben Sie der Verbindung anschließend eine [.guihint]#ID# und einen [.guihint]#Title.#

Im Folgenden werden nicht alle Optionen der [.guihint]#Connection properties# behandelt.
Konsultieren Sie bei Fragen die Inline-Hilfe und den oben verlinkten Hauptartikel.

Stellen Sie zuerst sicher, dass für den Kasten [.guihint]#Connection properties# der xref:intro_gui#show_less_more[Show-more-Modus] aktiviert ist, damit alle verfügbaren Optionen angezeigt werden.

Klicken Sie als nächstes unter [.guihint]#Piggyback creation options# auf [.guihint]#Add new element#.
Passen Sie den Ordner an, in dem die Hosts Ihrer VM-Instanzen erstellt werden sollen.
Die vorausgewählten [.guihint]#Host attributes# sind für Piggybacked-Hosts im Grunde korrekt und bedürfen eher nicht der Anpassung.

Mit dem Aktivieren der Option [.guihint]#Delete vanished hosts# können Sie dafür sorgen, dass Piggybacked-Hosts, für die über einen bestimmten Zeitraum keine frischen Daten mehr kommen, automatisch wieder gelöscht werden.

Im Rahmen der Überwachung Ihrer Proxmox-Umgebung sollte die Option [.guihint]#Restrict source hosts# aktiviert werden.
Tragen Sie hier Ihren Proxmox-Host aus dem Abschnitt xref:create_host[Host für Proxmox anlegen] ein.

Eine exemplarische Konfiguration der Verbindung könnte dann so aussehen:

image::monitoring_proxmox_connection_properties.png[alt="Exemplarische Konfiguration der Connection Properties."]


==== Hosts für Proxmox manuell anlegen

Alternativ können Sie Hosts für die Piggyback-Daten auch manuell anlegen.
Dabei ist es wichtig, dass die Namen der Hosts exakt dem xref:hosts[oben beschriebenen Schema] entsprechen.

ifdef::onprem[]
[TIP]
====
Mit dem Kommando `cmk-piggyback list orphans` finden Sie alle xref:piggyback#orphaned_piggyback_data[verwaisten Piggybacked-Hosts,] für die es zwar Daten gibt, die aber noch nicht als Hosts in {CMK} angelegt sind.
====
endif::[]

Konfigurieren Sie die Hosts für Ihre Proxmox-VMs und -Container und wählen Sie als Monitoring-Agent [.guihint]#No API integrations, no {CMK} agent# aus.
Wenn Sie unter [.guihint]#Piggyback# auch noch die Option [.guihint]#Always use and expect piggyback data# wählen, werden Sie beim Ausbleiben der Daten entsprechend gewarnt.

image::monitoring_proxmox_add_host_for_piggyback_data.png[alt="Einstellungen 'Monitoring agents' für die Hosts."]

End of translation
////
