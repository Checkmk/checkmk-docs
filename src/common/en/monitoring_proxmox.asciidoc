// -*- coding: utf-8 -*-
// IGNORE PVEAuditor
include::global_attr.adoc[]
= Monitoring Proxmox
:revdate: 2025-07-28
:title: Monitoring Proxmox
:description: With {CMK}, you can also monitor the Proxmox virtualization environment via a special agent. Read here for basic information on setup.

{related-start}
xref:agent_linux#[Monitoring Linux]
xref:special_agents#[Special agents]
link:https://checkmk.com/de/integrations[Catalog of check plug-ins^]
xref:intro_setup_monitor#[Setting up monitoring]
{related-end}


== Introduction

[{image-left}]
image::logo_proxmox.png[width=140]

Proxmox monitoring is essential for accurate, real-time insights into the state of your virtual environment.

For a quick introduction, this article only covers the relevant settings for using the special agent in {CMK}.
It is therefore primarily intended for users who 'only' want to set up {CMK}.
If you are also interested in further information, for example, the monitoring of Proxmox clusters and the setup within Proxmox, we recommend the  
link:https://checkmk.com/blog/proxmox-monitoring[Proxmox monitoring: How to do it efficiently with Checkmk] blog article.


== Prerequisites in Proxmox

As a basis for successful monitoring with {CMK} you will need a properly set up Proxmox VE configuration.

Create a user in the ‘Proxmox VE authentication server’ realm in Proxmox, which you use exclusively for monitoring with Checkmk (in the following example this user is called ‘checkmk’).

This user needs the following entries in their permissions (via User permissions or Group permissions):

* Role: PVEAuditor
* Path: /

We also recommend that you install {CMK} Linux agents on the Proxmox nodes -- this will provide you with much more interesting information about your Proxmox environment.


== Setting up in {CMK}

Once you have prepared your Proxmox, set up the {CMK} page.

[#create_host]
=== Creating a host for Proxmox

First create a host for the Proxmox node as described in the section xref:hosts_setup.html#create_hosts[Creating and editing hosts in the Setup menu].

image::monitoring_proxmox_newhost.png[alt="Setting the monitoring agent for the new host."]

If you have followed our recommendation and have installed an agent on the Proxmox node, then set the [.guihint]#Checkmk agent / API integrations# option to [.guihint]#Configured API integrations and Checkmk agent#.

Next, configure the Proxmox special agent via [.guihint]#Setup > Agents > VM, cloud, container > Proxmox VE# and then [.guihint]#Add rule#:

image::monitoring_proxmox_addrule.png[alt=“The special agent with username, password and explicit hosts.”]

You must specify `checkmk@pve` as the [.guihint]#username#.

At the same time, you should explicitly restrict the monitoring to your Proxmox nodes.


[#hosts]
=== Creating hosts for the Proxmox VMs

The special agent provides a lot of data about the VMs and containers (xref:glossar#piggyback[Piggyback]).
To create the desired piggybacked hosts from this, you must next create various hosts.
Their names must correspond exactly to the names in Proxmox.
As a user of one of our commercial editions, you can alternatively simply leave this to the xref:dcd#[Dynamic host management].


==== Setting up dynamic host management

{cee-only}
The [.guihint]#Setup > Hosts > Dynamic host management# menu item takes you to the overview page for all of the connections that have already been configured.
Here, click on icon:icon_new[] [.guihint]#Add connection# and then give the connection an [.guihint]#ID# and a [.guihint]#Title.#

Not all options in the [.guihint]#Connection properties# are covered below.
If you have any questions, please consult the inline help and the main article linked above.

First make sure that the xref:intro_gui#show_less_more[show-more mode] is activated for the [.guihint]#Connection properties# box so that all available options are displayed.

Next, under [.guihint]#Piggyback creation options#, click [.guihint]#Add new element#.
Customize the folder in which the hosts for your VM sites are to be created.
The preselected [.guihint]#Host attributes# are basically correct for piggybacked hosts and do not need to be changed.

By activating the [.guihint]#Delete vanished hosts# option, you can ensure that piggybacked hosts for which no more fresh data is received over a certain period of time are automatically deleted again.

The [.guihint]#Restrict source hosts# option should be activated as part of the monitoring of your Proxmox environment.
Enter your Proxmox host from the section xref:create_host[Creating a host for Proxmox] here.

A typical configuration of the connection could then look like this:

image::monitoring_proxmox_connection_properties.png[alt=“Exemplary configuration of the connection properties.”]


==== Manually creating hosts for Proxmox

Alternatively, you can also create hosts for the piggyback data manually.
It is important that the names of the hosts correspond exactly to the xref:hosts[scheme described above].

ifdef::onprem[]
[TIP]
====
With the `cmk-piggyback list orphans` command you can find all xref:piggyback#orphaned_piggyback_data[orphaned piggybacked hosts] for which there is data but which have not yet been created as hosts in {CMK}.
====
endif::[]

Configure the hosts for your Proxmox VMs and containers and select [.guihint]#No API integrations, no {CMK} agent# as the monitoring agent.
If you also select the [.guihint]#Always use and expect piggyback data# option under [.guihint]#Piggyback#, you will be warned accordingly if the data is not received.

image::monitoring_proxmox_add_host_for_piggyback_data.png[alt=“The ‘Monitoring agents’ settings for the hosts.”]