// -*- coding: utf-8 -*-
include::global_attr.adoc[]
= Configuring {CMK}
:revdate: 2025-01-13
:title: Configuring {CMK}
:description: {CMK} enables the entire basic configuration directly in the web interface. This article offers a first introduction to the configuration environment.

{related-start}
ifdef::onprem[]
xref:cmk_commandline#[{CMK} on the command line]
endif::[]
xref:hosts_setup#[Host administration]
xref:wato_rules#[Rules]
{related-end}


[#setup_menu]
== Setup menu

Your entry point to the configuration of {CMK} is the [.guihint]#Setup# menu, which you can open via the navigation bar:

ifdef::onprem[]
.The [.guihint]#Setup# menu of {CE} in Show more mode
image::wato_setup_menu_showmore.png[alt="Setup menu in the navigation bar."]
endif::[]

ifdef::saas[]
.The [.guihint]#Setup# menu in Show more mode
image::wato_setup_menu_showmore_saas.png[alt="Setup menu in the navigation bar."]
endif::[]

In this menu you will find the tools with which you can set up and configure {CMK}.
The menu is divided into _topics_.
Below each topic you will find the menu items.

The following table gives an overview of the menus and in which part of the User Guide you will find more detailed information.

[cols="25,~",options="header"]
|===
|Menu |Content

|[.guihint]#Hosts# |The xref:hosts_setup#[administration of hosts] to be monitored.
Here you will find
the hosts,
the host monitoring xref:wato_rules#[rules],
the xref:host_tags#[host tags],
ifdef::onprem[]
the connections for the xref:dcd#[dynamic host management] (only in the commercial editions),
endif::[]
ifdef::saas[]
the connections for the xref:dcd#[dynamic host management],
endif::[]
the xref:hosts_structure#host_groups[host groups]
and the rules for the xref:inventory#[HW/SW inventory].
With [.guihint]#Custom host attributes#, you can create your own attributes that can be added to the properties of the hosts.

|[.guihint]#Services# |The xref:wato_services#[configuration of services] running on the hosts.
Here you will find
the xref:wato_rules#[rules] for service monitoring,
for  xref:wato_services#discovery[service discovery],
for  xref:wato_services#enforced_services[enforced services],
and for monitoring network services like HTTP, TCP, email (xref:active_checks#[active checks]).
In addition, you can open the list of xref:wato_services#service_groups[service groups] and the link:https://checkmk.com/integrations[catalog of check plug-ins^] in {CMK}.

|[.guihint]#Business Intelligence# |Getting started with the management of xref:bi#[Business Intelligence (BI)].

|[.guihint]#Agents# |The xref:wato_monitoringagents#[monitoring agents] that transmit the data from the hosts.
Here there are
the xref:wato_monitoringagents#agents[{CMK} agents] for Linux, Windows and other operating systems available for download,
ifdef::onprem[]
access to the xref:wato_monitoringagents#bakery[Agent Bakery] (only in the commercial editions), which can be used to configure, package and automatically update agents,
and agent registration to xref:hosts_autoregister#[automatically create hosts] (only in {CE} and {ME}).
You can also find rules for monitoring other systems -- e.g. with xref:special_agents#[special agents] and via xref:snmp#[SNMP].
endif::[]
ifdef::saas[]
access to the xref:wato_monitoringagents#bakery[Agent Bakery], which can be used to configure, package and automatically update agents,
and agent registration to xref:hosts_autoregister#[automatically create hosts].
You can also find rules for monitoring other systems -- e.g. with xref:special_agents#[special agents].
endif::[]
The [.guihint]#VM, cloud, container# entry leads you, among other things, to the rules for monitoring xref:monitoring_aws#[Amazon Web Services (AWS)], xref:monitoring_azure#[Microsoft Azure], xref:monitoring_gcp#[Google Cloud Platform (GCP)], xref:monitoring_kubernetes#[Kubernetes], xref:monitoring_prometheus#[Prometheus], and xref:monitoring_vmware#[VMware ESXi].

ifdef::onprem[]
|[.guihint]#Quick Setup# |The quick setup for monitoring AWS, Microsoft Azure and GCP.
endif::[]

|[.guihint]#Events# |The processing of events --
ifdef::onprem[]
with the overview, for testing and analyzing xref:notifications#[notifications],
and with rules for xref:ec#[Event Console] and xref:alert_handlers#[alert handler] (only in the commercial editions).
endif::[]
ifdef::saas[]
with rules for xref:notifications#[notifications].
endif::[]

|[.guihint]#Users# |The topics relating to xref:wato_user#[users, roles and permissions].
ifdef::onprem[]
You can call up the lists of users, contact groups and roles,
set up the xref:ldap#[user management with LDAP/Active Directory]
and configure authentication with xref:saml#[SAML] (only in the commercial editions).
endif::[]
ifdef::saas[]
You can call up the lists of users and contact groups.
endif::[]
You can also create xref:wato_user#custom_user_attributes[custom attributes].

|[.guihint]#General# |Comprehensive topics can be found here, including
[.guihint]#Rule search# for finding rules (again),
xref:wato_rules#conditions[predefined conditions] for use in rules,
the [.guihint]#Global settings#,
ifdef::onprem[]
the xref:timeperiods#[time periods],
the xref:password_store#[password store]
and the entry to xref:distributed_monitoring#[distributed monitoring].
endif::[]
ifdef::saas[]
the xref:timeperiods#[time periods]
and the xref:password_store#[password store].
endif::[]
With [.guihint]#Audit log# you can display all changes ever made to the configuration environment and with [.guihint]#Read only mode# temporarily prevent such changes.

|[.guihint]#Maintenance# |This topic summarizes actions to maintain {CMK}, such as
ifdef::onprem[]
creating xref:backup#[backups],
endif::[]
xref:analyze_configuration#[analyzing the {CMK} configuration]
or selecting data for xref:support_diagnostics#[support diagnostics].
ifdef::onprem[]
The entries for xref:license#[licensing] and handling of xref:mkps#[{CMK} extension packages (MKPs)] are only available in the commercial editions.
endif::[]

ifdef::onprem[]
|[.guihint]#Exporter# |The export of data, i.e. metrics to xref:metrics_exporter#[InfluxDB (and Graphite)].
This topic is only available in the commercial editions.

|[.guihint]#Synthetic Monitoring# |The introduction to {CMK} Synthetic Monitoring with Robotmk.
This topic is only available in the commercial editions.
endif::[]
|===

The configuration is stored by {CMK} in a conventional text data format which experienced users can edit manually, or even create using scripts.


ifdef::onprem[]
[#setup_shortcuts]
== Setup shortcuts
endif::[]
ifdef::saas[]
[#quick_setup]
== Quick setup
endif::[]

Once you have more experience in working with the [.guihint]#Setup# menu, you will have learned its icons by heart
-- especially if you have the icons in the mega menus displayed for each menu item,
as you can set in the xref:user_interface#user_menu[User menu].

ifdef::onprem[]
Then, for quick access, we recommend the [.guihint]#Setup shortcuts# snap-in for the xref:user_interface#sidebar[sidebar] with its icons for each [.guihint]#Setup# menu item:

.The [.guihint]#Setup shortcuts# snap-in of {CE} in Show less mode
image::wato_setup_shortcuts.png[alt="Setup shortcuts snap-in.",width=50%]
endif::[]

ifdef::saas[]
Then, for quick access, we recommend the [.guihint]#Quick setup# snap-in for the xref:user_interface#sidebar[sidebar] with its icons for each [.guihint]#Setup# menu item:

.The [.guihint]#Quick setup# snap-in Show less mode
image::wato_quick_setup_saas.png[alt="Quick setup snap-in.",width=50%]
endif::[]


[#activate_changes]
== Activating changes

{CMK} initially saves all changes you make only in a temporary *configuration environment*, in which you manage hosts, services and settings,
and which does not yet affect the currently-running monitoring.
Only by 'activating the pending changes' will these be transferred to the _production_ *monitoring environment*.

Changes in the configuration -- e.g. the addition of a new host -- therefore initially have no influence on the monitoring.
Only through activation do all changes that have accumulated since the last activation become active as a ‘bundle’ at the same time.

This might seem a little cumbersome,
but it does have the advantage that more complex changes can be prepared without haste in advance before being put into production.
For example, after adding a new host, you might want to define thresholds or remove some services before ‘arming’ the whole thing.

Whenever you make a change to the monitoring configuration using the [.guihint]#Setup# menu, this change will at first be picked up and held as _pending_.

You will find a yellow button on the top right of each configuration environment page with the number of pending changes that are not yet activated.
This button will open a list of these pending changes:

image::wato_pending_log.png[alt="List of pending changes for activation."]

Clicking [.guihint]#Activate on selected sites# will create a new configuration for the monitoring core from the configuration files
and instruct the core to immediately begin using the new configuration:

image::wato_activate_changes.png[alt="Illustration of the change activation from the configuration environment to the monitoring environment.",width=500px]

This clears the list of pending changes.
These entries are not lost however -- they can subsequently be called up via [.guihint]#Setup > General > Audit log#.
There you will find the contents of the log file with all activated changes that have ever been made in the site.
The [.guihint]#Audit log# can be filtered and shows today's changes by default.

[TIP]
====
If you try to activate changes and another activation is currently running, you will receive a corresponding warning:

image::wato_activation_blocked.png[alt="Message that the activation is currently blocked."]

You can see from the message who (i.e. which {CMK} user) has started another activation and how (via the GUI or the xref:rest_api#[REST-API]).
====


[#revert_changes]
== Revert changes

You will encounter the activation of changes again and again when setting up your monitoring system, as well as every time you adjust the configuration later on.
Especially if you make more complex modifications to your system, you may want to revert changes during the editing process instead of activating them.
Use the menu item [.guihint]#Changes > Revert changes# for this purpose.

This allows you to discard all pending changes since the last [.guihint]#Activate on selected sites#:

image::wato_revert_changes.png[alt="Confirmation to revert the changes."]

All changes that will be reverted if you approve the confirmation dialog are displayed in the lower area.
This takes you back to the status of the last change activation.