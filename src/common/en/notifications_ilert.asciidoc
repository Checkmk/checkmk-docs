// -*- coding: utf-8 -*-
// IGNORE
include::global_attr.adoc[]
= Notifications via ilert
:revdate: 2024-03-25
:title: Notifications via ilert
:description: You can have {CMK} send notifications to the ilert platform. Find out here how to connect.

{related-start}
xref:notifications#[Notifications]
{related-end}


link:https://www.ilert.com/[ilert^] is a platform for alerting, on-call duty and status pages that collects alerts from various sources and can process them further.
{CMK} can be used as one of these alert sources.
The notifications from {CMK} are displayed in ilert as alerts, for which actions can be defined,
such as setting up workflows or forwarding the alerts by email and to other incident management systems such as Jira or TOPdesk.

The connection is made via an API key that you create in ilert for an alert source in the {CMK} integration.
 
[TIP]
====
In our link:https://checkmk.com/blog/setting-up-checkmk-in-ilert[blog article^] you can learn how to process the alerts in ilert once the connection has been established.
====


[#config_ilert]
== Configuring ilert

In ilert, you create a new alert source for {CMK} and receive the corresponding API key at the end of the setup:

. Open the [.guihint]#Alert sources# page and start the creation of a new alert source with [.guihint]#Create a new alert source#.
A wizard will guide you through the next steps.
Below we suggest the entries that will give you the quickest procedure to your destination.
At a later time you can change the decisions made in the wizard by editing the alert source.

. On the first wizard page, select {CMK} as the integration for the alert source and confirm with [.guihint]#Next#.
Then give your alert source a name.
Next, select an escalation policy, e.g. [.guihint]#Default.#
Finally, select the alert grouping or leave it (for now) with [.guihint]#Do not group alerts.#

. Exit the wizard with [.guihint]#Continue setup#.
You will receive a summary of the settings made so far and further selection options for the alert template and notification priority.
+
You can set the notification priority in both ilert, xref:config_checkmk[and later in {CMK}].
If you want the priority to be controlled by
{CMK}, select [.guihint]#High (with escalation)# or [.guihint]#Low (no escalation),# i.e. a value that is available in both systems.
Also leave the priority mapping deactivated.

. Confirm with [.guihint]#Finish setup.#
The API key that you need for the configuration in {CMK} is displayed on the following page.
In front of this key you will find a button for copying to the clipboard.


[#config_checkmk]
== Configuring {CMK}

You have already learned how to set up {CMK} notifications in general in the article on xref:notifications#[notifications].

In {CMK} it is now sufficient to specify the key copied above:

. Create a new notification rule with [.guihint]#Setup > Events > Notifications > Add rule#.
. For the [.guihint]#Notification Method# choose [.guihint]#iLert#.
. Enter the copied key under [.guihint]#API key#:
+
image::notifications_ilert.png[alt="The settings for the notification method for ilert."]
+
Instead of entering the key directly here, you can also read it from the xref:password_store#[password store] -- provided it was previously stored there.

The selection under [.guihint]#Notification priority# overrides the notification priority in certain cases, as described in xref:config_ilert[configuring ilert].

Use the two input fields for [.guihint]#Custom incident summary# to specify how a {CMK} notification is displayed in ilert under the list of alerts as a [.guihint]#Summary#.

Optionally, you may specify URL prefixes to control links to your {CMK} GUI within the notification.

When using the following [.guihint]#Contact selection# box, note the following two points:

include::include_ticketsystem.asciidoc[]

[TIP]
====
In ilert, only the 
ifdef::onprem[]
xref:notifications#environment_variables[{CMK} notification types]
endif::[]
ifdef::saas[]
{CMK} notification types
endif::[]
`PROBLEM`, `ACKNOWLEDGEMENT` and `RECOVERY` are processed -- all others are ignored.
====

You can find out how to test the new notification method in the article on xref:notifications#notification_testing[notifications].
