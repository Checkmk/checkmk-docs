// -*- coding: utf-8 -*-
include::global_attr.adoc[]
= Notifications via Slack
:revdate: 2025-07-08
:title: Notifications via Slack
:description: You can have {CMK} send notifications to the instant messaging service Slack. Find out here how to connect.

{related-start}
xref:notifications#[Notification basics]
{related-end}


With the link:https://slack.com/[Slack^] messenger you can conveniently receive notifications via a webhook.
This works on self-hosted or rented servers, as well as via the free public Slack service.


[#config_slack]
== Configuring Slack

To activate webhooks and create a new webhook, you must first create a Slack app.
Log in to Slack and create a _Workspace_.
Then proceed as follows:

. Create a new app via link:https://api.slack.com/messaging/webhooks[this link^] using the Slack API.
. Assign any name you like and choose your workspace.
. In the next dialog choose [.guihint]#Incoming Webhook# as the app function.
. Next activate webhooks by setting the switch to [.guihint]#on.#
. Create the webhook with the [.guihint]#Add New Webhook to Workspace# button.
. Finally, set the channel (group) where the app should post to, and confirm the rights request.

For testing purposes, on completion you will receive a `curl` statement which posts _Hello World_ to the desired channel.
Copy the webhook URL and switch to {CMK}.


[#config_checkmk]
== Configuring {CMK}

You have already learned how to set up {CMK} notifications in general in the article on xref:notifications#[notifications.]

In {CMK} it is now sufficient to specify the URL copied above:

. Create new parameters for Slack with [.guihint]#Setup > Events >  Notifications > Parameters for notification methods > Parameters for Slack or Mattermost > Add parameter.#
. Under [.guihint]#Parameter properties,# enter the copied webhook URL, which must begin with `https://`:
+
image::notifications_parameter_slack.png[alt="The parameter settings for the notification method for Slack and Mattermost."]
+
Instead of entering the URL directly here, you can also read it from the xref:password_store#[password store] - provided it was previously stored there.

Optionally, you may specify URL prefixes to control links on your {CMK} GUI within the notification.

You can find out how to test the new notification method in the article on xref:notification_rules#notification_testing[notification rules].

