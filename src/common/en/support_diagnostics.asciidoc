// -*- coding: utf-8 -*-
// IGNORE Config Microcore check_mk_server
// NONASCII …​
include::global_attr.adoc[]
= Support diagnostics
:revdate: 2024-02-26
:title: Support diagnostics - Collect diagnostic information
:description: You can select and collect diagnostic information in a central location and later send this dump to {CMK} support for error analysis.

[#intro]
== Introduction

Should you ever be confronted with problems in {CMK} that you -- with the help of this User guide -- cannot solve by yourself,
the official link:https://checkmk.com/product/support[{CMK}-Support^] and the link:https://forum.checkmk.com/[{CMK}-Forum^] are available which provide two excellent contact points.
For both a precise description of the error or problem is naturally essential.
In addition, certain specific information about your {CMK} environment is mandatory for a quick analysis and solution.
ifdef::onprem[]
The most essential information is of course the xref:cmk_versions#[version] and the xref:cmk_versions#suffix[edition] of {CMK} that you are using.
Depending on the situation, however, considerably more information may be required to be able to get to the bottom of your problem.
In the past {CMK} support told you what information you needed to provide them with.
endif::[]
ifdef::saas[]
Depending on the situation, however, considerably more information may be required to be able to get to the bottom of your problem.
endif::[]

ifdef::onprem[]
But under version {v20} life can now be much easier as you have a tool that generates the required information -- the _support diagnostics_.
Instead of the support providing you with a 'wish list' as mentioned above,
endif::[]
ifdef::saas[]
Instead of the support providing you with a 'wish list',
endif::[]
and thus sending you on a scavenger hunt through the various components of {CMK}, with just a few clicks in the graphical user interface you can create a tailor-made package of information -- referred to as the _dump_ in this article.
Here you decide for yourself whether you want to include configuration files that may possibly contain confidential information -- or not, and if so to specify which ones.

ifdef::onprem[]
{cee-only}
Some of the selectable data is only available in the commercial editions, for example [.guihint]#Performance Graphs of {CMK} Server#, [.guihint]#CMC ({CMK} Microcore)# and [.guihint]#Licensing information#.
endif::[]

ifdef::saas[]
[TIP]
====
The [.guihint]#Support Diagnostics# function of {CMK} is also necessary in {CE} (SaaS) due to the organizational separation within {com}:
Administration of the SaaS environment and support are carried out by different teams.
This way, we minimize the number of people who have access to your data.
As sensitive data may be transferred with the diagnostic information, we enable you to download and check it before transmission.
To simplify the transfer process, {CE} will be enhanced in future to include the function of forwarding the generated archive directly to your support contact.
====
endif::[]


[#compile]
== Compile support information

ifdef::onprem[]
=== Select site
endif::[]
ifdef::saas[]
=== Open Support Diagnostics
endif::[]

After clicking on [.guihint]#Setup > Maintenance > Support diagnostics# you will see the following tidy screen:

image::support_diagnostics.png[alt="Support diagnostics options."]

ifdef::onprem[]
If you are using distributed monitoring, in the first field you can specify the [.guihint]#Site# from which you want to select the data to be collected.
endif::[]
ifdef::saas[]
The drop-down menu for instance selection is irrelevant in {CE} (SaaS), as it is currently only possible to work with a single site.
endif::[]

=== General information

Under [.guihint]#General information# you will basically only find a notice that the information on the {CMK} version and the operating system in use will in any case be included.
If you leave it at that -- i.e. select none of the options -- and start the collection of the data via [.guihint]#Collect diagnostics#, you will get a file that contains only the following data:

.general.json
[{file}]
----
{
    "arch": "x86_64",
    "core": "cmc",
    "edition": "cee",
    "os": "Ubuntu 22.04.2 LTS",
    "python_paths": [
        "/opt/omd/versions/2.2.0p1.cee/bin",
        "/omd/sites/mysite/local/lib/python3",
        ...
        "/omd/sites/mysite/lib/python3"
    ],
    "python_version": "3.11.2 (main, Mar 14 2023, 20:27:12) [GCC 12.2.0]",
    "time": 1681821714.8444054,
    "time_human_readable": "2023-04-18 14:41:54.844405",
    "version": "2.2.0p1"
}
----

In addition to the `general.json` file, {CMK} generates further files in this standard setting with performance data such as the number of hosts and services, the hardware of the {CMK} server, the environment variables set in the site, the names and sizes of the files in the site and the Python modules installed there with their versions.
The [.guihint]#Background job details# page, which is opened after you have clicked [.guihint]#Collect diagnostics#, shows exactly which data is compiled.

ifdef::saas[]
[TIP]
====
Since updates of {CE} and the Linux images used are rolled out in waves (and therefore not everywhere at the same time), the information collected here is always relevant for support.
====
endif::[]

=== Optional general information

Under [.guihint]#Optional general information# you will then find choices which you can compile in advance to suit your question, or which can be or which may be explicitly requested by the support personnel.

ifdef::onprem[]
If you select [.guihint]#Local Files and MKPs# here, {CMK} will also create an overview of all files in your site's `~/local/` directory.
This can sometimes be helpful if your local customizations are incompatible with a recent update of {CMK}.
All installed xref:glossar#mkp[MKPs] are also included here.
endif::[]

With the selection of [.guihint]#OMD Config# you can add the information on your configuration of OMD to the dump.
ifdef::onprem[]
These correspond exactly to what you would get on the command line with the `omd config show` command.
endif::[]

.omd_config.json
[{file}]
----
{
    "CONFIG_ADMIN_MAIL": "",
    "CONFIG_AGENT_RECEIVER": "on",
    "CONFIG_AGENT_RECEIVER_PORT": "8000",
    "CONFIG_APACHE_MODE": "own",
    "CONFIG_APACHE_TCP_ADDR": "127.0.0.1",
    "CONFIG_APACHE_TCP_PORT": "5000",
    "CONFIG_AUTOSTART": "off",
    "CONFIG_CORE": "cmc",
    "CONFIG_LIVEPROXYD": "on",
    "CONFIG_LIVESTATUS_TCP": "off",
    "CONFIG_LIVESTATUS_TCP_ONLY_FROM": "0.0.0.0 ::/0",
    "CONFIG_LIVESTATUS_TCP_PORT": "6557",
    "CONFIG_LIVESTATUS_TCP_TLS": "on",
    "CONFIG_MKEVENTD": "on",
    "CONFIG_MKEVENTD_SNMPTRAP": "off",
    "CONFIG_MKEVENTD_SYSLOG": "on",
    "CONFIG_MKEVENTD_SYSLOG_TCP": "off",
    "CONFIG_MULTISITE_AUTHORISATION": "on",
    "CONFIG_MULTISITE_COOKIE_AUTH": "on",
    "CONFIG_PNP4NAGIOS": "on",
    "CONFIG_TMPFS": "on"
}
----

ifdef::onprem[]
If you check the [.guihint]#{CMK} Overview# checkbox, general information about *all* sites running on your {CMK} server will be included.
This also creates a list of all installed {CMK} versions.
And if the site selected above is the node for a cluster this fact will also be recorded here.
endif::[]

With the [.guihint]#Crash Reports# option, you can add the latest crash reports from the various categories -- e.g. `base`, `check`, `gui` or `rest_api` -- to the dump.
ifdef::onprem[]
Further information on crash reports can be found in the article on programming xref:devel_check_plugins#error_exception_gui[agent-based check plug-ins].
In {CMK} you can find the crash reports under [.guihint]#Monitor > System > Crash reports#.
endif::[]

After activating [.guihint]#{CMK} Log files# or [.guihint]#{CMK} Configuration files# you have the option of removing any confidential data from this part of the package -- via the [.guihint]#Pack only Low sensitivity files# selection.
All files you can select here come from the `~/var/log/` or `~/etc/checkmk/` directories and their subdirectories.
You can see a detailed list directly below the drop-down menu.
With the [.guihint]#Select individual files from list# option you even have the option to include only specified files into the dump.

With this option you can also see which files have one of the confidentiality levels High (H), e.g. files with passwords, Medium (M), if they contain addresses or user names for example, or finally Low (L).

image::support_diagnostics_sensitivity_levels.png[alt="List of selectable files."]

ifdef::onprem[]
*Note:* In order to have as much detailed information as possible on the behavior of {CMK} in the log files, it may be necessary to change the log level in {CMK} for a short time.
The corresponding settings can be found via [.guihint]#Setup > General > Global settings#.
On this page, simply type `logging` into the [.guihint]#Filter# field and then set, for example, the log level for the [.guihint]#Core# to [.guihint]#Debug#.
If you now simply let the site continue to run for a few minutes or if you repeat a reproducible error, the chances increase that information on this error show up in the log files.
endif::[]

Next, you have the option to add [.guihint]#Performance Graphs of {CMK} Server# to the dump.
Especially in cases of problems with the performance of a {CMK} site these reports are almost always requested -- so it is a good idea to include with such problems.
ifdef::onprem[]
The support diagnostics will do the work for you to manually generate a number of reports as PDF files.
Among others, the reports from the [.guihint]#OMD mysite performance# service for the last 25 hours and the last 35 days are generated.
endif::[]

ifdef::saas[]
In {CE} (SaaS), the options [.guihint]#Local Files and MKPs# and [.guihint]#{CMK} Overview# do not provide any information relevant for the support.
endif::[]

=== Component-specific information

The [.guihint]#Component specific information# section again allows you to decide in a very granular way on which information from your global {CMK} settings, your hosts and folders, and your notification settings should be included in the dump.

*Important:* Depending on the configuration, the files you select here may contain confidential information, such as passwords.
In normal operation, this data is protected by the fact that only the site user and administrators have access to it.
If you make this data available to third parties for analysis purposes, you should proceed with great caution.

In the [.guihint]#Global Settings# sub-item you will find all `global.mk`-files of the individual components of your {CMK} site,
ifdef::onprem[]
such as the Dynamic Configuration Daemon (DCD) or Livestatus Proxy Daemon.
endif::[]
ifdef::saas[]
such as the Dynamic Configuration Daemon (DCD).
endif::[]

The information that can be selected via the sub-item [.guihint]#Hosts and Folders# can, among other things, help to find unfavorable rule sets and errors in the host configuration.

In the [.guihint]#Notifications# section you will find, in addition to the corresponding configuration files, an option for the selection of log files.
In case of difficulties with your notifications, you -- or ultimately the {CMK} support -- can often find the source of the problem in these logs.

image::support_diagnostics_components.png[alt="Selection of files for the notifications."]

Use the [.guihint]#Business Intelligence# option to select the configuration files for xref:glossar#bi[Business Intelligence].
After activating one of the options [.guihint]#CMC ({CMK} Microcore)# or [.guihint]#Licensing information# you again have the possibility to remove more or less confidential data from the respective part of the package -- via the [.guihint]#Pack only Medium and Low sensitivity files# or [.guihint]#Pack only Low sensitivity files# selection.


ifdef::onprem[]
[#commandline]
== Support diagnostics via the command line

As is often the case in {CMK}, this task can be performed simply from a terminal.
This can be done easily with the `cmk` command and the `--create-diagnostics-dump` option.
For all options described above you can append the corresponding parameter to the command.

[{shell}]
----
{c-omd} cmk --create-diagnostics-dump --local-files --omd-config --performance-graphs
----

The following options complete the output from the command:

[cols="30,~"]
|===

|`--local-files` |List of all installed, unpackaged, and optional files below `~/local/`. This also includes information about installed MKPs.
|`--omd-config` |Contents of the `~/etc/omd/site.conf` file.
|`--checkmk-overview` |Information from [.guihint]#HW/SW inventory node Software > Applications > {CMK}# of the {CMK} server.
|`--checkmk-config-files FILE,FILE ...` |All .mk and .conf files from the `~/etc/checkmk` directory.
|`--checkmk-log-files FILE,FILE ...` |All log files (.log and .state) from `~/var/log`.
|`--performance-graphs` |Performance graphs (e.g. CPU load, CPU utilization) of the {CMK} server -- only available in the commercial editions.
|===

The above, and all other options for the `cmk` command can as usual be found in the output from `cmk --help`.
endif::[]


ifdef::onprem[]
[#missing_information]
== Missing information in the dump

=== Current agent needed

To be able to output specific information in the support diagnostics, you must make sure that the {CMK} servers have the agent with the version number of at least {v20} installed.
In particular, the information that comes from the HW/SW inventory of the {CMK} server was not provided at all in older versions of the agent.

=== Label cmk/check_mk_server:yes

The support diagnostics depend on the {CMK} servers in your environment being labeled accordingly.
If you are missing some data in a dump, check if your {CMK} servers are labeled with the `cmk/check_mk_server:yes` label.
endif::[]
