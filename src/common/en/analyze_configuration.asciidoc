// -*- coding: utf-8 -*-
// IGNORE [ ]
include::global_attr.adoc[]
= Analyzing the {CMK} site configuration
:revdate: 2024-05-21
:title: Analyzing the {CMK} site configuration
:description: Analyze configuration allows you to check the site of the {CMK} server for performance, security, processor utilization and more.

{related-start}
xref:wato#[Configuring {CMK}]
xref:intro_bestpractise#[Best practices, tips & tricks]
xref:security#[Security]
{related-end}


[#intro]
== Introduction

ifdef::onprem[]
Once your {CMK} server has been set up and configured, sooner or later questions will come up: 
Can the configuration be performed more quickly?
Can it be optimized?
Can the system be made more secure?
endif::[]

ifdef::saas[]
The component [.guihint]#Analyze configuration# allows you to check the site of the {CMK} server for performance, security, processor utilization and more.

[TIP]
====
The functionality presented here is primarily aimed at users who already have experience with the on-premises editions of {CMK}.
But even without experience,  before opening a support ticket  [.guihint]#Analyze configuration# can show you whether the cause of problems is more likely to be found in our default settings or in your configuration.
====
endif::[]

ifdef::onprem[]
One approach to answering these questions is to review and consequently optimize the xref:glossar#site[site] setup on the {CMK} server.
The more performant your system is, the faster and more effectively it works.
So the more reliably you can secure your site, the more confident you can be when working with it.

{CMK} quickly and clearly analyzes the essential parameters associated with the current site as well as any attached sites in the case of a xref:glossar#distributed_monitoring[distributed monitoring].

The hosts and services within your site(s) are not affected by these checks, they are still shown in the xref:views#[views of hosts and services].
The results of the _checks_ for the site covered here are displayed on the [.guihint]#Setup > Maintenance > Analyze configuration# page.
endif::[]

ifdef::saas[]
{CMK} quickly and clearly analyzes the key parameters of the current site.
The hosts and services within your site(s) are not affected by these checks, they are still shown in the xref:views#[views of hosts and services].
The results of the _checks_ for the site covered here are displayed on the [.guihint]#Setup > Maintenance > Analyze configuration# page.
endif::[]

[TIP]
====
When [.guihint]#Analyze configuration# is run, the current state of all checks is always assessed and displayed.
Therefore, after calling the menu item it may take a little while before the page with the results is displayed:
====

ifdef::onprem[]
.The standard checks in {RE}
endif::[]
ifdef::saas[]
.The standard checks in an on-premises example setup
endif::[]
image::analyze_config.png[alt=“Result from the ‘Analyze configuration’.”]

ifdef::onprem[]
The above screenshot shows the checks that are executed by default for a single site in {RE}.
However, this is not the whole story, as more checks may well be offered.
What these are depends, for example, on whether you have installed {RE} or one of the commercial editions, whether your site is used in a distributed monitoring, whether a specific rule has been set up, an LDAP connection exists, a global setting has been defined -- or even the value of an option in a rule.
Which check is relevant for your site -- {CMK} takes care of that.
endif::[]


[#interpreting]
== Interpreting the analysis

The analyzed site data is divided into different categories as checks.
Each check has a colored status display.
A check can have the following states after analysis:

[cols="10,10,~",options="header"]
|===
|State |Color |Description 
|{OK} |green |The check is completely fine. All checked values are considered optimal.
|{WARN} |yellow |The check is basically fine, but {CMK} has identified potential for improvement.
|{CRIT} |red |The check has detected critical values. These should be examined and fixed if necessary to ensure a smooth operation of {CMK}.
|===

ifdef::onprem[]
Let's consider the [.guihint]#Backup configured# check with two sites in a distributed monitoring:

image::analyze_config_backup.png[alt="Section of the 'Backup configured' check."]

This check is in a {WARN} state, so an icon:button_ackn_test[alt="Button to acknowledge the message."] button appears after the {WARN} for acknowledging this.
This button also appears for checks in the {CRIT} state.
Acknowledgment causes the yellow or red color of the state to disappear.
The entry itself remains, but becomes visually more discreet.
If the check is acknowledged, the button changes to icon:button_unackn_test[alt="Button to cancel the acknowledgment."].
This button can be used to cancel the acknowledgment.

In general, it makes sense to check the system environment for all parameters.
However, if you do not want to run individual checks (again), you can disable any of the checks by clicking on the associated icon:button_disable_test[alt="Button to disable a test."] button.
For example, turn off the [.guihint]#Backup configured# check if your organization uses a different solution for backup creation.
endif::[]


[#checks_detail]
== The checks in detail

For each check, clicking on the associated icon:button_info[alt="Show more information button."] button will give you more details on the detected values, an assessment of the status, as well as hints for optimization. 

ifdef::onprem[]
image::analyze_config_backup_ext.png[alt="Detailed view of 'Backup configured'."]
endif::[]

Much can be readily understood and acted upon based on this.
This User Guide -- as well as other sources -- provides additional information on the following topics:

[cols="15,30,~",options="header"]
|===
|Category |Check |Further information
|[.guihint]#Connectivity# |
[.guihint]#Site connectivity# |
ifdef::onprem[]
In distributed monitoring, remote sites may not be reachable due to xref:distributed_monitoring#wan[unstable or slow connections].
endif::[]
ifdef::saas[]
This check is currently only relevant for on-premises editions with distributed monitoring enabled.
endif::[]

.2+|[.guihint]#Deprecations# |
[.guihint]#Deprecated HW/SW inventory plug-ins# |
ifdef::onprem[]
In link:https://checkmk.com/werk/14084[Werk pass:q[#]14084^] you will find further details and information on the migration of plug-ins that still use the old API for the HW/SW inventory.
endif::[]
ifdef::saas[]
This check is currently only relevant for on-premises editions. In {CE} (SaaS), {com} ensures that only compatible plugins are installed.
endif::[]

|[.guihint]#Deprecated check plug-ins# |
ifdef::onprem[]
In the User Guide you will find articles about the xref:devel_intro#[developing of extensions for {CMK}] and the xref:devel_check_plugins#[developing of agent-based check plug-ins] with the Check API introduced in version {v20}.
There is detailed information on the migration of old check plug-ins in link:https://checkmk.com/blog/migrating-check-plug-ins-to-checkmk-2-0[this blog article.^]
endif::[]
ifdef::saas[]
This check is currently only relevant for on-premises editions. In {CE} (SaaS), {com} ensures that only compatible plugins are installed.
endif::[]

ifdef::onprem[]
.10+|[.guihint]#Performance# |
endif::[]
ifdef::saas[]
.5+|[.guihint]#Performance# |
endif::[]
[.guihint]#Check helper usage# .5+|
ifdef::onprem[]
xref:cmc_differences#aux_processes[Auxiliary processes] for the {CMK} Micro Core (CMC) in the commercial editions.
endif::[]
ifdef::saas[]
xref:cmc_differences#aux_processes[Auxiliary processes] for the {CMK} Micro Core (CMC).
endif::[]

|[.guihint]#Checkmk checker count#

|[.guihint]#Checkmk checker usage#

|[.guihint]#Checkmk fetcher usage#

|[.guihint]#Checkmk helper usage#

ifdef::onprem[]
|[.guihint]#Livestatus usage# |
xref:livestatus#keepalive[Keeping a connection alive (KeepAlive)]

|[.guihint]#Persistent connections# |
xref:distributed_monitoring#persistent[Persistent connections] between central and remote sites in distributed monitoring.

|[.guihint]#Number of users# |
xref:ldap#[User management with LDAP/Active Directory]

|[.guihint]#Size of extensions# |
In distributed monitoring, the data between central and remote sites may be synchronized slowly because xref:mkps#central_setup[synchronization of extensions such as MKPs] is switched on.

|[.guihint]#Use Livestatus Proxy Daemon# |
xref:distributed_monitoring#livestatusproxy[The Livestatus proxy] of the commercial editions for connections between central and remote sites in distributed monitoring.
endif::[]

|[.guihint]#Reliability# |
[.guihint]#Backups configured# |
ifdef::onprem[]
xref:backup#[Backups]
endif::[]
ifdef::saas[]
This check is currently only relevant for on-premises editions. In {CE} (SaaS), {com} ensures that backups are made at block or file system level. Backup and restore are accessible via the xref:admin_panel#admin_site[Admin Panel].
endif::[]

ifdef::onprem[]
.6+|[.guihint]#Security# |
endif::[]
ifdef::saas[]
.3+|[.guihint]#Security# |
endif::[]
[.guihint]#Encrypt backups# |
ifdef::onprem[]
xref:backup#backup_config[Configuring encrypted backups]
endif::[]
ifdef::saas[]
This check is currently only relevant for on-premises editions. In {CE} (SaaS), {com} ensures that backups are made at block or file system level.
endif::[]

|[.guihint]#Encrypt notification daemon communication# |
ifdef::onprem[]
The link:https://checkmk.com/werk/13610[Werk pass:q[#]13610^] explains how to activate the transport encryption of the notification spooler `mknotifyd`.
endif::[]
ifdef::saas[]
This check is currently only relevant for on-premises editions. In {CE} (SaaS), communication for the notification component is always encrypted.
endif::[]

ifdef::onprem[]
|[.guihint]#Livestatus encryption# |
xref:distributed_monitoring#livestatus_tls[Connecting Livestatus with encryption] for sites that have Livestatus activated via the network (TCP).
endif::[]

ifdef::onprem[]
|[.guihint]#Secure Agent Updater# |
xref:agent_deployment#setup_automatic_updates[Setting up automatic updates] in the commercial editions.
endif::[]

|[.guihint]#Secure GUI (HTTP)# |
ifdef::onprem[]
xref:omd_https#[Securing the web interface with HTTPS]
endif::[]
ifdef::saas[]
This check is currently only relevant for on-premises editions. In {CE} (SaaS), the communication of the web front end is secured using AWS WAF v2.
endif::[]

ifdef::onprem[]
|[.guihint]#Secure LDAP# |
xref:ldap#ssl[Securing LDAP with SSL] for established LDAP connections
endif::[]
|===

In addition, the article on xref:security#[Security] provides an overview of other security-related matters relevant to {CMK}.
