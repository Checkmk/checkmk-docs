// -*- coding: utf-8 -*-
include::global_attr.adoc[]


[#setup]
== Setup

[#login]
=== Login to the virtual machine

The root login is disabled on the AWS/Azure images.
Instead, the user `ubuntu` is employed, which has permission to run `sudo` with arbitrary commands without a password prompt.
If you have created a separate key pair for login to the virtual machine, you must specify the path to its private component with the `-i` parameter.
Of course, the IP address must be customized to the one under which the VM can be accessed from a remote location:

[{shell}]
----
{c-user} ssh -i /path/to/id_file.priv ubuntu@192.0.2.123
----

You will now find yourself at the `ubuntu` user prompt.
The actual prompt can contain the host name specified when the VM was created or an IP address as the host name.
We will use the host name `cloud` throughout the rest of this article:

[{shell}]
----
{c-ubuntu}
----


[#create_site]
=== Setting up a site

A {CMK} site must have a unique name and should also be easily identifiable.
Here, as in most other places in this manual, we use `mysite` as the site name.

Creating a site is performed with the {CMK} administration tool xref:omd_basics#[`omd`].
The latest version of {CMK} is always pre-installed:

[{shell}]
----
{c-ubuntu} sudo omd create mysite
Adding /opt/omd/sites/mysite/tmp to /etc/fstab.
Creating temporary filesystem /omd/sites/mysite/tmp...[green]#OK#
Updating core configuration...
Generating configuration for core (type cmc)...

Starting full compilation for all hosts Creating global helper config...[green]#OK#
 Creating cmc protobuf configuration...[green]#OK#
Executing post-create script "01_create-sample-config.py"...[green]#OK#
Restarting Apache...[green]#OK#
Created new site mysite with version 2.2.0p1.cce.

  The site can be started with omd start mysite.
  The default web UI is available at \http://cloud/mysite/

  The admin user for the web applications is cmkadmin with password: UbWeec9QuazIf
  For command line administration of the site, log in with 'omd su mysite'.
  After logging in, you can change the password for cmkadmin with 'cmk-passwd cmkadmin'.
----

Now start the newly created site with

[{shell}]
----
{c-ubuntu} sudo omd start mysite
----

The URL in the command output shown above (`\http://cloud/mysite`) contains the host name used internally by your AWS or Azure VM.
Since it is usually not resolved externally, this URL is of limited use.
Typically, you will initially access it using the IP address or a host name stored in your own DNS server.


[#ssl_certs]
=== Storing certificates

For the system Apache to be able to actually listen on HTTPS port 443, it will require valid certificates.
The self-signed link:https://packages.ubuntu.com/en/jammy/all/ssl-cert/filelist[_Snakeoil Inc._ certificates^] are generated for this purpose when the virtual machine is first started.
We strongly advise replacing these as soon as possible with your xref:omd_https#[own certificates] that allow the complete certificate chain to be easily verified.

In doing so, the Apache configuration closely follows the Ubuntu standards, and modified certificate paths must be entered in the `/etc/apache2/sites-enabled/000-default.conf` file.


[#mta]
=== Setting up an email system

Since the paths for xref:intro_notifications#[notifications] in {CMK} are many and can vary, a default email system is not predefined.


[#no_mta]
==== {CMK} without an email system

It is also possible to completely dispense with a local email system if you only want to enable xref:notifications#syncsmtp[trackable delivery of HTML emails via SMTP] or rely on notification plug-ins for platforms such as xref:notifications_teams#[Microsoft Teams] or xref:notifications_slack#[Slack].

Note, however, that xref:notifications#bulk[bulk notifications] is not possible in this configuration.


[#simple_mta]
==== Relay-only or full Mail Transport Agent (MTA)

As a rule, you will want to set up an email system because of its greater flexibility.
For smaller environments, the _relay-only MTA_ link:https://manpages.ubuntu.com/manpages/jammy/man7/nullmailer.7.html[Nullmailer^] has been proven to work well.

For larger installations, where unforeseen events can result in several hundred emails, we recommend installing a full-featured MTA such as Postfix.


[#add_hosts]
=== Adding hosts to a monitoring

[#pull]
==== Localhost in pull mode

In the vast majority of cases, the {CMK} server itself should be the first host you xref:intro_setup_monitor#linux[add to the monitoring].
To do this, you must first install the Linux agent on the {CMK} server.
This agent communicates with the server in the xref:glossar#pull_mode[pull mode].
If you find downloading the agent package via the web interface followed by a transfer via `scp` too cumbersome, you can install the agent in its default configuration ('Vanilla') directly from the file system:

[{shell}]
----
{c-ubuntu} sudo apt install $(sudo find /opt/omd/versions/ -name 'check-mk-agent_*.deb' | tail -n1)
----

Immediately following an installation, the {CMK} agent listens in the unencrypted legacy pull mode on port 6556.
Therefore, promptly perform a  xref:intro_setup_monitor#register[registration] to prevent unauthorized third parties from accessing the agent output:

[{shell}]
----
{c-ubuntu} sudo cmk-agent-ctl register --hostname localhost --server localhost --site mysite --user cmkadmin
----


[#push]
==== Hosts in push mode

If hosts to be monitored are behind a firewall and thus cannot be accessed directly by the {CMK} server, the xref:glossar#push_mode[push mode] is often the preferred communication path.
You can select the push mode with the [.guihint]#Checkmk agent connection mode# option in the host's properties in the xref:hosts_setup#monitoring_agents[Monitoring agents] section. 
Alternatively, you can combine the push mode with preconfigured agent packages for the xref:hosts_autoregister#[auto-registration] to further increase convenience.


[#update]
=== Updating {CMK}

Check the link:https://checkmk.com/download?method=cmk&edition=cce&version=2.2.0&platform=ubuntu&os=jammy&type=cmk[download page^] regularly for updates and download the updated package with the `wget` command shown there.

The xref:update#[installation of an update] is done in two steps, which is due to the fact that `omd` can run multiple sites, each with different versions of {CMK}, on the same server.


[#install_new]
==== Installing a new {CMK} version and updating the site

The first step is to install the package, in the following example the {v22}p2 version:

[{shell}]
----
{c-ubuntu} sudo apt install ./check-mk-cloud-2.2.0p2_0.jammy_amd64.deb
----

The next step is to update your site(s):

[{shell}]
----
{c-ubuntu} sudo omd stop mysite
{c-ubuntu} sudo omd update mysite
{c-ubuntu} sudo omd start mysite
----

[#remove_old]
==== Removing packages that are no longer required

If you run multiple sites on the server (for example, one for production use and one for the testing of extensions), make sure that all of these are updated:

[{shell}]
----
{c-ubuntu} omd sites
SITE         VERSION       COMMENTS
mysite       2.2.0p2.cce   default version
mytestsite   2.2.0p2.cce   default version
----

Via the Ubuntu package management you can then uninstall {CMK} versions that are no longer being used:

[{shell}]
----
{c-ubuntu} sudo apt purge check-mk-cloud-2.2.0p1
----
