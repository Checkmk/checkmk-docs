include::global_attr.adoc[]
= Notifications via Pushover
:revdate: 2020-08-14
:title: Notifications via Pushover
:description: You can have {CMK} send notifications to Apple and Android mobile devices via the Pushover service. Find out here how to carry out the connection.

{related-start}
link:notifications.html[Notifications]
{related-end}

== Function

link:https://pushover.net/[Pushover^] is a simple service to send messages from various sources to Apple or Android mobile devices, where they
appear as _notifications_. 
On the desktop, the messages can be received via the browser.
The connection is established via two API keys for a group and an app/source.


== Configuring Pushover

In Pushover you need to create both a group, even if you only have one 'group', and an app explicitly for {CMK} -- each receives their own API key:

. Create a new group with at least one member via [.guihint]#Create a Group# in Pushover.
. Copy the displayed Group API key.
. Create an app with any name via [.guihint]#Create an Application/API Token#.
. Copy the displayed App API key.


== Configuration in {CMK}

You have already learned how to set up {CMK} notifications in general in the article about xref:notifications.html[notifications].
In {CMK} it is now sufficient to specify the two keys:

. For the [.guihint]#Notification Method# choose [.guihint]#Push Notifications (using Pushover)#.
. Enter the App-API key under [.guihint]#API Key#.
. Enter the Group API key in [.guihint]#User / Group Key#.

image::notifications_pushover.png[]

You can optionally activate the [.guihint]#Priority# and [.guihint]#Select sound# Pushover functions.
You can use the priority function to override rest periods configured in Pushover -- and then accompany such notifications with appropriate sounds.

For testing you can use the [.guihint]#Fake check results# and [.guihint]#Custom notification# xref:commands#[commands].
