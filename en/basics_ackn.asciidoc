include::global_attr.adoc[]
= Acknowledging problems
:revdate: 2021-05-31
:title: Acknowledging problems - Distinguishing new problems from those in progress
:description: Problems are rarely fixed as soon as they are detected. Learn here how to acknowledge problems in {CMK} and how to find acknowledgements in the GUI.

{related-start}
xref:commands#[Commands]
xref:notifications#[Notifications]
xref:monitoring_basics#[Basic principles of monitoring with {CMK}]
{related-end}


== Introduction

For the problems {DOWN}, {UNREACH}, {WARN}, {CRIT} or {UNKNOWN} {CMK}
distinguishes two possible states: *unhandled* and icon:icon_ack[]
*handled*. A handled (acknowledged) problem indicates that the issue
is known and that somebody is attending to it.

If a problem has been acknowledged, then...

* ... it will be identified with a icon:icon_ack[] symbol,
* ... will no longer appear as [.guihint]#Unhandled# in the [.guihint]#Tactical Overview#,
* ... no further xref:notifications#[notifications] will be sent.

Additionally, problems can be systematically identified in views as being acknowledged
or unacknowledged via the icon:icon_filter[] filter [.guihint]#Problem has been acknowledged.#

== The Acknowledgement procedure

Problems are acknowledged via xref:commands#[commands] on the affected
hosts/services.  Acknowledgements can be removed in the same way.

image::basics_ackn_acknowledge.png[]

Advice for these options:

[cols=2]
|===

|[.guihint]#sticky# |An acknowledgement is normally valid until the *next status change*. If for example, a service has been acknowledged with a {WARN} status, and later changes to {CRIT}, the acknowledgement will be automatically-removed. Activating [.guihint]#sticky# will retain the acknowledgement until an {OK} or an {UP} status is received.
|[.guihint]#send notification# |All contacts assigned to the host/service whom are configured to be notified for the [.guihint]#Acknowledgement of host/service problem# will be sent a notification.
|[.guihint]#persistent comment# |With this option your commentary will not be automatically deleted if the acknowledgement disappears or is removed. Commentaries entered in this way must be manually deleted later (see the end of this chapter).
|[.guihint]#Expire acknowledgement after ...# |{CEE}: With this option you can set a time limit for retaining the acknowledgement. When the specified time limit expires the acknowledgement is automatically deleted, even if the host/service is not yet in an {OK} or an {UP} status.
|[.guihint]#Comment# |You can include a URL such as _http://www.example.com_ in this field, which will be replaced by a clickable link.
|===


== Acknowledgements in the GUI

In the {CMK} web interface there are several possibilities for displaying
acknowledgements.

In all host and service views, acknowledged problems are identified by
two symbols:

[cols=2]
|===

|icon:icon_ack[] |This symbol identifies an acknowledgement
|icon:icon_comment[] |Clicking on this symbol displays a list with any acknowledgement comments.
|===


Via [.guihint]#Monitor > Overview > Comments# you can view a list of all comments for hosts
and services -- including those created through acknowledgements. Comments
may be deleted with xref:commands#[commands]. Deleting a comment has no effect
on logged acknowledgements.

[{image-border}]
image::basics_ackn_comments.png[]
