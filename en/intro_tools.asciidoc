include::global_attr.adoc[]
= The monitoring tools
:revdate: 2021-03-08
:title: The monitoring tools
:description: Important tools for monitoring with {CMK} are the snapins of the sidebar, such as Overview and Master control, and the Monitor menu.

{related-start}
link:intro_monitor.html[{CMK} in monitoring]
link:user_interface.html[The user interface]
link:views.html[Host and service views]
{related-end}


[#status_interface]
== Status interface

Now that we have finally given our monitoring system something to do, it is time to take a closer look at the elements of the {CMK} user interface that help you in your daily monitoring or operating life. 
In {CMK}, this component is sometimes called the *status interface* because it is mostly concerned with displaying the current status of all hosts and services. 
This includes dashboards and views that you call up via the [.guihint]#Monitor# menu, the snapins in the sidebar, as well as the display and processing of performance metrics.


[#overview]
== Overview

include::include_overview_snapin.asciidoc[]


[#monitor_menu]
== Monitor menu

include::include_monitor_menu.asciidoc[]


[#dashboards]
== Dashboards

include::include_dashboards.asciidoc[]


[#views]
== Views

include::include_views.asciidoc[]

We will introduce the filter bar with a very simple example. 
From the list of all services, we will filter out those with 'cpu' in their name. 
Click on the total number of services in the xref:intro_tools#overview[Overview]. 
On the main page, all services will then be displayed in the [.guihint]#All services# view.
Click the [.guihint]#Filter# button in the action bar. 
The filter bar will appear on the right hand side of the main page.
In the [.guihint]#Service# input field, enter `cpu` and click [.guihint]#Apply filters#:

image::view_service_filter.png[alt="View with open filter bar."]

With the filter applied, we have reduced the number of displayed services to two.

The filter bar is a very powerful way of customising views to meet your needs.
The filter criteria are always context-specific and therefore match the content of the currently-displayed view. 
The example above shows only some of the criteria available for filtering services. 
If the default selection is not enough for you, you can use [.guihint]#Add filter# to show even more criteria and add them to the filter bar.

The filter bar is also used for the search items in the [.guihint]#Monitor# menu,
such as [.guihint]#Host search# or [.guihint]#Service search#. 
When you select one of these search items, an empty view with an open filter bar is displayed in which you can search according to the filter criteria.

Once you have tailored the filter to show exactly what you are interested in,
you can save this customised view as a bookmark -- which brings us to the next topic: bookmarks.

*Note:* The views have many more possibilities -- both for customisation and for creating your own views. 
You can find out how to do this in the xref:views#[article on views].


[#bookmarks]
== Bookmarks

include::include_bookmarks_snapin.asciidoc[]

If you want to go deeper into this subject, for instance, how to share a bookmark list with other users, you can do so in the xref:user_interface#bookmarks_edit[article on the user interface].


[#master_control]
== Master control

include::include_master_control_snapin.asciidoc[]


[#metrics]
== Performance metrics

The vast majority of the services not only provide a status, but also performance metrics.
Let's take the service that checks the file system `C:` on a Windows server as an example:

image::filesystem_c.png[alt="List entry of a service for a Windows server file system."]

In addition to the {OK} status, we can see that approximately, of the file system's total of 50 GByte, 38 GB has been used -- which is around 76%.
You can see this information in the [.guihint]#Summary# column. 
The most important value in this case -- the percentage -- is also visualised on the right-hand side in the [.guihint]#Perf-O-Meter# column.

But this is only a rough overview. A more detailed table of all of the performance metrics for a service can be found by clicking on the service in its detailed view in the [.guihint]#Service Metrics# line:

image::service_metrics.png[alt="Service details with the table of all measured values."]

But even more interesting is that by default {CMK} automatically retains the chronological sequence of all such performance metrics for up to four years -- in the so-called xref:graphing#rrds[RRD files].
All values for the latest 48 hours are stored by the minute.
The chronology is displayed in graphs like this one for the [.guihint]#Check_MK# service:

image::example_graph.png[alt="Service details with a time series graph of the measured values."]

Here are a few tips for what you can do with these graphs:

* Point the mouse cursor into the graph and a 'tooltip' will show the precise readings for the current time.

* You can zoom into the timeline with the mouse wheel.

* Click with the left mouse button anywhere on the graph and drag to the left or right to change the displayed time interval.

* Drag up or down while holding the left mouse button to zoom into the vertical axis.

* With the icon:resize_graph[alt="Icon for resizing a graph."] icon in the bottom right corner you can resize the graph.

The system for recording, evaluating and displaying performance data in {CMK} can do much more -- especially in the {CEE}. Details on this can be found in the xref:graphing#[article on performance data and graphing].

xref:intro_monitor#[Continue with {CMK} in monitoring]
