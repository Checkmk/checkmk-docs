// -*- coding: utf-8 -*-
include::global_attr.adoc[]
= Installation on Debian and Ubuntu
:revdate: 2022-10-17
:title: Installation on Debian and Ubuntu
:description: Learn how to install {CMK} on the Linux distribution of Debian and of Ubuntu.

{related-start}
xref:intro_setup#[Setting up {CMK}]
xref:checkmk_getting_started#[Getting started with monitoring]
xref:introduction_virt1#[Installation of a virtual appliance]
xref:install_packages#[Basic information on the installation of {CMK}]
{related-end}


== Download the appropriate packages

If you have a subscription, in the {CMK} link:https://portal.checkmk.com/[customer portal^] you will find a suitable RPM or DEB package for your distribution for every available xref:cmk_versions#[{CMK} version].
For a free test or smaller installations of {CMK} you can use our link:https://checkmk.com/de/download[free editions^].
These editions do not require a subscription.
From any of the free editions you can at any time xref:update#updatedemo[upgrade] to one of the {CEE}.

When selecting a package, consider the following points:

* Choose one of the editions.
If you're unsure about which edition is appropriate for your requirements, you can get an overview of the different features and functionality of the various *editions* link:https://checkmk.com/product/editions[here^].
* Choose the {CMK} version, the distribution and finally the version of the selected distribution.
* We recommend the _latest stable {CMK} version_.
If you need an older version anyway, you can find these in the link:https://checkmk.com/download/archive[download archive^].
* The name and version of your distribution must be strictly identical.

Once you have downloaded the software package to your machine, you need to copy the package file to the target Linux system on which {CMK} needs to be installed.
You can do that, for example with the program _WinSCP_ or -- if you are able to use SSH connections -- with the `scp` command line tool.

To be able to copy files to your future {CMK} server using `scp` the package `openssh-server` needs to be installed.
If that is not already the case, you can install it using the following command:

[{shell}]
----
{c-root} apt install openssh-server
----

Once this has been done you can, for example copy the {CRE} package for Ubuntu 20.04 _Focal Fossa_ using the below command:

[{shell}]
----
{c-root} scp check-mk-raw-2.1.0p1_0.focal_amd64.deb root@mymonitoring.mydomain.org:
----


[#signed]
== Signed-package installation

All packages are signed using link:https://gnupg.org[GnuPG^].
Through the use of this signature, on the one hand it can be verified whether the package really is from {CMK}, and on the other hand it can be verified that the package is complete.

Depending on which optional packages were installed during the setup of your distribution, you will need to install `dpkg-sig` including all of its dependencies for successful verification. 
To do so, simply enter the following command:

[{shell}]
----
{c-root} apt install dpkg-sig
----

So that these signed packages can be installed in the usual way, as a one time only action you will need to import our public key so that the signature will be trusted.
First, load the key directly from our website:

[{shell-raw}]
----
{c-root} wget https://download.checkmk.com/checkmk/Check_MK-pubkey.gpg
----

Then import the key to the list of trusted signatures.
Under Debian and Ubuntu the following command is required:

[{shell}]
----
{c-root} gpg --import Check_MK-pubkey.gpg
----

Once the key has been added, you can verify the {CMK} package using the following command:

[{shell}]
----
{c-root} dpkg-sig --verify check-mk-raw-2.1.0p1_0.focal_amd64.deb
----

In some installations the signature check can fail with the following error:

[{shell}]
----
BADSIG _gpgbuilder
----

If this is the case, the most probable cause is that the installed version of `dpkg-sig` does not know how to handle the compression format of the package.
In this situation revert to `gpg` to verify the signature:

[{shell}]
----
{c-root} gpg --verify check-mk-enterprise-2.1.0p1_0.focal_amd64.deb
gpg: Signature made Thu Sep 15 10:23:00 2022 UTC
gpg:                using RSA key B1E7106575B723F00611C612434DAC48C4503261
gpg: Good signature from "Check_MK Software Release Signing Key (2018) <feedback@check-mk.org>" [unknown]
gpg:                 aka "Check_MK Software Daily Build Signing Key (2018) <feedback@check-mk.org>" [unknown]
gpg: WARNING: This key is not certified with a trusted signature!
gpg:          There is no indication that the signature belongs to the owner.
Primary key fingerprint: B1E7 1065 75B7 23F0 0611  C612 434D AC48 C450 3261
----

The warning generated here is only concerning the {CMK} public key, not for the signature on the package itself.
The reason for this is that the key is not signed by any other key the user already trusts - but this is not a problem in this case.

Afterwards you can install the {CMK} package using following command.
Be sure to pass the full file path to the DEB file after `apt install`:

[{shell}]
----
{c-root} apt install /tmp/check-mk-raw-2.1.0p1_0.focal_amd64.deb
----


== Final test

After the successful installation of {CMK}, and all dependencies, you will have access to the `omd` command.
With this command you are able to create and manage xref:omd_basics#[monitoring sites].
You can request the installed version to verify your installation:

[{shell}]
----
{c-root} omd version
OMD - Open Monitoring Distribution Version 2.1.0p1.cre
----
