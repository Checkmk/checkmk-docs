include::global_attr.adoc[]
= Notifications via PagerDuty
:revdate: 2020-08-14
:title: Notifications via PagerDuty
:description: You can have {CMK} send notifications to the incident management platform PagerDuty. Find out here how to carry out the connection.

{related-start}
link:notifications.html[Notifications]
{related-end}

== Function

The link:https://www.pagerduty.com[PagerDuty^] incident management platform can receive messages from a wide variety of sources and process them further -- for example by filtering, sending notifications or initiating escalations.
Notifications from {CMK} can be easily forwarded to the platform via a so-called integration key.


== Configuring PagerDuty

PagerDuty provides integrations for many popular tools, including {CMK}.
All you need is an _Integration Key_, which you create under PagerDuty as follows:

. Create a new service or open an existing one.
. In the corresponding service create a new integration via the [.guihint]#Integrations# tab.
. Assign any name and for the [.guihint]#Integration Type# choose [.guihint]#Check_MK#.
. Copy the created [.guihint]#Integration Key#.


== Configuration in {CMK}

You have already learned how to set up {CMK} notifications in general in the article about xref:notifications.html[notifications].
In {CMK} the integration now requires only the specification of the integration key:

. For the [.guihint]#Notification Method# choose [.guihint]#PagerDuty#.
. Enter the copied key under [.guihint]#Integration Key#.

image::notifications_pagerduty.png[]

The filtering of the generated notifications can be implemented either in {CMK}, or in PagerDuty via the [.guihint]#Event Rules#.
You can also optionally switch the PagerDuty connection to your own {CMK} user account.
Simply create a standard user with a disabled login, and then create a personal notification rule.

For testing you can use the [.guihint]#Fake check results# and [.guihint]#Custom notification# xref:commands#[commands] and set a host covered by the rule to {DOWN}.
