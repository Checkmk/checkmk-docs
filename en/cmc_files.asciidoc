include::global_attr.adoc[]
= CMC files and directories
:revdate: 2021-09-15
:title: CMC files and directories
:description: This overview shows all of the important files and directories relating to the {CMK} Micro Core (CMC).

{related-start}
link:cmc.html[The {CMK} Micro Core (CMC)]
link:cmc_differences.html[Special characteristics of the CMC]
link:cmc_
{related-end}

The following overview shows all of the important files and directories applicable to the xref:cmc#[{CMK} Micro Core (CMC).] 
All file paths relate to the site’s home directory.
For example: if a site is named `mysite`, then all of its file paths are derived from `/omd/sites/mysite`.


==  Runtime data

[cols="45,~",options=header]
|===
|File path name |Description 
|`var/log/cmc.log` |In this file messages from starting and stopping the CMC can be found, as well as general warnings and error messages. The history for hosts and services (in Nagios both are contained in `var/nagios/nagios.log`) is stored in a separate file `history` in the CMC.
|`var/check_mk/core/` |Directory with all CMC runtime data.
|`var/check_mk/core/config` |The core’s configuration with all static data on hosts, services, groups, users and global settings. In Nagios this data equates to the files under `etc/nagios/conf.d`.
|`var/check_mk/core/state` |The core’s current runtime state. The file stores information on the current status of hosts and services, likewise xref:basics_downtimes#[scheduled downtimes], xref:basics_ackn#[acknowledgements] and commentaries. The data is updated regularly during processing and when the core is stopped. If it is unavailable or incompatible when the core starts, the core will begin with an empty state. This data equates to the `var/nagios/retention.dat` file in Nagios, but it is however binary-coded.
|`var/check_mk/core/state.*` |Backup copies of the status following a migration from an old CMC version, or when the CMC detects a large reduction in the number of hosts in the configuration. Thus you can return to the old status (and recover your scheduled downtimes and acknowledgements), e.g., if due to a configurations-error all hosts have been temporarily removed from the monitoring.
|`var/check_mk/core/core` |This file is normally not present. If it is, then this indicates an earlier core crash and aids the developers in locating the cause of the error.
|`var/check_mk/core/history` |This file stores the history of all hosts and services in text format. This corresponds in its content and format to the `var/nagios/nagios.log` file in Nagios, with which it is largely compatible.
|`var/check_mk/core/archive/` |Old versions of `history` are moved to this directory when the log files are rotated. Historic data can only be accessed with Livestatus and Multisite (events, availability) when this data is uncompressed.
|`tmp/run/live` |The CMC’s Livestatus socket. This is in the same location as in Nagios. Because the CMC is Livestatus-compatible with Nagios and Icinga, all extensions based on Livestatus can be used without modification (e.g. xref:nagvis#[NagVis]).
|`tmp/run/cmc.pid` |The CMC’s current process-ID
|===


==  Configuration

The CMC does not have its own configuration file. 
All settings for the CMC can be found in the {CMK}'s web interface under icon:icon_configuration[alt="Icon for the Global settings."] [.guihint]#Global settings > Monitoring Core#.
They are stored together with the other global settings in `etc/check_mk/conf.d/wato/global.mk`.


==  Software

[cols="45,~",options=header]
|===
|File path name |Description 
|`bin/cmc` |Executable program for the CMC itself. This has been developed in pass:[C++], and apart from the standard pass:[C++] library requires no other libraries (in particular, no Boost). For testing purposes one can also call the CMC by hand (try: `cmc --help`).
|`etc/init.d/cmc` |The CMC's start script
|`lib/cmc/icmpsender` |Auxiliary process that is started by the CMC and which takes over the sending of ICMP packages for the xref:cmc_differences#smartping[Smart Ping.] This must be installed with set user ID for root.
|`lib/cmc/icmpreceiver` |Auxiliary process that is started by the CMC and which takes over the receiving of ICMP and TCP connection packets for the Smart Ping. This must be installed with set user ID for root.
|`lib/cmc/checkhelper` |Auxiliary process xref:cmc_differences#checkhelper[check helper] that is started several times by the CMC and takes over the efficient execution of active checks.
|`bin/fetcher` |Auxiliary process xref:cmc_differences#fetcher_checker[Checkmk fetcher] that is started several times by the CMC and retrieves the agent information from the network.
// |`share/check_mk/web/plugins/wato/cmc.py` |WATO extension with global settings and rule sets for the CMC.
// |`share/check_mk/web/plugins/sidebar/cmc.py` |A Sidebar plug-in for Multisite with CMC performance data.
// |`share/check_mk/modules/cmc.py` |{CMK} module that generates the configuration for the CMC.
// |`share/check_mk/modules/rrd.py` |{CMK} module for installing RRD data.
|===

