// -*- coding: utf-8 -*-
include::global_attr.adoc[]
= The {SE}
:revdate: draft
:title: The {SE}
:description: The different {CMK} editions offer different feature sets. This article explains the {SE}.

{related-start}
xref:cce#[The {CE}]
xref:intro_setup#[Setting up {CMK}]
xref:update#[Updates and Upgrades]
{related-end}


== Introduction

This article is currently being prepared for publication.
Please be patient. Thank you! +
By the way, the https://docs.checkmk.com/master/de/cse.html[German version] of this article has already been updated -- if that is an alternative for you.


// start translation
////

[#intro]
== Einleitung

Eine Lösung für alle kann es nicht geben und wer für Software-Subskriptionen Geld bezahlt, möchte möglichst nur Features bezahlen, die man auch nutzt.
{CMK} bietet aus diesem Grund verschiedene Editionen für verschiedene Einsatzbereiche.
In diesem Artikel stellen wir Ihnen die {CSE} vor, die im professionellen Umfeld die am häufigsten anzutreffende Edition ist.


[#editions]
== Einordnung der {SE}

Aufbauend auf der reinen Open Source Variante {CMK} {RE} bietet die {SE} vor allem Verbesserungen der Performance, umfangreichere Möglichkeiten von _Dashboards_ sowie _Reporting_ und Erleichterungen der _Automatisierung_.
Sie spricht damit vor allem professionelle Anwender an, die Subskriptionskosten gesparten Hardwarekosten und reduziertem Aufwand zur Erstellung eigener Erweiterungen entgegenstellen.
Daneben bietet die {SE} verschiedene Möglichkeiten, Support mit garantierter Reaktionszeit zu buchen.

Auf der {SE} baut wiederum die xref:cce#[{CCE}] auf.

Ergänzend zum link:https://checkmk.com/de/produkt/editionen[Editionsvergleich^] auf unserer Website zeigt dieser Artikel die Unterschiede auf technischer Ebene und versucht so, eine komplementäre Entscheidungshilfe bei der Wahl der Edition zu sein.

Daneben soll er helfen, abzuschätzen, welche Einstellungsänderungen beim xref:update#[Wechsel der Edition] – egal, ob Up- oder Downgrade – notwendig oder sinnvoll sind.


[#functions]
== Zusätzliche Funktionen der {SE}

Die wesentlichen Funktionen der {SE}, die diese von der {CRE} unterscheiden:

* Performance-Verbesserungen: +
Mit dem _Checkmk Micro Core (CMC)_ nutzt die {SE} einen Monitoring-Kern, der Speicher und CPU effizienter ausnutzt.

* Erleichtertes verteiltes Monitoring: +
Eine Vielzahl von Erweiterungen erleichtert verteiltes Monitoring.
Dazu gehört die Möglichkeit, die Konfiguration komplett zu zentralisieren, Benachrichtigungen komplett über die Zentralinstanz abzuwickeln und verschiedene Techniken, auch bei langsamen oder instabilen Netzen einen zuverlässigen Transfer von Monitoring-Daten zu gewährleisten.

* Business-Features: +
Wo IT geschäftskritisch ist, muss Monitoring helfen, Probleme zu dokumentieren, einzuordnen und zu verhindern.
Die {SE} bietet hierfür in _vorausschauende_ Funktionen wie die Einrichtung von wiederkehrenden Wartungszeiten und _auswertende_ wie die Erstellung von Verfügbarkeitsberichten – letzteres auch für komplexe Systeme, die aus einer Vielzahl an Komponenten bestehen.

[#upgrade]
== Upgrade zur {SE}

Sie können eine {RE} jederzeit auf eine {SE} upgraden.
Folgen Sie dafür der xref:update#updateraw[Upgrade-Beschreibung] zur {SE}.

Falls Sie {CMK} mit der {CE} getestet haben, die in den ersten 30 Tagen nicht limitiert ist, können Sie nach der Testphase auch dauerhaft zur {SE} wechseln.
Folgen Sie dafür der xref:update#cce2cee[Downgrade-Beschreibung] zur {SE}.


[#details]
== Unterschiede der Komponenten im Detail

[#core]
=== Monitoring-Kern

Dieser Abschnitt behandelt Unterschiede am Monitoring-Kern und der Übertragung von Monitoring-Daten in verteilten Umgebungen.
Nutzer, die von Nagios-Umgebungen zu {CMK} migrieren, sollten die Dokumentation zum xref:cmc#[{CMK} Micro Core] und den xref:cmc_differences#[Besonderheiten des CMC] aufmerksam lesen, um zu beurteilen, ob es für eine Übergangszeit sinnvoll sein kann, {CMK} mit dem Nagios-Kern zu betreiben.

[cols="20,~",options="header"]
|===
|Funktion |Ergänzende Informationen
|CMC |Die {EE} verwenden standardmäßig den xref:cmc#[{CMK} Micro Core], welcher durch Reduzierung auf die wesentliche Funktionalität und Optimierung dieser performanter als andere Monitoring-Kerne ist.
|Alert Handler |Der CMC unterstützt keine _Nagios Event Handler_, bietet dafür aber flexiblere xref:alert_handlers#[Alert Handler].
|Smart Ping |Der xref:cmc_differences#smartping[Smart Ping] gewährleistet eine effizientere und schnellere Erkennung, ob Hosts erreichbar sind.
|CMCDump |Diese Übertragungstechnik vereinfacht xref:distributed_monitoring#livedump[verteiltes Monitoring] in Umgebungen mit unzuverlässiger Netzwerkanbindung. In Umgebungen mit Nagios-Kern steht stattdessen Livedump zur Verfügung.
|Livestatus-Proxy | Der xref:distributed_monitoring#livestatusproxy[Livestatus-Proxy] optimiert im verteilten Monitoring Performance und Latenzen. 
|Verteilte HW/SW-Inventur |Die automatische Synchronisierung von Inventardaten im xref:distributed_monitoring#[verteilten Monitoring] macht Inventardaten zentral verfügbar.
|RRD-Speicherformat |Bei Verwendung des CMC nutzt {CMK} ein auf Einsparung von Disk-I/O xref:cmc_differences#metrics[optimiertes Speicherformat] der Round Robin Databases (RRD).
|Parent Child Topology | Mit dem CMC kann {CMK} in Umgebungen mit Elter-Kind-Topologie präziser xref:monitoring_basics#parents[den Zustand von abhängigen Hosts] ermitteln.
|Unstetigkeitserkennung (_flap detection_) |In den {EE} ist eine xref:notifications#flapping[Feineinstellung der Unstetigkeitserkennung] möglich für Services, die längere Zeit um Schwellwerte pendeln.
|===

[#ui]
=== Monitoring-Oberfläche

[cols="20,~",options="header"]
|===
|Funktion |Ergänzende Informationen
|Standard-Dashboard |Die {EE} verwenden als Standard ein xref:dashboards#usage[Dashboard], welches in der {RE} nicht verfügbar ist. Diese nutzt stattdessen das Problem-Dashboard.
|Messwerte und Graphing |Erweiterte xref:graphing#[Funktionen des Graphings] stehen ausschließlich in den {EE} zur Verfügung. Dazu gehören: Umfang der Dashlets, PDF-Export, Graphensammlungen, Anpassungen (_graph tunings_), Einbettung in Berichte oder Dashboards und benutzerdefinierte Graphen.
|Kubernetes-Dashboards |Die xref:monitoring_kubernetes#dashboards[Kubernetes-Dashboards] sind den {EE} vorbehalten.
|Wartungszeiten (_scheduled downtimes_) |Nur in den {EE} können regelmäßig wiederkehrende xref:basics_downtimes#[Wartungszeiten] festgelegt werden. Zudem ist über _Kommandos_ eine komfortable xref:commands#commands[Änderung oder Entfernung einer oder mehrerer Wartungszeiten] möglich.
|PDF-Export der Verfügbarkeit |In den {EE} können xref:availability#[Verfügbarkeitsdaten] auch als PDF exportiert werden.
|PDF-Export von Ansichten |Der direkte PDF-Export von xref:views#[Ansichten] im Monitoring ist den {EE} vorbehalten.
|Reporting |Das xref:reporting#[Reporting] ist den {EE} vorbehalten.
|Erweiterte Verfügbarkeiten (SLAs) |Die nur in den {EE} enthaltenen xref:sla#[Erweiterte Verfügbarkeiten / Service Level Agreements] erleichtern die Kontrolle von vertraglichen Vereinbarungen betreffend der Verfügbarkeit von Diensten.
| Quittierung mit Gültigkeitsdauer | Die xref:basics_ackn#[Quittierung von Problemen] kann in den {EE} mit einer maximalen Gültigkeitsdauer versehen werden.
|===

[#notifications]
=== Benachrichtigungen
 
[cols="20,~",options="header"]
|===
|Funktion |Ergänzende Informationen
|Benachrichtigungs-Spooler (_notification spooler_) | Die {EE} enthalten mit dem xref:notifications#async[Benachrichtigungs-Spooler] eine Komponente, welche die effizientere und flexiblere Zustellung von Benachrichtigungen erlaubt.
|Nachvollziehbare Zustellung |Über xref:notifications#syncsmtp[Smarthost-Einstellungen] kann in den {EE} zuverlässiger sichergestellt werden, dass Benachrichtigungen ankommen als mit einer reinen Übergabe an das lokale Mailsystem der {RE}.
|Zentrale Benachrichtigungen | Im verteilten Monitoring kann der Benachrichtigungs-Spooler der {EE} so konfiguriert werden, dass er xref:distributed_monitoring#notifications[Benachrichtigungen von den Remote-Instanzen für alle Ziele] verschickt.
|===

[#agents]
=== Monitoring-Agenten

[cols="20,~",options="header"]
|===
|Funktion |Ergänzende Informationen
|Agentenbäckerei (_Agent Bakery_) |Die {EE} verfügen mit der xref:wato_monitoringagents#bakery[Agentenbäckerei] über einen Mechanismus, automatisch individuelle Agentenpakete mit Plugins und Konfigurationsdateien zu erstellen. Einstellungen der Agenten-Konfiguration können mit der xref:bakery_api#[Bakery-API] in der Setup-GUI vorgenommen werden.
|Agenten-Update |Die xref:agent_deployment#[automatische Aktualisierung] von Agentenpaketen nach Konfigurationsänderungen ist nur in den {EE} möglich.
|SNMP-Monitoring |Dank einer eigenen xref:snmp#[SNMP-Engine] _(Inline SMTP)_ sind die {EE} performanter als die {RE} mit der Nutzung von `snmpget`/`snmpbulkwalk`.
|{CMK}-Fetcher |In den {EE} sorgen die {CMK}-Fetcher für effizientes xref:wato_monitoringagents#[Einholen der Monitoring-Daten.]
|===

[#connectors]
=== Anbindungen

[cols="20,~",options="header"]
|===
|Funktion |Ergänzende Informationen
|SAML |Seit {CMK} {v22} können die {EE} nativ gegen xref:saml#[SAML authentifizieren], bis {v21} und weiterhin in der {RE} ist dies nur auf Apache-Ebene möglich.
|Grafana |Das xref:grafana#[Grafana-Plugin] erlaubt bei Nutzung mit den {EE} Filterkaskaden.
|InfluxDB und Graphite |Nur die {EE} liefern eine Schnittstelle zur Anbindung an xref:metrics_exporter#[externe Metrik-Datenbanken] mit.
|Jira | Das xref:notifications_jira#[Benachrichtigungsmodul für Jira] ist den {EE} vorbehalten.
|ServiceNow | Das xref:notifications_servicenow#[Benachrichtigungsmodul für ServiceNow] gibt es nur in den {EE}.
|===

[#other]
=== Weitere Funktionen

[cols="20,~",options="header"]
|===
|Funktion |Ergänzende Informationen
|DCD |Die dynamische Host-Konfiguration mit dem xref:dcd#[Distributed Configuration Daemon] ermöglicht die automatische Erstellung von Hosts und erleichtert damit die Überwachung von xref:monitoring_docker#[Docker] und der Cloud wie zum Beispiel xref:monitoring_aws#[Amazon Web Services (AWS)] oder xref:monitoring_gcp#[Google Cloud Platform (GCP).]
//|Verteilte HW/SW-Inventur |Die automatische Synchronisierung von Inventardaten im xref:distributed_monitoring#[verteilten Monitoring] macht Inventardaten zentral verfügbar.
|MKP-Verwaltung |Die Verwaltung von xref:mkps#[{CMK}-Erweiterungspaketen] ist in der {RE} nur auf der Kommandozeile möglich, in den {EE} zusätzlich über die Setup-GUI.
|Prognosebasiertes Monitoring (_predictive monitoring_) |Auf Basis der ermittelten Werte über einen längeren Zeitraum kann in den {EE} ein xref:predictive_monitoring#[prognosebasiertes Monitoring] mit dynamischen Schwellwerten genutzt werden.
|===

////
// end translation