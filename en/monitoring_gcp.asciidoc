include::global_attr.adoc[]
= Monitoring Amazon Web Services (AWS)
:revdate: 2022-01-06
:title: Monitoring Amazon Web Services (AWS)
:description: How to monitor and seamlessly integrate Amazon S3, EC2, EBS, RDS and ELB or their costs into {CMK} without an agent is described here.



== Introduction


== Concrete implementation of GCP monitoring

The GCP agent uses the monitoring api [1] to extract relevant metrics, and the asset api [2] to figure out what resources you have allocated on your project.

[1] https://cloud.google.com/monitoring
[2] https://cloud.google.com/asset-inventory

=== Access to GCP

An agent is actually not necessary for monitoring GCP services since GCP provides an API over
which monitoring data is also available.

{CMK} accesses this API via the `agent_gcp` ‘special agent’ --
which replaces the {CMK} agent -- but in contrast this agent runs locally on the
{CMK} server.

=== One {CMK} host per project

In GCP resources are divided by projects. In {CMK} you can monitor one project per virtual host. To monitor two projects two different virtual hosts have to be configured in {CMK}.

== Preparing GCP Project

=== Creating the service account

To enable monitoring via {CMK}, you need to create a service account that can read the monitoring and asset data.

[1] Create a Service Account (IAM & Admin -> Service Accounts -> Create Service Account at the top), you can call it cmk-monitoring. 
Give the account the IAM Roles; Monitoring Viewer, Cloud Asset Viewer.
Download the json key for the service account [2]

[1] https://cloud.google.com/iam/docs/creating-managing-service-accounts
[2] https://cloud.google.com/iam/docs/creating-managing-service-account-keys

You can only download the key once, but you are able to generate multiple keys per service account.

Open the downloaded json and copy paste the contant as the password in the gcp rule.

== Monitor Billing Information

In GCP the billing data is stored separately from the resources. This is done via billing accounts. Normally a company has one billing account with Google and multiple projects charge this account.
To monitor the billing account you have to enable billing export to big query [1]. We recommend to use a dedicated cost monitoring project for this. 
The agent will later need table id for the exported data. 

To extract data from big query the monitoring service account also needs the IAM roles: BigQuery Data Viewer and BigQuery Job User. The first is needed to read the data and the second to start a job that extracts the data.

While the billing export in gcp is very detailed, cmk only monitors the monthly total cost for each project.

[1] https://cloud.google.com/billing/docs/how-to/export-data-bigquery

== Monitor GCP Status

CMK Plus allows you to monitor GCP for incidents of the gcp products you use. This information is parsed from the status dashboard [1].

Note: default monitors all, rule only allows monitoring a few products. I might add an auto detection of products to check.

[1] https://status.cloud.google.com/

== Configuring the monitoring in {CMK}

=== Create a host for a project in {CMK}

Now create a host to monitor a project in {CMK}.
You can assign the host name as you wish. Important: Because gcp is not a service
it has no IP-address or DNS name (access is granted by the special agent itself),
so you need to set the [.guihint]#IP address family# to [.guihint]#No IP#.


===  Create hosts for the GCE instances

Services associated with GCE instances are not associated with the project host,
but to so-called xref:piggyback#[piggyback hosts].
This works in such a way that data retrieved from the project host is distributed to
these piggyback hosts, which operate without their own monitoring agents.
In this process, each GCE instance is assigned a piggyback host named after the display name of the instance.

The piggyback hosts are not automatically created by {CMK}.
Create these hosts either manually or optionally with the xref:dcd#[Dynamic Configuration Daemon (DCD)].
It is important that the names of the hosts exactly match the display names of the
GCE instance -- they are also case-sensitive!

*Tip:* with the auxiliary script `find_piggy_orphans` from the
Treasures directory you can find all of the piggyback hosts for which there are data
but which are not yet created as hosts in {CMK}:

[{shell}]
----
{c-omd} share/doc/check_mk/treasures/find_piggy_orphans
ip-172-31-44-50.eu-central-1.compute.internal
ip-172-31-44-51.eu-central-1.compute.internal
----

Configure the GCE hosts without IP addresses (analogous to the
AWS host), and select [.guihint]#No API integrations, no {CMK} agent# as agent.

image::wato_host_no_agent.png[]
