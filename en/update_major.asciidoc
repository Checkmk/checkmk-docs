// -*- coding: utf-8 -*-
// IGNORE p22 p23 pre
include::global_attr.adoc[]
= Update to version {v22}
:revdate: draft
:title: Update to version {v22}
:description: In this article you will learn what to consider when updating from {CMK} version 2.1.0 to 2.2.0.

{related-start}
xref:update#[Updates and Upgrades]
xref:install_packages#[Basic information on the installation of {CMK}]
{related-end}


[#intro]
== Introduction

In this article you will find the most important topics relevant to an update of your {CMK} from version {v21} to version {v22}.

We recommend that you read through the entire article before updating so that you know exactly what to expect: before, during and after the update.


[#prep]
== Preparations

This chapter gives you an overview of the topics you should take into consideration before you perform the update.
Probably not every topic will be relevant for you:
For each topic, you can check the corresponding box for your own reference and immediately move on to the next topic.


[#backup]
=== Backup

As with any update to production software, you should check that your backups are up to date before performing the update of {CMK}.

*Does this apply to you?*
Yes.

*What do you have to do?*
If you create your backups automatically via [.guihint]#Setup > Maintenance > Backups#, check there that your backups are up to date and that the most recent backup jobs have completed without errors.

For more information, see the articles on xref:backup#[Backups] and on xref:omd_basics#omd_backup_restore[Backing up and restoring sites].


// This block is new
// start translation
////
[#editions]
=== Auswahl der {CMK}-Edition

Die {CMK}-Editionsfamilie hat Zuwachs bekommen mit der brandneuen {CCE}.
Was diese zu bieten hat, können Sie im Artikel zur xref:cce#[{CE}] nachlesen.
Dafür heißt es Abschied nehmen von der {CFE}, die es in der {v22} nicht mehr gibt.

Die Möglichkeiten der {FE} leben aber weiter in der {CE}: das zeitlich begrenzte Ausprobieren und das dauerhafte Nutzen einer der {EE} in kleinem Rahmen.
Eine Änderung gibt es allerdings bei der Limitierung zur dauerhaften Nutzung:
Während Sie in der {FE} bis zu 25 Hosts überwachen können, sind es in der {CE} 750 Services -- jeweils in einer xref:glossar#site[Instanz.]

*Betrifft Sie das?*
Falls Sie in der Version {v21} die {FE} nutzen, müssen Sie sich in der {v22} eine neue Edition suchen.
Eine Kurzvorstellung der {CMK}-Editionen finden Sie xref:intro_setup#editions[hier.]

*Was müssen Sie tun?*
Sollte in Ihrem Fall die Limitierung auf 25 Hosts der {FE} ausreichend gewesen sein, die 750 kostenlosen Services aber nicht,
so können Sie entweder eine Subskription erwerben und das Upgrade auf eine der {EE} durchführen -- oder Sie entscheiden sich für das Downgrade auf die kostenlose {RE}.
Führen Sie das Upgrade oder das Downgrade der Edition _vor_ dem Update auf die Version {v22} durch.
Beachten Sie die dabei auch die Hinweise im Artikel zu xref:update#[Updates und Upgrades], insbesondere beim xref:update.html#down2cee[Downgrade auf die {RE}.]

Sollten Sie aber auch mit der neuen Grenze von 750 Services keine Probleme haben, dann bietet sich der Upgrade der {FE} auf die neue {CE} an,
so wie er xref:cfe2cce[weiter unten] beschrieben ist.


[#linux_versions]
=== Linux-Distributionsversionen

Während der Beta-Phase wird der Großteil der von {v21} unterstützten Distributionen weiterhin unterstützt, um Tests in vorhandenen Systemumgebungen zu erleichtern.
In der {CMK} Version {v22} werden dann einige veraltete Distributionen nicht mehr unterstützt werden.

*Betrifft Sie das?*
Das betrifft Sie, wenn auf Ihrem {CMK}-Server eine der folgenden – in der {v21} noch unterstützten – Linux-Distributionen installiert ist:

* Debian 9 _Stretch_
* Ubuntu in Long Term Support (LTS) Versionen 16.04 _Xenial_ und 18.04 _Bionic_
* Ubuntu in Short Term Support (STS) Versionen 21.10 _Impish_ und 22.10 _Kinetic_
* SLES 12 SP3 und SP4
* SLES 15 ohne Service Pack

*Was müssen Sie tun?*
Führen Sie vor dem Update von {CMK} zuerst ein xref:release_upgrade#[Versions-Upgrade der Linux-Distribution] durch.
Achten Sie darauf, dass die Zielversion der Linux-Distribution von {CMK} {v21} *und* {v22} unterstützt wird.
Welche Linux-Distributionsversionen {CMK} unterstützt, erfahren Sie im xref:install_packages#supported_distributions[Artikel zur Installation] und auf der link:https://checkmk.com/download[Download-Seite^] nachdem Sie die {CMK}-Version und Ihre Linux-Distribution ausgewählt haben.


[#browser]
=== Browser-Unterstützung

{CMK} {v22} nutzt neue Javascript-Funktionen, die in älteren Browsern nicht zur Verfügung stehen.
Unterstützt werden Chromium ab Version 101, Firefox ab Version 102 und Safari ab Version 16.
Internet Explorer und Edge/Trident werden nicht unterstützt.

*Betrifft Sie das?*
In der Regel werden Sie auf Desktop-Systemen automatische Updates auf die neueste Version aktiviert haben.

*Was müssen Sie tun?*
Prüfen Sie die verwendete Browser-Version und installieren Sie gegebenenfalls einen aktuelleren Browser.
Wenn Sie für die Anzeige von Dashboards _Single Board Computer_, _Smart TVs_ oder _Digital Signage_ Lösungen verwenden, auf deren Systembrowser Sie keinen Einfluss haben, testen Sie vor dem Update, ob benötigte Dashboards korrekt angezeigt werden.
Kontaktieren Sie gegebenenfalls den Hardware-Hersteller für Updates.


[#agentlinux]
=== Der Agent für Linux

In {CMK} {v22} unterstützt der xref:agent_linux#[Linux-Agent] nicht länger Python 2.6 für Plugins.

*Betrifft Sie das?*
Nur, wenn bei Ihnen sehr alte Linux-Systeme im Einsatz sind (Python 2.6 ist von Oktober 2008 und wurde ab Juli 2010 von Python 2.7 abgelöst) _und_ Sie auf diesen in Python geschriebene xref:glossar#agent_plugin[Agentenplugins] nutzen.

*Was müssen Sie tun?*
Identifizieren Sie die betroffenen Systeme und aktualisieren Sie die installierten Agenten auf die letzte verfügbare Patch-Version der {v21}.
Falls automatische Agenten-Updates konfiguriert sind, xref:automatic_agent_updates[deaktivieren Sie diese] vor dem Update der {CMK}-Instanz.
Sie können dann die einzelnen Komponenten Agentenskript, Plugins und lokale Checks – nach Kompatibilitätstests – manuell aktualisieren.
////
// end translation


[#agentwindows]
=== The agent for Windows

In {CMK} {v22}, the xref:agent_windows#[Windows agent] no longer supports Windows 6.0 (Vista and Server 2008 R1).
However, on affected systems, the agent from {v21} can still be used.

*Does this affect you?*
Only if you are still using these antiquated Windows systems (support ends April 11, 2017 and January 14, 2020, respectively).

*What do you need to do?*
Identify the affected systems and update the installed agents to the latest available patch version of {v21}.
If automatic agent updates are configured, xref:automatic_agent_updates[disable them] before updating the {CMK} site.


// This block is new
// start translation
////
[#bakery_plugins]
=== Alte Bakery Plugins

Bakery Plugins binden Funktionen in die Agentenpakete der xref:glossar#agent_bakery[Agentenbäckerei] (_Agent Bakery_) ein.
Mit link:https://checkmk.com/de/werk/14648[Werk #14648^] wird in der Version {v22} die Unterstützung für alte Bakery Plugins eingestellt.
Dabei handelt es sich um benutzerdefinierte Plugins, die in der Version {v16} und früher verwendet wurden, und noch nicht auf die in der {v20} eingeführte Bakery-API migriert wurden.

*Betrifft Sie das?*
Die Agentenbäckerei und damit auch die Bakery-API sind nur für Benutzer der {EE} relevant. +

Vor der Einführung der Bakery-API wurden die Bakery Plugins im Instanzverzeichnis unter `~/local/share/check_mk/agents/bakery/` abgelegt.
Um festzustellen, ob bei Ihnen alte Plugins vorhanden sind, können Sie hier nach der Zeichenkette `bakery_info[` suchen.

Seit der {v20} zeigt {CMK} außerdem beim Backen von Agentenpaketen mit alten Bakery Plugins eine Warnung an.
Diese können Sie sich auch nachträglich anzeigen lassen unter [.guihint]#Setup > Maintenance > Background jobs# im Abschnitt [.guihint]#Agent baking.#
Beim xref:cmk_commandline#bake_agents[Backen per Kommandozeile] mit `cmk -A` erfolgt die Warnung als Befehlsausgabe.

*Was müssen Sie tun?*
Migrieren Sie alte Bakery Plugins auf die Bakery-API.
Sie finden eine Einführung in die Nutzung der API im Artikel zur xref:bakery_api#[Bakery-API.] 


[#python]
=== Python 3.11

{CMK} {v22} aktualisiert Python von 3.10 auf 3.11.
Dies führt zu link:https://github.com/python/cpython/issues/66683[einer strengeren Interpretation^] xref:regexes#[regulärer Ausdrücke.]

*Betrifft Sie das?*
Nur, wenn Sie in regulären Ausdrücken link:https://www.regular-expressions.info/modifiers.html[Modifiers^] als „Inline Flags“ – also nicht am Anfang des regulären Ausdrucks, sondern mittendrin – verwenden.
Diese Art der Verwendung ist schon seit Python 3.6 als _deprecated_ markiert und führte bislang beim Test im Python-Prompt zu einer Warnung.
In Python 3.11 ist sie nicht mehr zulässig.

*Was müssen Sie tun?*
Identifizieren Sie reguläre Ausdrücke, welche Inline Flags nutzen.
Hierfür genügt es in der Regel, auf die Zeichenkette `(?` zu untersuchen.
Passen Sie die betroffenen regulären Ausdrücke so an, dass Inline Flags nur am Anfang auftreten.
xref:regexes#testing[Testen] Sie die geänderten regulären Ausdrücke dann mit dem Prompt des Python-Interpreters.


[#user_id]
=== Ungültige Benutzernamen

Ab Version {v22} ist die Verwendung bestimmter Sonderzeichen in Benutzernamen nicht mehr zulässig.
Mit ungültigen Benutzernamen ist ein Update auf die {v22} nicht möglich, da `omd update` mit einem Fehler abbricht.

Benutzernamen in {CMK} dürfen nur Buchstaben (im Sinne der link:https://www.unicode.org/reports/tr44/[Unicode-Datenbank^]), Ziffern und die folgenden Sonderzeichen enthalten: Bindestrich (`-`), Unterstrich (`_`), Punkt (`.`), At-Zeichen (`@`) und Dollarzeichen (`$`).
Als erstes Zeichen erlaubt ist nur ein Buchstabe, eine Ziffer, ein Unterstrich oder ein Dollarzeichen.

*Betrifft Sie das?*
Beim Erstellen lokaler Benutzer über [.guihint]#Setup > Users# hat {CMK} schon seit längerem, d.h. bereits vor der Version {v16}, ungültige Benutzernamen abgelehnt.
Es sind also, wenn überhaupt, nur Benutzernamen aus externen Verbindungen wie LDAP betroffen.
Mit dem link:https://checkmk.com/de/werk/14393[Werk pass:q[#]14393^] warnt Sie {CMK} seit Version {v21}p20 bei ungültigen Benutzernamen 
-- zum einen bei der Ausführung von `omd update` und zum anderen in der Benutzerverwaltung, die Sie über [.guihint]#Setup > Users# aufrufen können.
Die Benutzernamen werden in der Spalte [.guihint]#ID# angezeigt und bei ungültigen Benutzernamen steht dort eine Warnung.

*Was müssen Sie tun?*
Ändern Sie alle gefundenen ungültigen Benutzernamen an der Quelle.


[#pwd_hash]
=== Unsichere Hashfunktionen für Passwörter

Ab Version {v22} ist die Verwendung von unsicheren und veralteten Hashfunktionen für Passwörter nicht mehr erlaubt.
Dies betrifft die Hashfunktionen _DES-Crypt, MD5-Crypt, Apr MD5-Crypt_ und _SHA-256 Crypt._
Obwohl letztere für Passwörter immer noch als sicher gilt, sollen die Passwort-Hashes aller Benutzer auf die modernere _bcrypt_ Hashfunktion umgestellt werden. 

Ein lokaler Benutzer, dessen Passwort mit einer der genannten, veralteten Hashfunktionen umgewandelt wurde, kann sich in der Version {v22} nicht mehr anmelden.

*Betrifft Sie das?*
{CMK} warnt Sie seit Version {v21}p16 (siehe link:https://checkmk.com/de/werk/14391[Werk pass:q[#]14391^]), wenn unsichere Passwort-Hashes in der Datei `~/etc/htpasswd` des Instanzverzeichnisses gefunden wurden.
Bei der Ausführung von `omd update` wird eine Warnmeldung mit allen betroffenen (lokalen) Benutzernamen angezeigt.
Benutzer aus externen Verbindungen wie LDAP sind nicht betroffen.

In der {v21} wurde dann jeder betroffene Benutzer entweder nach der Anmeldung aufgefordert, ein neues Passwort zu wählen,
oder der Hash wurde automatisch bei der Anmeldung im Hintergrund aktualisiert.
Wenn sich ein Benutzer seitdem jedoch überhaupt nicht mehr angemeldet hat, ist es möglich, dass immer noch der veraltete Passwort-Hash verwendet wird.
Dieser Benutzer wird sich nach dem Update auf die Version {v22} nicht mehr anmelden können.

*Was müssen Sie tun?*
Um den Zugang für einen betroffenen Benutzer wiederherzustellen, müssen Sie dessen Passwort manuell zurücksetzen.
Ein neues Passwort vergeben Sie entweder in der Benutzerverwaltung über [.guihint]#Setup > Users# oder auf der xref:wato_user#change_passwd[Kommandozeile] mit dem Befehl `cmk-passwd <username>`.
Verwenden Sie für Passwortänderungen nur den Befehl `cmk-passwd` und nicht länger `htpasswd`, der aus der Apache-Installation kommt und ohne zusätzliche Optionen veraltete Passwort-Hashes erzeugen würde.


[#omd_update-apache-config]
=== Instanzbenutzer und System-Apache

Jede Checkmk-Instanz stellt ihre HTTP-Dienste (GUI, APIs) über einen eigenen instanzspezifischen Apache-Prozess bereit.
Den globalen Zugriff auf diesen instanzspezifischen Apache stellt der System-Apache bereit, der je nach Systemkonfiguration die Ports 80 und 443 für externe Anfragen öffnet.

Um etwas über den instanzspezifischen Apache zu erfahren, liest der System-Apache eine vom Instanzbenutzer bereitgestellte Reverse-Proxy-Konfiguration.
Ein böswilliger Instanzbenutzer könnte nun den System-Apache dazu bringen, Code als Root-Benutzer auszuführen, da der System-Apache normalerweise zunächst mit Root-Rechten gestartet wird.

Um diese Sicherheitslücke zu schließen, müssen wir die System-Apache-Konfiguration vom Zugriff des Instanzbenutzers trennen.
Um die Erweiterung der Rechte zu beseitigen, muss für jede Instanz _einmal_ der Befehl `omd update-apache-config <sitename>` ausgeführt werden.

Im link:https://checkmk.com/de/werk/14281[Werk #14281^] erhalten Sie weitere, ausführliche Informationen zu diesem Thema und zusätzliche Hinweise, die auch die Ausführung des Befehls `omd update` betreffen, wenn mit diesem bestimmte Optionen geändert werden.

*Betrifft Sie das?* 
Seit der Version {v21}p7 werden Sie bei der Ausführung von `omd update` dazu aufgefordert, zusätzlich `omd update-apache-config <sitename>` auszuführen.
Falls Sie dies bereits bei einem Update der {v21} getan haben, ist beim Update auf die {v22} nichts weiter zu tun.
Aus der bisherigen dringenden Empfehlung wird nun eine Voraussetzung beim Update auf die {v22}.

*Was müssen Sie tun?*
Führen Sie als Root-Benutzer den Befehl `omd update-apache-config <sitename>` aus, wenn Sie bei der Ausführung von `omd update` dazu aufgefordert werden.
////
// end translation


[#rest-api]
=== REST API replaces Web API

As announced in {v21}, the Web API (also called HTTP API) has been removed in {CMK} version {v22}.
The Web API is replaced by the xref:rest_api#[REST API].

*Does this affect you?*
This affects you if you have written custom scripts that still use the Web API.

*What do you need to do?*
Migrate all existing scripts that use the Web API to the REST API before moving to {CMK} version {v22}.
See the xref:rest_api#rest-web-api[REST API article] for an overview of which REST API endpoints replace the Web API commands.


// This block is new
// start translation
////
[#kubernetes]
=== Kubernetes-Monitoring

Den {CMK} {v20} Spezialagenten und die zugehörigen Check-Plugins für das Kubernetes-Monitoring gibt es nicht mehr in der {v22}.
Nutzen Sie stattdessen das in der Version {v21} von Grund auf neu geschriebene und stark verbesserte xref:monitoring_kubernetes#[Kubernetes-Monitoring.]


[#nsca]
=== NSCA

Wie bereits in der Version {v21} angekündigt, unterstützt {CMK} {v22} nicht mehr den Nagios Service Check Acceptor (NSCA).
NSCA ist ein Nagios Add-on, um Ergebnisse passiver xref:monitoring_basics#checks[Checks] von fernen Hosts in einer verteilten Nagios-Konfiguration zu erhalten.
Dieses veraltete Verfahren zum Aufbau eines xref:distributed_monitoring#[verteilten Monitorings] bietet gegenüber den {CMK}-eigenen Verfahren keine Vorteile.
Details und Hinweise zum Ersatz finden Sie im link:https://checkmk.com/de/werk/13644[Werk #13644.^]
////
// end translation


[#local_files]
=== Non-packaged local files

Local files allow you to customize and extend the functionality provided by {CMK}.
These files are located in the local part of the site's directory structure, i.e. in `~/local`.
Local files can cause problems when updating, if they no longer match the new {CMK} version.

*Does this affect you?*
Since it is not possible for {CMK} to fully ensure compatibility of local customizations when updating, you should check your {CMK} site before an update to see if any local files are used on your system, and if so, which ones.

*What do you need to do?*
Get an overview of unpackaged local files on your {CMK} site by running the following command as the site user:

[{shell}]
----
{c-omd} mkp find
----

If files are listed here, you should group files that belong together in xref:mkps#[extension packages (MKPs)].
This makes it easier to deactivate _en bloc_ later, should xref:incompatible_mkps[incompatibilities] be detected after the update.


// This block is new
// start translation
////
[#apis]
=== Programmierschnittstellen

In {CMK} {v22} wurden einige intern genutzte Programmierschnittstellen (APIs) umgebaut.

*Betrifft Sie das?*
Das Thema APIs _kann_ Sie betreffen, wenn Sie die mit {CMK} ausgelieferten um Ihre eigenen, selbst geschriebenen Checks erweitert haben und/oder wenn Sie Plugins aus anderen Quellen nutzen.
Da die neu strukturierten APIs als _intern_ gelten und auch für Plugins aus der Exchange nicht verfügbar sind,
sollte die Zahl betroffener Erweiterungen gering sein. 

*Was müssen Sie tun?*
Überprüfen Sie Erweiterungen von Drittanbietern auf ihre Funktionsfähigkeit und nehmen Sie gegebenenfalls die notwendigen Anpassungen der Import-Pfade vor.
Betroffen sind:

* Aufsplittung von GUI-Imports bezüglich Datasource Programs und aktiven Checks in mehrere Dateien (link:https://checkmk.com/de/werk/14716[Werk pass:q[#]14716^])
* Aufsplittung von GUI-Imports bezüglich der Verwendung des Passwortspeichers (_password store_) in mehrere Dateien (link:https://checkmk.com/de/werk/14719[Werk pass:q[#]14719^])
* Änderung des Geltungsbereichs der `Transform`-Klasse (link:https://checkmk.com/de/werk/14821[Werk pass:q[#]14821^])
* Feinere Granulierung des Zugriffs auf Rechte eingebauter Benutzer (link:https://checkmk.com/de/werk/14824[Werk pass:q[#]14824^])
* Ende der Unterstützung des Dashlet-Konfigurationsformats von {CMK} vor Version {v16} (link:https://checkmk.com/de/werk/14297[Werk pass:q[#]14297^])
* Ende der Unterstützung der alten Plugin-API für die HW/SW-Inventur (link:https://checkmk.com/de/werk/14084[Werk pass:q[#]14084^])
////
// end translation


[#incompatible_mkps]
=== Incompatible and obsolete MKPs

Your monitoring system can be extended quite easily and conveniently via the xref:glossar#mkp[{CMK} extension packages (MKPs)].
On the one hand, it can be the case that such MKPs are no longer maintained and may then no longer be compatible with new versions of {CMK}.
On the other hand, we keep adding new plug-ins and functional extensions to {CMK}, which is why MKPs sometimes simply become obsolete, and their functionality will be provided by {CMK} itself.

*Does this affect you?*
If you have MKPs installed, for this reason a check of these MKPs is strongly recommended -- especially before a major update.
This will prevent incompatible packages from interfering with the update, or the creation of duplicate or at least very similar services following the update.

*What do you need to do?*
To do this, check your installed MKPs against our link:https://checkmk.com/integrations[Catalog of Check Plug-ins^] and remove packages which are now provided natively by {CMK}.
You can also use this opportunity to remove MKPs that may have only been installed for a test run.
A listing can be found via [.guihint]#Setup > Maintenance > Extension packages#.

On the command line, you can view installed extensions with the following command:

[{shell}]
----
{c-omd} mkp list
Name        Version Title         Req. Version Until Version Files State                          
----------- ------- ------------- ------------ ------------- ----- -------------------------------
my_cool_mkp 1.0.2   Best MKP ever 2.0.0        2.3.9p999     6     Enabled (active on this site)
hello_world 0.2.1   Hello world!  2.1.0        2.1.999       6     Enabled (active on this site)
----

Then for each listed MKP you can subsequently also display the files that belong to the package:

[{shell}]
----
{c-omd} mkp list my_cool_mkp
/omd/sites/mysite/local/lib/check_mk/base/plugins/agent_based/check_mk.py
/omd/sites/mysite/local/share/check_mk/web/plugins/metrics/custom_metrics.py
----

Should you not be able to assign all packages via the check of the installed MKPs and the comparison with our catalog, the xref:dry_run[test run of the update,] described hereafter is recommended to identify incompatibilities in the process and then before the update remove these from your production monitoring.


[#mkp_backport]
==== MKP management for different {CMK} versions

To facilitate updates, {CMK} {v21}p22 introduced the ability to maintain MKPs in different versions.
When updating, the package for {CMK} {v21} is then automatically deactivated and the one for {CMK} {v22} automatically activated.
When operating a distributed monitoring with a xref:glossar#distributed_setup[centralized configuration], you can use this feature to xref:dist_setup[distribute] packages in versions that can differ between the remote sites and the central site.
This works even if the remote sites have a higher version than the central site, as is the case when updating in a distributed monitoring during a transitional period.

Note that you can only use this feature if you use at least {v21}p22 as the initial version!
If these requirements are met, you can add additional packages for {v22} on the central site.

When installing an MKP written for {CMK} {v22}, you will get a warning message when using {CMK} {v21}p22 and higher:

[{shell}]
----
{c-omd} mkp install /tmp/hello_world-0.2.2.mkp 
The package requires Check_MK version 2.2.0, but you have 2.1.0p22 installed.
----

This package is identified in the list of packages as being [.guihint]#Enabled (inactive on this site)#:

[{shell}]
----
{c-omd} mkp list
Name        Version Title        Req. Version Until Version Files State                          
----------- ------- ------------ ------------ ------------- ----- -------------------------------
hello_world 0.2.2   Hello world! 2.2.0        2.2.999       6     Enabled (inactive on this site)
hello_world 0.2.1   Hello world! 2.1.0        2.1.999       6     Enabled (active on this site)
----

Details on the revised package management function can be found in the xref:mkps#[article on extension package (MKPs) management].


[#incompatible]
=== Incompatible changes

As in every {CMK} version, there are alterations to the software in the current version {v22} that _may_ have repercussions on your {CMK} installation.
A so-called _incompatible change_ requires that you make manual modifications in order to allow existing functions to continue to run as usual and/or to be able to use new functions.

*Does this affect you?*
In general, there will be incompatible changes that will also affect your {CMK} installation, it is however impossible to make a general statement.
In this article we have collected those issues that apply to all or most {CMK} installations.
In any case there may be additional changes that are relevant to you, for example in checks that you use in your installation.

*What do you need to do?*
Once you have performed the xref:update[update], the {CMK} interface will show you the number and content of any incompatible changes, and prompt you to review and take note of them.
So you will definitely be confronted with this issue -- but only after you have performed the update.

It is therefore a good idea to get an overview of the incompatible changes *before* the update:
Open the list of link:https://checkmk.com/werks?search=&cmk_version$$[$$$$]$$=2.2&compatible=0[Werks^].
(The software development of {CMK} is organized in so-called Werks).
In the description of a Werk, you will find instructions on what, if anything, needs to be done to make the change compatible.

The frustrating news:
A version's Werks list is very, very long -- even if it contains only the incompatible changes.
The comforting news:
You will be able to see from the number of changes how much effort we put into improving {CMK} for you.


[#update]
== Update

[#dry_run]
=== Best practices when updating

In this section we describe the best practices that we follow even when updating large {CMK} environments.
These are certainly not mandatory in every environment, but they can make the process of updating easier for you.


==== Update the {CMK} version

Before updating to version {v22}, the {CMK} site must have version {v21} installed.

We have previously advised against omitting an intermediate major version when performing a major update, as there are simply too many changes in between that will hinder a smooth update and almost certainly cause problems.
With version {v21}, this recommendation was turned into a requirement -- and a lock was introduced that prevents, for example, a direct update from version {v20} to {v22}.

The update to {v22} currently requires at least {v21}p23.
However, in the future, a specific {v22} patch version may require a higher {v21} patch version for the update.
In general, we recommend updating {CMK} to the latest {v21} patch version first, and only then updating to {v22}.


==== Perform a test run of the update

In large environments, where obviously even restoring a current backup of your {CMK} environment could take quite some time, it is recommended to perform a test with a cloned site before updating the production environment.
For this purpose, you can, for example, restore the last regular backup of your site under a different name.

[{shell}]
----
{c-root} omd restore newsite /path/to/backup
----

*Alternatively* you can also copy your site using `omd cp`.
For this, however, the site must be stopped for a short time:

[{shell}]
----
{c-root} omd stop mysite
{c-root} omd cp mysite newsite
----

Then, perform the update first on this new cloned site, for example to check the above mentioned local changes in the new environment.


[#automatic_agent_updates]
==== Temporarily disable agent updates


{cee-only}
If you are using the automatic agent updates, you should consider disabling them temporarily before updating {CMK} so as to be able to later switch to the new agents at the hosts in a controlled manner.
To do this, first select [.guihint]#Setup > Agents > Windows, Linux, Solaris, AIX# and on the following page select the menu item [.guihint]#Agents > Automatic updates.#
By clicking on the icon:icon_edit[alt="Icon to edit a list entry."] button in front of the [.guihint]#Master switch# you can disable the agent update completely:

image::update_major_automatic_agent_updates.png[alt=" Disabling agent update using the master switch."]

Following a successful update of {CMK}, you can reactivate the agent update in the same way.

At this point, we recommend that you initially only reactivate the automatic agent update for individual hosts or host groups.
By doing so, the new agent will not be rolled out to all of your servers right away and you can familiarize yourself with the newly delivered data on a few systems.
Also, due to the significant increase in the number of check plug-ins supplied, you might find a whole new set of services that you can then set up properly on the test systems you choose.
You may also need new thresholds for new services.
If you tackle this on a small scale first, you will be able to minimize unnecessary false positives.

To do this, you can simply enter a few hosts or host groups in the appropriate fields on the above page and then re-enable the [.guihint]#Master switch#.

image::update_major_activate_update_on_selected_hosts.png[alt="Options when updating agents to activate on specific hosts."]

*Important:* Remember to remove these restrictions on explicit hosts and host groups again once you are satisfied with the results.


[#notifications]
==== Temporarily disable notifications

You should also consider turning off xref:glossar#notification[notifications] in the pre-update site -- for similar reasons to the ones we explained in the previous section on automatic agent updates.
This way you avoid your colleagues from the monitoring team receiving _unnecessary_ notifications.

You can turn off notifications centrally with the main [.guihint]#Notifications# switch in the xref:user_interface#master_control[Master control] snap-in.

It may will happen that after the update one or another service is {CRIT} which had not been the case previously.
Take care of new problems after the update first.
You can also view any unhandled problems, e.g. in the xref:user_interface#overview[Overview] snap-in.

*Important:* Don't forget to turn on the notifications again, e.g. when the number of unhandled problems after the update has leveled off to the level before the update.


// This block REPLACES the following block
// start translation
////
[#update_distributed_monitoring]
=== Update im verteilten Monitoring

Es gibt zwei unterschiedliche Vorgehensweisen, um das Update aller in einem xref:distributed_monitoring#[verteilten Monitoring] beteiligten Instanzen durchzuführen:

* Alle Instanzen stoppen, das Update _en bloc_ durchführen und dann alle Instanzen wieder starten.
* Unter strengen Auflagen ist ein _Mischbetrieb_ für einen gewissen Zeitraum möglich, in dem zunächst die Remote-Instanzen aktualisiert werden und zum Schluss mit dem Update der Zentralinstanz wieder Versionsgleichstand hergestellt wird.

Insbesondere, wenn Sie die Aktualisierung im laufenden Betrieb anstreben, sollten Sie die Hinweise im allgemeinen Artikel zu xref:update#updatedistributed[Updates und Upgrades] lesen.
////
// end translation


[#update_distributed_monitoring]
=== Updates in distributed monitoring

You have a number of procedures for performing the update of the sites involved in a xref:distributed_monitoring#[distributed monitoring], i.e. the central site and the remote sites.

*Important:* Whichever approach you choose:
In this scenario, you should also create xref:backup#[backups] beforehand.

The recommended, safe procedure is _update in one go_, where you perform the following steps:

. Stop all sites .
. Perform the update for all sites.
. Restart the updated sites.

There is another variant: the _Update on the fly_.
This procedure is required, among other things, when you manage a large number of distributed sites that cannot be updated in one go for technical or organizational reasons.

When updating on the fly, sites with different {CMK} versions must communicate with each other for a transition period -- until the update of all sites involved is complete.
For this cooperation to work, the versions involved in such a mixed operation must be compatible.












[#dist_setup]
==== MKPs in a distributed setup

If you are running a distributed monitoring with a xref:glossar#distributed_setup[central configuration] from which xref:glossar#mkp[{CMK} extension packages (MKPs)] are also distributed to the remote sites, you have the option to keep packages for the remote sites in versions for {v21} and {v22} on the {CMK} {v21} central site.
The MKPs matching the remote sites will then be distributed automatically.

To use this feature, you must first update the central site to patch version {v21}p22.
Once this has been done, you can start adding additional xref:mkp_backport[packages for {v22} on the central site].
Now, when you upgrade remote sites to {v22}, they will automatically receive and activate the package matching the new version.


=== Performing the update

Nothing fundamental has changed with the actual update of the software in {CMK} {v22}, 
i.e. you install the new version, perform the update of the {CMK} site, rectify any possible conflicts and check and confirm the incompatible changes.

Perform the update procedure as described in the xref:update#detailed[article on updates and upgrades].


// This block is new
// start translation
////
[#cfe2cce]
=== Upgrade auf die {CE}

Falls Sie in der Version {v21} die {FE} installiert haben, liegt es nahe, mit dem Update auf die {v22} auch das Upgrade auf die {CE} durchzuführen,
da Sie diese xref:editions[{CMK}-Edition] in der {v22} zeitlich begrenzt ausprobieren und in in kleinem Rahmen dauerhaft nutzen können.

. Laden Sie die {CE} auf der link:https://checkmk.com/de/download[Download-Seite^] herunter.
Für den Download benötigen Sie keine Zugangsdaten.

. Führen Sie das Update auf die Version {v22} so durch, wie es im Artikel zu xref:update#detailed[Updates und Upgrades] beschrieben ist. +
Dabei führen Sie gleichzeitig mit dem _Update_ auf die Version {v22} ein _Upgrade_ auf eine andere Edition durch, 
da es im konkreten Fall keine gemeinsame Version der {v21} {FE} und der {v22} {CE} gibt.
Daher müssen Sie bei der Ausführung von `omd update` eine zusätzliche Abfrage bestätigen:

+
image::update_major_omd_update_upgrade_confirmation.png[alt="Nachfrage beim Upgrade auf die {CE}.",width=40%]

+
Die letzten Zeilen der Ausgabe von `omd update` weisen Sie darauf hin, dass die {CE} ihr Leben im Trial-Modus beginnt,
in dem Sie die {CE} 30 Tage ohne Einschränkung unverbindlich testen können:

+
[{shell}]
----
You are now starting your trial of Checkmk Cloud Edition.
If you are intending to use Checkmk to monitor more than 750 services after 30 days, you must purchase a license.
In case you already have a license, please enter your license credentials on the product's licensing page (Setup > Maintenance > Licensing > Edit settings).
Finished update.
----

. Starten Sie nach dem Upgrade auf die {CE} Ihre Instanz neu.
Der Anmeldedialog zeigt den Countdown für die verbleibende Zeit des Trial-Modus:

+
image::update_major_login_cce_trial.png[alt="{CMK}-Anmeldedialog für die {CE} im Trial-Modus.",width=60%]

Die Eingabe eines Lizenzschlüssels nach spätestens 30 Tagen ist nur notwendig, falls Sie die {CE} ohne Beschränkungen einsetzen möchten.
Sofern Sie unterhalb der Grenze von 750 Services in einer Instanz bleiben, wechselt die {CE} nach 30 Tagen in den Free-Modus.
////
// end translation


[#follow-up]
== Follow-ups

[#gui]
=== Changes to the user interface

// This block is new
// start translation
////
Die Benutzeroberfläche (GUI) von {CMK}, die mit Version {v20} komplett neu gestaltet wurde, hat sich auch in der {v22} nicht grundlegend verändert.
Die generellen Abläufe, die Sie aus der Version {v20} und {v21} kennen, können Sie auch in der {v22} unverändert anwenden.
Allerdings haben sich Menüs, Menüeinträge, Symbole und andere Details geändert, um neue Funktionen verfügbar zu machen -- und bestehende zu verbessern.

In den Artikeln dieses Handbuchs stellen wir Ihnen diese Änderungen vor - und im xref:intro_setup#[Leitfaden für Einsteiger] finden Sie eine ausführliche Einführung,
unter anderem in die wichtigsten Elemente der xref:intro_gui#[Benutzeroberfläche.]


[#favorites]
==== Die Favoriten wurden entfernt

Die kaum bekannte, wenig genutzte und im Handbuch auch nicht beschriebene Möglichkeit, Hosts und Services als _Favoriten_ zu kennzeichnen wurde mit link:https://checkmk.com/de/werk/14727[Werk pass:q[#]14727^] entfernt.
Favoriten konnten bis zur {v21} über den Menüeintrag [.guihint]#Commands > Favorites# gesetzt werden, d.h. im gleichen Menü, indem auch die Kommandos zur Quittierung von Problemen oder der Erstellung von Wartungszeiten zu finden sind.

Als Ersatz für den schnellen Zugriff auf wichtige Hosts und Services bieten sich die xref:user_interface.html#bookmarks[Bookmarks] an, die Sie z.B. in Ansichten setzen können, nachdem Sie sich die gezeigten Hosts oder Services zurechtgefiltert haben.
Eine Beschreibung dazu finden Sie im xref:intro_tools#views[Leitfaden für Einsteiger.]
////
// end translation


[#service_discovery]
=== Updating services

As with every major version, {CMK} {v22} introduces a whole new set of check plug-ins.
If you do not use the xref:wato_services#discovery_check['discovery check'], i.e. the automatic update of the service configuration via the periodic service discovery, you will have to search for services on quite a number of hosts.

If your hosts are organized accordingly (e.g. in folders), you can generally use the [.guihint]#Bulk discovery# function for this.
This function can be found under [.guihint]#Setup > Hosts > Hosts# and then in the [.guihint]#Hosts > Run bulk service discovery# menu.


[#service_descriptions]
==== Service descriptions

Each update of {CMK} will involve changing service descriptions to improve the consistency of naming within the monitoring and documentation of {CMK}.
Since changing service descriptions means that rules sometimes need to be modified and historical monitoring data is lost, {CMK} initially leaves the old descriptions in place for updates.
For services where the loss of old monitoring data is acceptable and the effort for adapting rules is manageable, you should switch to new service descriptions as soon as possible.

To do this, go to [.guihint]#Setup > General > Global Settings > Execution of checks# and go through the list [.guihint]#Use new service descriptions# and identify the services where the checkboxes are not yet active and activate them.
After applying the changes, the new service descriptions will be active and a few minutes will pass before you see the defined states of the affected services in the monitoring again.


[#new_ports]
=== Ports

Since {CMK} {v21}, hosts need access to the following ports on the {CMK} server to perform xref:wato_monitoringagents#agents[TLS registration]: port 443 (80 respectively) for REST API requests and port 8000 for the Agent Receiver.
If security policies speak against making these ports available, you can perform a xref:agent_linux#proxyregister[registration by proxy] directly on the {CMK} server when using xref:glossar#pull_mode[pull mode].

To use the {CE}'s xref:glossar#push_mode[push mode] introduced in {CMK} {v22}, port 8000 of the {CMK} server must be accessible from the monitored host.


// This block is new
// start translation
////
[#certificate_lifetime]
=== Agent Controller Zertifikatslaufzeit

{CMK} {v21} nutzte für den Aufbau der TLS-Verbindung Zertifikate mit de facto unbegrenzter Gültigkeit.
In {CMK} {v22} ist die Laufzeit der Zertifikate einstellbar und auf einen Standardwert von fünf Jahren gesetzt (siehe link:https://checkmk.com/de/werk/14964[Werk pass:q[#]14964^]).
Zudem kann eine eigene _Certificate Authority_ verwendet werden.
Vor dem Update auf {v22} erstellte Zertifikate werden automatisch nach Ablauf der maximalen Laufzeit durch neu generierte Zertifikate ausgetauscht.

Aktualisieren Sie daher {CMK} {v21} Agenten, welche den Agent Controller mit Verschlüsselung verwenden, zeitnah auf den {v22} Agenten.

In den wenigen Fällen, wo ein Update des Agenten nicht möglich ist – zum Beispiel, weil die Betriebssystemversion vom {v22} Agenten nicht mehr unterstützt wird –, müssen Sie betroffene Hosts nach Ablauf der Zertifikatslaufzeit manuell xref:agent_windows#registration[neu registrieren].
Dasselbe gilt, wenn Hosts mit dem {v22} Agenten längere Zeit inaktiv sind. 
////
// end translation


[#remove_old_mkps]
=== Removing obsolete MKPs

*Does this affect you?*
This will affect you if you have made use of the feature to keep xref:mkp_backport[MKPs in differing versions].

*What do you need to do?*
During the update, incompatible packages will be automatically set to the [.guihint]#Disabled# state, but not completely deleted.
Packages compatible with the new {CMK} version will be automatically enabled, and you will see the [.guihint]#Enabled (active on this site)# state.

[{shell}]
----
{c-omd} mkp list
Name        Version Title        Req. Version Until Version Files State                          
----------- ------- ------------ ------------ ------------- ----- -----------------------------
hello_world 0.2.1   Hello world! 2.1.0        2.1.999       6     Enabled (active on this site)
hello_world 0.2.0   Hello world! 2.0.0        2.0.999       6     Disabled
----

Once the functionality of the new packages has been verified and the old ones are no longer needed for reference, you can search for obsolete packages:

[{shell}]
----
{c-omd} mkp list | grep Disabled
----

Then uninstall them with `mkp remove`.

[{shell}]
----
{c-omd} mkp remove hello_world 0.2.0
----


[#outlook]
== The outlook

This chapter covers topics not directly related to the current {CMK} version {v22}, but to one of its subsequent versions.


// This block is new
// start translation
////
[#mod_auth_mellon]
=== {CMK} ohne Apache-Modul mod_auth_mellon

link:https://github.com/Uninett/mod_auth_mellon[mod_auth_mellon^] ist ein Software-Modul für Apache, das Dienste zur Authentifizierung (_authentication_) über Secure Assertion Markup Language (SAML) bereitstellt.
Bis zur {CMK} Version {v21} war die Anmeldung bei {CMK} über SAML nur mit der Hilfe von mod_auth_mellon möglich.
Ab der Version {v22} ist die SAML-Authentifizierung in den {CMK} {EE} eingebaut und die Konfiguration erfolgt über die {CMK}-Benutzeroberfläche, wie es im Artikel zu xref:saml#saml_cee[SAML] beschrieben ist.
Auch die SAML-Authentifizierung per mod_auth_mellon wird in der Version {v22} noch unterstützt.

Das ändert sich jedoch ab der Version {v23}:
mod_auth_mellon wird dann nicht mehr mit der {CMK}-Software ausgeliefert werden.
Wenn Sie diesen Weg zur SAML-Authentifizierung auch ab der {v23} nutzen wollen, müssen Sie mod_auth_mellon manuell installieren.
Allerdings gibt es von uns ab der Version {v23} keinen Support mehr für dieses Verfahren.

[#mk_file_config]
=== Keine Konfiguration von Check-Plugin-Standardwerten mit mk-Dateien

In der Version {v23} wird es nicht mehr möglich sein, Standardwerte von Check-Plugins oder andere globale Variablen mithilfe von mk-Dateien zu überschreiben.

Dieser veraltete Weg, Plugins zu konfigurieren, ist seit langem nicht mehr dokumentiert --
und funktioniert sowieso nicht mehr bei all jenen Plugins, die auf die in der {v20} eingeführte link:https://docs.checkmk.com/2.1.0/de/update_major.html#check-api[Check-API] umgestellt worden sind.
Daher wird die Konfiguration von Check-Plugin-Standardwerten mit mk-Dateien beginnend mit der Version {v23} nicht mehr unterstützt.

Details und Hinweise zur Umstellung finden Sie im link:https://checkmk.com/de/werk/15250[Werk #15250.^]

[#prometheus]
=== Prometheus-Checks Datenquelle und Einstellungen

Der xref:monitoring_prometheus#[Prometheus-Spezialagent] bietet `kube-state-metrics` als Datenquelle, dessen Checks nicht mehr aktiv unterstützt werden.
Diese wurden mittlerweile durch verbesserte Gegenstücke im Kubernetes-Agenten ersetzt (siehe link:https://checkmk.com/de/werk/14572[Werk pass:q[#]14572^]).
Zudem wird in den Regeln [.guihint]#Prometheus# und [.guihint]#Alertmanager# die Angabe von IP-Adresse/Host-Name, Port und Pfadpräfix durch ein einziges Eingabefeld [.guihint]#Custom URL# abgelöst (siehe link:https://checkmk.com/de/werk/14573[Werk pass:q[#]14573^]).

In beiden Fällen funktioniert das alte Verfahren weiterhin in {v22}.
Zur Verwendung in {v23} müssen Sie jedoch Ihre Konfiguration auf das neue Verfahren umgestellt haben.
////
// end translation
