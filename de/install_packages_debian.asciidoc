// -*- coding: utf-8 -*-
include::global_attr.adoc[]
= Installation unter Debian und Ubuntu
:revdate: 2022-10-05
:title: Installation unter Debian und Ubuntu
:description: Hier erfahren Sie, wie Sie {CMK} unter der Linux-Distribution von Debian und von Ubuntu installieren.

{related-start}
xref:intro_welcome#[Leitfaden für Einsteiger]
xref:checkmk_getting_started#[Schnelleinstieg ins Monitoring]
xref:introduction_virt1#[Installation der virtuellen Appliance]
xref:install_packages#[Grundsätzliches zur Installation von {CMK}]
{related-end}

//SK: H1:Zusätzliche Sicherheitsmechanismen gemäß KNW-86 beschreiben
//SK: Hab ich leider zu spät gesehen diesen Hinweis. Muss ich nachliefern.


== Herunterladen des passenden Pakets

Wenn Sie eine Subskription besitzen, dann finden Sie im link:https://portal.checkmk.com/de/[Kundenportal^] zu jeder verfügbaren xref:cmk_versions#[{CMK}-Version] ein passendes RPM- bzw. DEB-Paket für Ihre
Distribution.
Zum kostenlosen Testen oder für kleinere Installationen von {CMK} können Sie auf unsere link:https://checkmk.com/de/download[kostenlosen Editionen^] zurückgreifen.
Diese benötigen dann entsprechend auch keine Subskription, können jedoch jederzeit problemlos durch ein xref:update#updatedemo[Upgrade] auf eine der {CEE} überführt werden.

Beachten Sie bei der Auswahl des Pakets:

* Wählen Sie die für Sie passende Edition aus.
Falls Sie unsicher sind, verschaffen Sie sich zuerst einen Überblick über die Unterschiede zwischen den link:https://checkmk.com/de/produkt/editionen[Editionen.^]
* Wählen Sie die {CMK}-Version, die Distribution und zuletzt die Version der gewählten Distribution.
* Wir empfehlen den Einsatz der _letzten stabilen {CMK}-Version._
Falls Sie eine ältere Version benötigen, finden Sie diese im link:https://checkmk.com/de/download/archive/[Download-Archiv.^]
* Name und Version Ihrer Distribution müssen exakt übereinstimmen.
// TK: Versteh ich nicht: Was muss hier exakt übereinstimmen?

Nachdem Sie das Paket heruntergeladen haben, bringen Sie es auf das Linux-System, auf dem {CMK} installiert werden soll.
Das kann zum Beispiel über das Programm _WinSCP_ geschehen, oder -- wenn Sie direkt SSH-Verbindungen öffnen können -- über das Kommandozeilentool `scp`.

Für eine Übertragung mithilfe von `scp` muss auf dem zukünftigen {CMK}-Server das Paket `openssh-server` installiert sein.
Sollte dies noch nicht der Fall sein, so führen Sie den folgenden Befehl aus, um das Paket zu installieren:

[{shell}]
----
{c-root} apt install openssh-server
----

Anschließend können Sie beispielsweise die {CRE} für Ubuntu 20.04 _Focal Fossa_ wie folgt übertragen:

[{shell}]
----
{c-root} scp check-mk-raw-2.1.0p1_0.focal_amd64.deb root@mymonitoring.mydomain.org:
----


[#signed]
== Installation des signierten Pakets

Alle Pakete werden mittels link:https://gnupg.org[GnuPG^] signiert.
Durch diese Signatur können Sie zum einen prüfen, ob das Paket auch wirklich von uns stammt, und zum anderen, ob es insgesamt vollständig ist.

Je nachdem mit welchen optionalen Paketen Ihre Distribution installiert wurde, muss für eine erfolgreiche Verifikation noch das Paket `dpkg-sig` inklusive seiner Abhängigkeiten installiert werden.
Führen Sie dazu den folgenden Befehl aus:

[{shell}]
----
{c-root} apt install dpkg-sig
----

Damit die signierten Pakete wie gewohnt installiert werden können, müssen Sie einmalig unseren öffentlichen Schlüssel importieren, damit der Signatur vertraut wird.
Laden Sie dazu zuerst den Schlüssel direkt von unserer Website:

[{shell-raw}]
----
{c-root} wget https://download.checkmk.com/checkmk/Check_MK-pubkey.gpg
----

Danach importieren Sie den Schlüssel in die Liste der vertrauenswürdigen Signaturen.
Unter Debian und Ubuntu benötigen Sie dafür den folgenden Befehl:

[{shell}]
----
{c-root} gpg --import Check_MK-pubkey.gpg
----

Sobald Sie den Schlüssel importiert haben, verifizieren Sie das {CMK}-Paket mit dem folgenden Befehl:

[{shell}]
----
{c-root} dpkg-sig --verify check-mk-raw-2.1.0p1_0.focal_amd64.deb
----

In einigen Fällen scheitert die Signaturprüfung mit der folgenden Fehlermeldung:

[{shell}]
----
BADSIG _gpgbuilder
----

Tritt dies auf, ist der wahrscheinlichste Grund, dass die installierte Version von `dpkg-sig` nicht mit dem Kompressionsformat des Pakets umgehen kann.
Verwenden Sie in diesem Fall `gpg`, um die Signatur zu prüfen:

[{shell}]
----
{c-root} gpg --verify check-mk-raw-2.1.0p1_0.focal_amd64.deb
gpg: Signature made Thu Sep 15 10:23:00 2022 UTC
gpg:                using RSA key B1E7106575B723F00611C612434DAC48C4503261
gpg: Good signature from "Check_MK Software Release Signing Key (2018) <feedback@check-mk.org>" [unknown]
gpg:                 aka "Check_MK Software Daily Build Signing Key (2018) <feedback@check-mk.org>" [unknown]
gpg: WARNING: This key is not certified with a trusted signature!
gpg:          There is no indication that the signature belongs to the owner.
Primary key fingerprint: B1E7 1065 75B7 23F0 0611  C612 434D AC48 C450 3261
----

Die angezeigte Warnung bezieht sich auf den öffentlichen Schlüssel von {CMK}, nicht die Signatur des Pakets selbst.
Der Grund hierfür ist, dass der verwendete Schlüssel mit keinem anderen Schlüssel signiert ist, dem der Nutzer vertraut - was aber in diesem Fall kein Problem darstellt. 

Anschließend können Sie das {CMK}-Paket mit dem folgenden Befehl installieren.
Achten Sie dabei darauf, den vollständigen Pfad zu der DEB-Datei an `apt install` zu übergeben:

[{shell}]
----
{c-root} apt install /tmp/check-mk-raw-2.1.0p1_0.focal_amd64.deb
----


== Abschlusstest

Nach der erfolgreichen Installation von {CMK} und allen Abhängigkeiten steht Ihnen der Befehl `omd` zur Verfügung, mit dem Sie xref:omd_basics#[Monitoring-Instanzen] anlegen und verwalten können.
Zur Kontrolle können Sie die installierte Version ausgeben lassen:

[{shell}]
----
{c-root} omd version
OMD - Open Monitoring Distribution Version 2.1.0p1.cre
----
