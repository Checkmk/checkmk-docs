// -*- coding: utf-8 -*-
include::global_attr.adoc[]

[#rest_api]
== REST-API-Anfragen für Hosts

Viele der Aktionen, die in diesem Artikel beschrieben sind, können Sie auch per {CMK} xref:rest_api#[REST-API] ausführen.
Die in diesem Kapitel enthaltenen Beispiele orientieren sich an dem Beispiel-Code für das Kommandozeilenprogramms cURL, das in der REST-API-Dokumentation enthalten ist. 
So, wie die API-Dokumentation enthalten auch die Beispiele in diesem Kapitel Variablen, z.B. für Benutzer (`$USERNAME`) und Passwort (`$PASSWORD`) der genutzten xref:rest_api#bearerauth[Bearer-Authentifizierung.]

Bevor Sie die `curl`-Kommandos absetzen, können Sie die Variablen mit den folgenden Kommandos in der Shell auf Ihre Umgebung anpassen:
[{shell}]
----
{c-user} HOST_NAME="myserver"; SITE_NAME="mysite"; API_URL="http://$HOST_NAME/$SITE_NAME/check_mk/api/1.0"; USERNAME="automation"; PASSWORD="automationsecret";
----

Um die standardmäßig unformatierten Antworten der REST-API formatiert zu erhalten, können Sie ein `curl`-Kommando mit `| jq` in den Kommandozeilen-JSON-Prozessor `jq` umleiten -- sofern `jq` installiert ist.

In den folgenden Überschriften sind die Titel in Klammern die Titel der Endpunkte in der API-Dokumentation.


// zu 2. Ordner und Vererbung
[discrete]
=== Alle Ordner anzeigen (Show all folders)

funktioniert nicht :-(

[{shell}]
----
{c-user} curl \
--request GET \
--header "Authorization: Bearer $USERNAME $PASSWORD" \
--header "Accept: application/json" \
--data-urlencode 'parent=~network' \
"$API_URL/domain-types/folder_config/collections/all" \
| jq
----

[discrete]
=== Alle Hosts eines Ordners anzeigen (Show all hosts in a folder)

Hier werden die Hosts im Unterordner [.guihint]#Main > Network > Switch# angefordert:

[{shell-raw}]
----
{c-user} curl \
--request GET \
--header "Authorization: Bearer $USERNAME $PASSWORD" \
--header "Accept: application/json" \
"$API_URL/objects/folder_config/~network~switch/collections/hosts" \
| jq 
----

[discrete]
=== Ordner erstellen (Create a folder)


// zu 3. Hosts im Setup erstellen und bearbeiten
[discrete]
=== Host erstellen (Create a host)

[discrete]
=== Host ändern (Update a host)


// zu 4. Services konfigurieren
[discrete]
=== Service-Erkennung auf einem Host durchführen (Execute a service discovery on a host)


// zu: 5. Hosts über CSV-Daten importieren
[discrete]
=== Mehrere Hosts erstellen (Bulk create hosts)


// zu: 6. Netzwerk-Scan für Ordner durchführen > gibt es nicht in der RST-API
// zu 7. Hosts im Setup suchen > gibt es nicht in der RST-API
// zu 8. Hosts umbenennen > Bulk update hosts tut nicht das, was die GUI mit regexes anbietet, daher nur Umbenennung eines einzelnen Hosts

[discrete]
=== Host umbenennen (Rename a host)
