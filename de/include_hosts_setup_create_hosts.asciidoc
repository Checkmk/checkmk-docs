// -*- coding: utf-8 -*-
include::global_attr.adoc[]


[#create_hosts]
== Hosts im Setup erstellen und bearbeiten

*Bearbeitungshinweis:* Auf neue Menüstruktur aktualisieren, gegebenenfalls neue Optionen aufnehmen.

Zur Verwaltung der Ordner und Hosts gelangen Sie mit [.guihint]#Setup > Hosts > Hosts:#

// FIXME: Neuer Screenshot?
image::hosts_main_directory.png[alt="Ordneransicht 'Main directory' mit mehreren Unterordnern."]

In der Standardansicht sehen Sie hier die (zu Beginn leere) Liste der Ordner und darunter tabellarisch die bereits im Monitoring vorhandenen Hosts. 
Das Anlegen eines neuen Hosts mit dem Aktionsknopf [.guihint]#Add host#, das icon:icon_clone[alt="Symbol zum Klonen eines Listeneintrags."] Klonen oder das icon:icon_edit[alt="Symbol zum Bearbeiten eines Listeneintrags."] Editieren eines bestehenden Hosts bringt Sie zu der Seite mit den Attributen des Hosts.
Diese sind in mehreren Abschnitte gruppiert, von denen wir hier die wichtigsten vorstellen.

=== Der Host-Name

// Discuss: MFS: Ist der Hostname wirklich am wichtigsten? Oder ist es wegen dem Rewrite der RRD Dateien?
// Am wichtigsten ist der Host-Name.
Das Feld [.guihint]#Hostname# dient überall innerhalb von {CMK} zur eindeutigen Identifizierung des Hosts.
Wenn möglich sollten Sie den DNS-Namen des Hosts verwenden.
Ist der DNS-Name zu sperrig, können Sie später einen leichter erkennbaren Aliasnamen vergeben.

Änderungen am Hostnamen sind dennoch später möglich.
Da der Hostname jedoch an vielen Stellen in {CMK} verwendet wird, sind Änderungen aufwändiger, je mehr Monitoring-Daten zum Zeitpunkt der Änderung schon angefallen sind.
// MFS: Alt als Referenz:
// Der Host-Name wird in interne Referenzen eingetragen, als Teil von URLs verwendet, dient als Teil von Dateinamen und Verzeichnissen, taucht in Logdateien auf usw.
// Es gibt zwar eine Funktion, um Host-Namen später zu ändern, dies ist aber ein aufwendiger und komplexer Vorgang, den Sie vermeiden sollten.
// Wählen Sie daher den Namen sorgfältig.
// Der Host-Name muss nicht unbedingt mit dem DNS-Namen des Hosts übereinstimmen, aber es macht etliche Dinge einfacher.

image::hosts_new_host_1.png[alt="Dialog mit Eigenschaften eines Hosts: der Host-Name."]

[#dns]
=== Alias und IP-Adresse

Sie können unter [.guihint]#Alias# einen alternativen, beschreibenden Namen für den Host vergeben, welcher an vielen Stellen in der GUI und in Berichten angezeigt wird.
Vergeben Sie keinen Alias, so wird als Alias der Host-Name verwendet.

image::hosts_new_host_2.png[alt="Dialog mit Eigenschaften eines Hosts: Alias und IP-Adresse."]

Eine IP-Adresse müssen Sie nicht zwangsläufig angeben.
Allerdings kann es sinnvoll sein, selbst bei Verwendung eines auflösbaren Hostnamens diesen noch einmal in das Feld IP-Adresse einzutragen.

Für die Konfiguration der IP-Adresse haben Sie vier Möglichkeiten, die auch den Zeitpunkt der Namensauflösung bestimmen:

[cols="5,65,~", options="header"]
|===
|Möglichkeit |Vorgehen |Namensauflösung wird wann durchgeführt?
|1. |Sie geben _keine_ IP-Adresse an. Der Host-Name muss per DNS auflösbar sein. |beim xref:wato#activate_changes[Aktivieren der Änderungen]
|2. |Sie geben eine IPv4-Adresse ein -- in der üblichen Punkt-Notation. |nie
|3. |Sie geben anstelle einer IP-Adresse einen alternativen Hostnamen ein, welcher per DNS auflösbar ist. |beim Ausführen der Checks
|4. |Über den xref:wato_rules#[Regelsatz] [.guihint]#Hosts with dynamic DNS lookup during monitoring# bestimmen Sie Hosts für ein dynamisches DNS. Das Resultat ist analog zu 3, nur dass für die DNS-Anfrage jetzt das Feld [.guihint]#Hostname# verwendet wird. |beim Ausführen der Checks
|===

Bei der ersten Möglichkeit verwendet {CMK} eine Cache-Datei, um wiederholte DNS-Anfragen während der Aktivierung der Änderungen zu vermeiden.
Dieser Cache ist sehr wichtig für die Beschleunigung des Vorgangs.
Außerdem sorgt er dafür, dass Sie eine geänderte Konfiguration auch dann aktivieren können, wenn das DNS einmal nicht funktioniert.

Der Haken ist, dass {CMK} die Änderung einer IP-Adresse im DNS nicht sofort mitbekommt.
Deswegen gibt es in den Eigenschaften des Hosts (auf der Seite [.guihint]#Properties of host#) den Menüeintrag [.guihint]#Hosts > Update DNS cache#, welcher den kompletten DNS-Cache löscht und beim nächsten Aktivieren der Änderungen eine neue Auflösung erzwingt.
Diese Datei liegt übrigens in Ihrer Instanz unter `~/var/check_mk/ipaddresses.cache`.
Das Löschen dieser Datei hat den gleichen Effekt wie die Ausführung von [.guihint]#Update DNS cache#.

{CMK} unterstützt auch Monitoring via IPv6 -- auch im Dualstack.
Die Rangfolge der Auflösung ist hier durch die Betriebssystemeinstellungen (`/etc/gai.conf`) vorgegeben.
In den Feldern [.guihint]#Additional IPv4 addresses# respektive [.guihint]#Additional IPv6 addresses# sind nur IP-Adressen in Punkt- beziehungsweise Doppelpunkt-Notation zugelassen, keine alternativen DNS-Namen.


=== Monitoring-Agenten

// MFS: Attribute verschieben…
// Die letzten wichtigen Einstellungen finden Sie in den Kästen [.guihint]#Monitoring agents# und [.guihint]#Custom attributes:#

// MFS: FIXME, kompakter
image::hosts_new_host_3.png[alt="Dialog mit Eigenschaften eines Hosts: Monitoring-Agenten und benutzerdefinierte Attribute."]

// Die zuletzt genannten benutzerdefinierten Attribute können Sie beliebig erweitern und dazu verwenden, über xref:wato_rules#[Regeln] sehr effizient alle Parameter von Hosts und Services zu konfigurieren.
// [.guihint]#Criticality# und [.guihint]#Networking Segment# sind lediglich Beispiele.

Essentiell für die Funktion ist die Angabe eines Monitoring-Agenten unter [.guihint]#Monitoring agents,# da dieser bestimmt, wie der Host seine Daten an das Monitoring übermittelt.

Folgende xref:wato_monitoringagents#[Monitoring-Agenten] sind möglich:

[cols="30,~"]
|===
|[.guihint]#{CMK} agent / API integrations# |Der Host soll über den xref:wato_monitoringagents#agents[{CMK}-Agenten] überwacht werden (welcher dazu natürlich installiert sein muss). Auch im Falle von xref:datasource_programs#specialagents[Datenquellen und Spezialagenten], wie z.B. beim xref:monitoring_vmware#[VMware ESXi-Monitoring],   wählen Sie diese Einstellung.
|[.guihint]#SNMP# |Der Host soll über xref:snmp#[SNMP] überwacht werden. Diese Auswahl lässt unterhalb von [.guihint]#SNMP# das Feld [.guihint]#SNMP credentials# auftauchen, mit dem Sie die SNMP-Community festlegen können. Da diese meist für viele Hosts gleich ist, empfiehlt es sich aber eher, diese Einstellung im Ordner zu hinterlegen. Wenn Sie gar nichts spezifizieren, wird automatisch `public` angenommen.
|[.guihint]#Piggyback# |Es werden xref:piggyback#[Piggyback-Daten] anderer Hosts verwendet und als Agentenausgabe diesem Host zugeordnet.
|[.guihint]#No API integrations, no {CMK} agent# |Ein solcher Host wird agentenlos und nur mit xref:active_checks#[aktiven Checks] überwacht. Regeln dafür finden Sie u.a. in [.guihint]#Setup > Hosts > HTTP, TCP, Email, ...#. Wenn Sie nicht mindestens einen aktiven Check definieren, so erzeugt {CMK} automatisch einen PING-Service. Diese Einstellung finden Sie als Option unter [.guihint]#{CMK} agent / API integrations.#
|===

In vielen Fällen werden Sie Kombinationen verschiedener Monitoring-Agenten verwenden.
Beim erwähnten VMware ESXi-Monitoring ist meist die gemeinsame Nutzung des Spezialagenten zusammen mit einem {CMK}-Agenten innerhalb virtueller Maschinen sinnvoll.
Im Falle von Servern mit Hardware-RAID-Controllern können Sie häufig die Herstellersoftware per SNMP überwachen und alle weiteren Dienste mit dem regulären {CMK}-Agenten.


// [#labels]
// === Labels
//
// Labels jetzt im Strukturartikel - Kapitel nur der Übersicht halber vorläufig beibehalten.


=== Speichern und weiter

Beim Erstellen oder Klonen eines Hosts ist nach der Festlegung der Eigenschaften der nächste sinnvolle Schritt [.guihint]#Save & go to service configuration.#
Damit gelangen Sie in die automatische Service-Erkennung, der wir uns im nächsten Kapitel widmen wollen.

Dagegen bringt Sie [.guihint]#Save & go to connection tests# zum Verbindungstest, mit dem Sie zuerst einmal testen können, ob Sie mit den festgelegten Einstellungen überhaupt Daten von  dem Host - sei es per Agent oder was auch immer Sie vorher konfiguriert haben - bekommen.
Einzelheiten zum Verbindungstest finden Sie im xref:wato_monitoringagents#diagnosticpage[Artikel über die Monitoring-Agenten].

[#bulk_operations]
=== Bulk-Aktionen

Gelegentlich kommt es vor, dass Sie Dinge wie Löschen, Verschieben, Editieren oder Service-Erkennung für eine ganze Reihe von Hosts gleichzeitig
durchführen möchten.
Dazu gibt es in {CMK} die sogenannten „Bulk-Aktionen“.

Sie finden diese Aktionen auf der Seite eines geöffneten Ordners im Menü [.guihint]#Hosts# im Abschnitt [.guihint]#On selected hosts#:

image::hosts_bulk_actions.png[alt="Menü 'Hosts' mit den Bulk-Aktionen.",width=40%]

Die Aktionen beziehen sich immer auf die Hosts, die direkt im angezeigten Ordner liegen -- und von Ihnen ausgewählt wurden. 
Dazu dienen die Checkboxen in der ersten Spalte der Host-Liste. 
Wenn Sie das Kreuz im Spaltentitel anklicken, werden alle Hosts ausgewählt -- und nach erneutem Klick wieder abgewählt.

Hier einige Hinweise zu den angebotenen Aktionen:

* [.guihint]#Delete hosts# - Löscht die Hosts -- nach Bestätigung der Nachfrage.

* [.guihint]#Edit attributes# - Ändert eines oder mehrere Attribute der Hosts.
Das Attribut wird dadurch in die Hosts explizit eingetragen.
+
*Achtung:* Es ist ein Unterschied, ob ein Host ein Attribut von einem Ordner erbt oder es explizit gesetzt ist, wie durch diese Aktion.
Warum? In letzterem Fall wird eine Änderung der Attribute im Ordner keine Wirkung haben, da Werte, die direkt beim Host festgelegt sind, immer Vorrang haben. Aus diesem Grund gibt es auch die folgende Aktion.

* [.guihint]#Remove explicit attribute settings# - Entfernt von den Hosts explizite Attribute und setzt die Vererbung wieder in Kraft.
Das Gleiche würden Sie erreichen, wenn Sie jeden Host einzeln auswählen und die Checkboxen bei den betroffenen Attributen abwählen würden.
+
Generell ist es eine gute Idee, so wenig explizite Attribute wie möglich zu verwenden.
Wenn alles korrekt über die Ordner vererbt wird, vermeidet das Fehler und ermöglicht das bequeme Aufnehmen von neuen Hosts.

* [.guihint]#Discover services# - xref:wato_services#bulk_discovery[Service-Erkennung für viele Hosts] gleichzeitig durchführen.

* [.guihint]#Detect network parent hosts# - xref:parents_scan[Parents per Scan] anlegen lassen.

* [.guihint]#Move to other folder# - Verschiebt die Hosts in einen anderen Ordner. Nach Auswahl dieses Eintrags werden Ihnen die bestehenden Ordner als mögliche Ziele angeboten.