// -*- coding: utf-8 -*-
include::global_attr.adoc[]
= Host-Merkmale
:revdate: draft
:title: Host-Merkmale
:description: Mit Host-Merkmalen (host tags), Merkmalsgruppen und Hilfsmerkmalen können Sie Ordner und Hosts nach Ihren Wünschen und Kriterien strukturieren.

{related-start}
xref:hosts_setup#[Verwaltung der Hosts]
xref:hosts_structure#[Strukturierung der Hosts]
{related-end}


[#intro]
== Einleitung

Host-Merkmale (englisch: _host tags_) sind Schlagworte, die Hosts zugeordnet werden können, um diese zu strukturieren und zu organisieren, etwa nach Wichtigkeit, IP-Adressfamilie oder nach dem Weg, auf dem der Host seine Daten erhält.
So werden Host-Merkmale über die xref:hosts_structure#folder[Ordnerstruktur] in {CMK} vererbt und können als Bedingung in einer xref:glossar#rule[Regel] ausgewählt werden, um Hosts gezielt anzusprechen.

Host-Merkmale sind aber nicht nur bei in der Konfiguration, sondern auch im Monitoring nützlich.
Zum Beispiel gibt es in xref:views#filter_context[Tabellenansichten] einen Filter für Host-Merkmale und das xref:glossar#snapin[Snapin] [.guihint]#Virtual Host Tree# kann Ihre Ordner anhand der Merkmale in einem Baum anordnen.

Und auf der Kommandozeile können Sie bei vielen Befehlen mit der Syntax `@foo` alle Hosts mit dem Merkmal `foo` auswählen.

Damit alles richtig Sinn ergibt, sollten Sie Ihr eigenes Schema für Host-Merkmale einrichten, welches für Ihre Umgebung optimal passt und mit den anderen Möglichkeiten der xref:hosts_structure#[Strukturierung von Hosts] zusammenpasst.
Nachträgliche Änderungen einmal eingerichteter Host-Merkmale sind möglich, sollten aber vermieden werden -- da die xref:rename_tag_id[Änderung der ID] eines Merkmals in den meisten Fällen manuelle Nacharbeit erfordert.

Aber bevor wir Ihnen zeigen, wie Sie im [.guihint]#Setup# eigene Host-Merkmale definieren können, klären wir zunächst einige Begriffe.


[#host_tag_group]
=== Host-Merkmalsgruppen

Host-Merkmale sind in Gruppen organisiert, den sogenannten Host-Merkmalsgruppen (englisch: _host tag groups_).
Von diesen Merkmalsgruppen gibt es zwei verschiedene Sorten.
Diese Unterscheidung ist für den gesamten Aufbau Ihrer Host-Merkmale sehr wichtig.
Es gibt Merkmalsgruppen, die mehrere Merkmale enthalten und es gibt Merkmalsgruppen, die nur *ein einziges* Merkmal enthalten: die _Checkbox-Merkmale._


==== Gruppen mit mehreren Merkmalen

Ein gutes Beispiel für eine solche Host-Merkmalsgruppe ist z.B. _Datacenter_ mit den möglichen Merkmalen _Datacenter 1_ und _Datacenter 2._
Damit wäre dann jeder Host genau einem der beiden Rechenzentren zugeordnet.
Möchten Sie Hosts anlegen, die in keinem der beiden Rechenzentren stehen, so brauchen Sie eine dritte Auswahlmöglichkeit, z.B. _Not in a datacenter._

*Jeder* Host in {CMK} erhält aus dieser Merkmalsgruppe *genau ein* Merkmal.
Daher ist die Festlegung des Standardwerts wichtig.
Der Standardwert wird gesetzt, wenn einem Host ein Merkmal aus der Gruppe _nicht_ explizit zugewiesen wird.
Bei der xref:create_tag_group[Erstellung einer Merkmalsgruppe] ist das erste Merkmal in der Liste der Standardwert.
Für das Beispiel _Datacenter_ ist das Merkmal _Not in a datacenter_ wahrscheinlich der geeignete Standardwert.

Manche Anwender haben versucht, die Anwendung, die auf einem Host läuft, in einer Merkmalsgruppe abzubilden.
Die Gruppe hieß z.B. _Application_ und hatte die Ausprägungen _Oracle_, _SAP_, _MS Exchange_, usw.
Das geht so lange gut, bis der Tag kommt, an dem ein Host _zwei_ Anwendungen hat -- und der kommt sicher!

Die richtige Lösung, um Anwendungen Hosts zuzuordnen, ist eine andere:
Erzeugen Sie _pro_ Anwendung eine eigene Merkmalsgruppe, die nur zwei Möglichkeiten (sprich: Merkmale) anbietet: _Ja_ oder _Nein._ 
Und wenn Sie auf ein Merkmal wie _Nein_ gänzlich verzichten können und ein Merkmal einfach nur aktivieren oder deaktivieren möchten, dann nützen Sie einfach die Checkbox-Merkmale in {CMK}.


[#checkbox_tag]
==== Checkbox-Merkmale

{CMK} erlaubt es Ihnen nämlich, Merkmalsgruppen mit nur einem einzigen Merkmal anzulegen, die sogenannten Checkbox-Merkmale (englisch: _checkbox tags_).
Für das obige Beispiel einer Anwendung können Sie dann eine Merkmalsgruppe _Oracle_ mit dem einzigen Merkmal _Ja_ erzeugen -- d.h. das _Nein_ können Sie sich sparen.
Ein Checkbox-Merkmal wird in den Host-Eigenschaften nicht als Liste, sondern als eben eine Checkbox dargestellt.
Ein Ankreuzen der Checkbox setzt das Merkmal, andernfalls entfällt das Merkmal.
Im Gegensatz zu den Merkmalsgruppen mit mehreren Merkmalen, bei denen immer genau ein Merkmal gesetzt bzw. aktiviert ist, verbleiben Checkbox-Merkmale standardmäßig deaktiviert.


[#topic]
=== Themen

Damit das Ganze nicht unübersichtlich wird, wenn Sie sehr viele Host-Merkmalsgruppen haben (z.B. weil Sie sehr viele verschiedene Anwendungen abbilden), können Sie die Merkmalsgruppen zu Themen (englisch: _topics_) zusammenfassen.
Alle Merkmalsgruppen des gleichen Themas

* werden in den Host-Eigenschaften in einem eigenen Kasten zusammengefasst und
* zeigen bei den Bedingungen einer Regel den Namen des Themas vor dem der Merkmalsgruppe, z.B. _Anwendungen / Oracle._

Die Themen haben also „nur“ eine optische Funktion und keine Auswirkung auf die eigentliche Konfiguration.


[#aux_tag]
===  Hilfsmerkmale

Hilfsmerkmale (englisch: _auxiliary tags_) lösen folgendes Problem:
Stellen Sie sich vor, dass Sie eine Host-Merkmalsgruppe _Betriebssystem_ definieren, mit den Ausprägungen _Linux_, _AIX_, _Windows 2016_ und _Windows 2019_.
Nun möchten Sie eine Regel definieren, welche für alle Windows-Hosts gelten soll.

Eine Möglichkeit ist es, ein Hilfsmerkmal namens _Windows_ zu definieren.
Ordnen Sie den beiden Merkmalen _Windows 2016_ und _Windows 2019_ dieses Hilfsmerkmal zu.
Ein Host, der eines der beiden Merkmale hat, erhält dann von {CMK} _automatisch_ immer auch das Hilfsmerkmal _Windows._
In den Regeln erscheint _Windows_ als eigenes Merkmal für die Formulierung von Bedingungen.

Diese Lösung hat den großen Vorteil, dass sie sich zu einem späteren Zeitpunkt sehr leicht um neue Versionen von Windows erweitern lässt.
Sobald dann im Jahr 2030 Windows 3.0 erscheint, legen Sie einfach ein neues Merkmal _Windows 3.0_ an und ordnen diesem ebenfalls das Hilfsmerkmal _Windows_ zu.
Alle bestehenden Regeln, die dieses Hilfsmerkmal verwenden, gelten dann automatisch auch für die Hosts mit dem neuen Merkmal.
So ersparen Sie sich jede einzelne Regel prüfen und bearbeiten zu müssen.


[#predefined_tags]
== Vordefinierte Merkmalsgruppen

Den Einstieg in die Konfiguration der Host-Merkmale finden Sie über [.guihint]#Setup > Hosts > Tags:#

[#hosttags_tags_default]
.In einem frisch aufgesetzten System werden nur die vordefinierten Merkmalsgruppen und Hilfsmerkmale aufgelistet
image::hosttags_tags_default.png[alt="Liste aller vordefinierten Host-Merkmalsgruppen."]

{CMK} richtet bei der Installation mehrere Host-Merkmalsgruppen ein:

[cols="25,25,25,~",options="header"]
|===
|ID
|Titel
|Merkmale
|Zweck
|`criticality`
|Criticality
|Productive system (ID: `prod`), Business critical (ID: `critical`), Test system (ID: `test`), Do not monitor this host (ID: `offline`)
|Wichtigkeit des Systems. Für das Merkmal `offline` wird die Regel [.guihint]#Hosts to be monitored# mit ausgeliefert, welche die Überwachung des Hosts abschaltet. Die anderen Merkmale sind nur Beispiele und ohne Funktion. Sie können diese aber Hosts zuweisen und dann in Regeln verwenden.
|`networking`
|Networking Segment
|Local network (low latency) (ID: `lan`), WAN (high latency) (ID: `wan`), DMZ (low latency, secure access) (ID: `dmz`)
|Verstehen Sie diese Merkmalsgruppe nur als Beispiel. Für das Merkmal `wan` ist die Beispielregel [.guihint]#PING and host check parameters# hinterlegt, welche die Schwellwerte für PING-Antwortzeiten an die längeren Laufzeiten im WAN anpasst.
|`agent`
|Checkmk agent / API integrations
|API integrations if configured, else Checkmk agent (ID: `cmk-agent`), Configured API integrations and Checkmk agent (ID: `all-agents`), Configured API integrations, no Checkmk agent (ID: `special-agents`), No API integrations, no Checkmk agent (ID: `no-agent`)
|Legt fest, auf welche Art die Daten vom Host geholt werden.
|`piggyback`
|Piggyback
|Use piggyback data from other hosts if present (ID: `auto-piggyback`), Always use and expect piggyback data (ID: `piggyback`), Never use piggyback data (ID: `no-piggyback`)
|Dieses Merkmal legt fest, ob und wie xref:glossar#piggyback[Piggyback-Daten] für den Host erwartet/verarbeitet werden.
|`snmp_ds`
|SNMP
|No SNMP (ID: `no-snmp`), SNMP v2 or v3 (ID: `snmp-v2`), SNMP v1 (ID: `snmp-v1`)
|Hier wird bestimmt, ob Daten (auch) per SNMP eingesammelt werden sollen.
|`address_family`
|IP address family
|IPv4 only (ID: `ip-v4-only`), IPv6 only (ID: `ip-v6-only`), IPv4/IPv6 dual-stack (ID: `ip-v4v6`), No IP (ID: `no-ip`)
|Legt fest, ob der Host per IPv4 oder IPv6 oder beidem überwacht werden soll.
„No IP“ ist relevant für Hosts, die über einen xref:glossar#special_agent[Spezialagenten] abgefragt werden.
|===

Sie können vordefinierte Merkmalsgruppen (englisch: _predefined tag groups_) anpassen, solange diese nicht als _builtin_ markiert sind (in der Spalte [.guihint]#Actions#).
Die _eingebauten_ Merkmalsgruppen werden intern von {CMK} bei der Konfigurationserzeugung benötigt und sind daher nicht änderbar.
Dagegen sind Änderungen in [.guihint]#Criticality# oder [.guihint]#Network Segment# unkritisch.
Diese sind nur als Beispiel vorgesehen.


[#create_tag_group]
== Merkmalsgruppen erstellen

Sie starten die Erstellung von eigenen Host-Merkmalen auf der Seite [.guihint]#xref:hosttags_tags_default[Tag groups]#, die Sie wieder über [.guihint]#Setup > Hosts > Tags# erreichen.

Bevor Sie Host-Merkmale erstellen können, müssen Sie zunächst die Host-Merkmalsgruppe anlegen, die die Merkmale enthalten soll.
Das Anlegen einer neuen Merkmalsgruppe erfolgt mit dem Knopf icon:icon_new[alt="Symbol zum Anlegen einer neuen Merkmalsgruppe."] [.guihint]#Add tag group# und bringt Sie zu folgenden Formularen:

.ID und Titel werden in den Grundeinstellungen der Merkmalsgruppe festgelegt
image::hosttags_group_basic_settings.png[alt="Grundeinstellungen einer Merkmalsgruppe."]

Die [.guihint]#Tag group ID# wird intern als ID für die Merkmalsgruppe verwendet.
Sie muss eindeutig sein und kann später nicht mehr geändert werden.
Es gelten die üblichen Regeln für erlaubte Zeichen (nur Buchstaben, Ziffern, Unterstrich).

Der [.guihint]#Title# wird überall in der GUI verwendet, wo es um die Merkmalsgruppe geht.
Da dies ein reiner Anzeigetext ist, kann er jederzeit geändert werden, ohne dass das einen Einfluss auf die bestehende Konfiguration hat.

Das [.guihint]#Topic# können Sie leer lassen.
Dann wird Ihre Merkmalsgruppe zusammen mit den mitgelieferten Gruppen [.guihint]#Criticality# und [.guihint]#Networking Segment# bei den Host-Eigenschaften im Kasten [.guihint]#Custom attributes# angezeigt.
Sie können aber auch eigene xref:topic[Themen] anlegen und damit Ihre Merkmalsgruppen übersichtlich zusammenfassen.

Am wichtigsten ist der nächste Kasten [.guihint]#Tag choices#, in dem Sie nacheinander alle Host-Merkmale für die neue Merkmalsgruppe festlegen:

.Auch jedes Host-Merkmal benötigt eine ID und einen Titel
image::hosttags_group_tag_choices.png[alt="Liste der zur Merkmalsgruppe gehörenden Host-Merkmale."]

Dabei muss die [.guihint]#Tag ID# eindeutig innerhalb der Gruppe sein.

Die Reihenfolge, welche Sie wie gewohnt mit dem Knopf icon:icon_drag[alt="Symbol zum Verschieben eines Listeneintrags."] ändern können, hat nicht nur eine optische Funktion:
*Das erste Merkmal in der Liste ist der Standardwert*!
Das bedeutet, dass _alle_ Hosts, die keine explizite Einstellung für diese Merkmalsgruppe haben, automatisch auf diesen Wert gesetzt werden.

Unter [.guihint]#Auxiliary tags# können Sie jedem Host-Merkmal Hilfsmerkmale zuordnen, die automatisch dem Host hinzugefügt werden sollen, wenn das Host-Merkmal gewählt ist.

Ein Checkbox-Merkmal erstellen Sie analog, indem Sie eine Merkmalsgruppe anlegen, die aber nur *ein* Merkmal enthält:

.Die Merkmalsgruppe eines Checkbox-Merkmals enthält genau einen Eintrag
image::hosttags_checkbox_tag.png[alt="Grundeinstellungen und Merkmalsdefinition für ein Checkbox-Merkmal."]

In den Eigenschaften des Hosts wird dieses Merkmal dann so angezeigt:

.Ein Checkbox-Merkmal ist standardmäßig deaktiviert
image::hosttags_checkbox_tag_in_host_prop.png[alt="Eigenschaften eines Hosts mit einem Checkbox-Merkmal."]


[#create_aux_tag]
== Hilfsmerkmale erstellen

Zusätzlich zu den vordefinierten Host-Merkmalsgruppen richtet {CMK} auch passende xref:aux_tag[Hilfsmerkmale] (englisch: _auxiliary tags_) ein, die auf der Seite [.guihint]#xref:hosttags_tags_default[Tag groups]# unter den Gruppen aufgelistet werden.

Neue Hilfsmerkmale können Sie mit icon:icon_aux_tag[alt="Symbol zum Anlegen von Hilfsmerkmalen."] [.guihint]#Add aux tag# erstellen.

.Die Grundeinstellungen eines Hilfsmerkmals sind fast identisch zu denen einer Merkmalsgruppe
image::hosttags_auxtag_basic_settings.png[alt="Die Einstellungen eines Hilfsmerkmals."]

Mit der unveränderlichen ID und einem aussagekräftigen Titel sind alle notwendigen Einstellungen eines Hilfsmerkmals gesetzt.
Die Zuordnung von Hilfsmerkmalen zu Host-Merkmalen erfolgt in den xref:create_tag_group[Merkmalsgruppen].


[#edit_delete_tag]
== Merkmalsgruppen und Merkmale ändern und löschen

Das Ändern der bestehenden Merkmalsgruppenkonfiguration mag auf den ersten Blick wie eine einfache Operation aussehen.
Das ist aber leider nicht immer so, da es größere Auswirkungen auf Ihre bestehende Konfiguration haben kann.

Änderungen, die lediglich die Anzeige betreffen oder nur neue Auswahlmöglichkeiten hinzufügen, sind unproblematisch und haben keine Auswirkung auf die bestehenden Hosts und Regeln:

* Änderung im Titel oder Thema von Merkmalen und Merkmalsgruppen
* Hinzufügen eines weiteren Merkmals zu einer Merkmalsgruppe

Alle anderen Änderungen können Auswirkungen auf bestehende Ordner, Hosts und Regeln haben, die die betroffenen Merkmale verwenden.
{CMK} verbietet dabei nicht einfach solche Änderungen, sondern versucht für Sie, Ihre bestehende Konfiguration so anzupassen, dass alles wieder Sinn ergibt.
Was das genau bedeutet, hängt von der Art der Operation ab.

*Tipp:* {CMK} kann Ihnen zeigen, in welchen Ordnern, Hosts und Regeln alle Host-Merkmale und alle Hilfsmerkmale gerade verwendet werden:
Wählen Sie dazu auf der Seite [.guihint]#xref:hosttags_tags_default[Tag groups]# den Menüeintrag [.guihint]#Tags > Tag usage.#


[#delete_tag_group]
=== Merkmalsgruppen löschen

Mit dem Löschen einer Merkmalsgruppe wird von allen Hosts die Information über die betroffenen Merkmale entfernt.
Falls die Merkmalsgruppe in vorhandenen Regeln als Bedingung verwendet wird, erhalten Sie folgende Warnung:

.Beim Löschen einer Merkmalsgruppe entscheiden Sie, wie die betroffenen Regeln angepasst werden
image::hosttags_delete_warn.png[alt="Warnung beim Löschen einer Merkmalsgruppe."]

Sie müssen sich hier entscheiden, ob Sie aus bestehenden Regeln die Bedingungen mit den betroffenen Host-Merkmalen, oder ob Sie die ganzen Regeln löschen möchten.
Beides kann sinnvoll sein und {CMK} kann nicht für Sie entscheiden, was hier besser ist.

Mit dem Knopf [.guihint]#Delete rules containing tags that have been removed, ...# entscheiden Sie sich für das Löschen von Regeln. 
Allerdings wird eine Regel nur dann gelöscht, wenn sie eine _positive_ Bedingung mit einem Merkmal aus der Merkmalsgruppe besitzt.
Regeln, die eine _negative_ Bedingung mit einem solchen Merkmal haben, verlieren einfach diese Bedingung, bleiben aber erhalten.
Wenn Sie z.B. eine Regel für alle Hosts erstellt haben, die *nicht* das Merkmal `dc02` haben und Sie entfernen das Merkmal `dc02` komplett aus der Konfiguration, dann ist augenscheinlich
auch diese Bedingung überflüssig.

Wenn Sie sich nicht sicher sind, sollten Sie die Regeln (die in der Warnung verlinkt sind) von Hand durchgehen und alle Bedingungen der betroffenen Merkmalsgruppe entfernen oder abändern.


[#delete_tag]
=== Merkmale löschen

Das Löschen eines Merkmals erreichen Sie durch Editieren der Gruppe, Entfernen des Merkmals und anschließendem Speichern.
Dabei kann es zu einer ähnlichen Warnung wie beim Entfernen einer Merkmalsgruppe kommen.

Hosts, die das betroffene Merkmal gesetzt hatten, werden automatisch auf den Standardwert gesetzt.
Dies ist, wie beim xref:create_tag_group[Erstellen einer Merkmalsgruppe] beschrieben, stets das erste Merkmal in der Liste.

Bei Regeln, die das zu löschende Merkmal als Bedingung erhalten, wird genauso verfahren, wie im vorherigen Abschnitt beim Löschen von Merkmalsgruppen beschrieben.


[#delete_aux_tag]
=== Hilfsmerkmale löschen

Sie können ein Hilfsmerkmal nur dann löschen, wenn es keinem Host-Merkmal zugewiesen ist.


[#rename_tag_id]
=== Merkmal-IDs umbenennen

Anders als bei den Merkmalsgruppen können Sie die IDs von Merkmalen tatsächlich nachträglich ändern.
Dies ist eine Ausnahme vom {CMK}-Prinzip, das IDs unveränderlich sind, wenn sie einmal vergeben wurden.
Diese Ausnahme kann aber nützlich sein, wenn Sie z.B. einen Datenimport von einem anderen System vorbereiten wollen, und dafür das vorhandene, unterschiedliche Merkmalschema in {CMK} anpassen müssen.

Um eine Merkmal-ID umzubenennen, editieren Sie die Merkmalsgruppe und ändern dort einfach die ID des Merkmals.

*Wichtig:* Verändern Sie dabei *nicht* den Titel des Merkmals.

Bevor {CMK} mit der Anpassung der Konfiguration zu Werke geht, werden Sie über die Konsequenzen aufgeklärt:

.Die Warnung zeigt Ihnen, wie {CMK} die Umbenennung der Merkmal-IDs durchführen wird
image::hosttags_rename_warn.png[alt="Warnung beim Umbenennen von von Merkmal-IDs."]

{CMK} wird nun alle betroffenen Ordner, Hosts und Regeln entsprechend anpassen.

Beachten Sie, dass es trotzdem noch Situationen geben kann, in denen Sie an anderen Stellen manuell nacharbeiten müssen.
So sind z.B. Merkmal-IDs Bestandteile von URLs, welche xref:glossar#view[Tabellenansichten] aufrufen, die nach Merkmalen filtern.
{CMK} kann diese URLs nicht für Sie anpassen.
Auch Filterkonfigurationen in xref:reporting#[Berichten] und xref:glossar#dashboard[Dashboards] können nicht automatisch angepasst werden.


[#tags_in_monitoring]
== Host-Merkmale im Monitoring anzeigen

Hosts werden in {CMK} in der Regel in Ordnern organisiert.
Die sich daraus ergebende Hierarchie können Sie als Baumansicht in der Seitenleiste am unteren Ende des xref:glossar#snapin[Snapins] [.guihint]#Tree of Folders# darstellen und von dort die Standardansicht für die pro Verzweigung gefilterten Hosts aufrufen.
// Das Snapin ergänzt diesen Baum noch um Filtermöglichkeiten für Themen und Optionen für unterschiedliche Ansichten.

Eine solche Baumansicht können Sie aber auch aus Host-Merkmalen erstellen und so eine „virtuelle“ Hierarchie abbilden -- und zwar mit dem Snapin [.guihint]#Virtual Host Tree#.
Neben den Host-Merkmalen dürfen Sie auch die Ordnerstruktur in derlei Bäume einbauen, wobei sowohl die Anzahl der virtuellen Bäume als auch der jeweiligen Verzweigungen unbeschränkt ist.

Angenommen, Sie verwenden für Ihre Hosts die drei Merkmalsgruppen _Criticality_, _Datacenter_ und _Operating systems._
Dann bekommen Sie auf der obersten Baumebene eine Auswahl nach System, darunter nach Rechenzentrum und letztlich nach Betriebssystem.
Jede Hierarchieebene bringt Sie direkt zur Ansicht aller Hosts mit eben diesen Merkmalen.

Zum Anlegen eines Virtual Host Tree fügen Sie zunächst das Snapin über den Knopf icon:button_sidebar_add_snapin[alt="Symbol zum Anzeigen aller Snapins."] unten in der Seitenleiste zu dieser hinzu:

.Beim ersten Aufruf des Snapins fehlt noch die Konfiguration
image::hosttags_snapin_virtual_host_tree_default.png[alt="Snapin Virtual Host Tree.",width=50%]

Klicken Sie auf den Link im Text, der auf die noch fehlende Konfiguration hinweist, oder rufen Sie manuell die Seite in den globalen Einstellungen über [.guihint]#Setup > General > Global
Settings > User interface > Virtual Host Trees# auf:

.Per Knopfdruck können Sie die Einstellungen zum Virtual Host Tree öffnen
image::hosttags_virtual_host_tree_new.png[alt="Der Standard in den globalen Einstellungen zum Virtual Host Tree."]

Erstellen Sie dann einen neuen Baum mit [.guihint]#Create new virtual host tree configuration:#

.Host-Merkmalsgruppen definieren die Ebenen des Baums
image::hosttags_virtual_host_tree_settings.png[alt="Festlegung der Baumstruktur in den globalen Einstellungen."]

Vergeben Sie zuerst ID und Titel des Baums.
Optional können Sie die Anzeige leerer Baumzweige durch Ankreuzen von [.guihint]#Exclude empty tag choices# ausschließen.
Anschließend fügen Sie über [.guihint]#Add new element# die gewünschten Merkmalsgruppen in der gewünschten Reihenfolge hinzu.
Über den Eintrag [.guihint]#Folder tree# können Sie auch die Ordnerhierarchie miteinbeziehen.
Die Reihenfolge für die Hierarchie können Sie wie üblich mit dem Knopf icon:icon_drag[alt="Symbol zum Verschieben eines Listeneintrags."] ändern.

Nach dem Speichern zeigt das Snapin die ausgewählte Hierarchie als Baumstruktur:

.Das konfigurierte Snapin zeigt nun 3 Ebenen von Merkmalsgruppen
image::hosttags_snapin_virtual_host_tree_configured.png[alt="Snapin Virtual Host Tree mit 3 Merkmalsgruppen.",width=50%]

Die Zweige und Blätter des Baums sind die Host-Merkmale aus den in der Konfiguration gewählten Merkmalsgruppen.
Die Nummern in Klammern bei den Blättern zeigen, wie viele Hosts diese Merkmale besitzen.
