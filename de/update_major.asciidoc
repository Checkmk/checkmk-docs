// -*- coding: utf-8 -*-
// IGNORE Alertmanager p16 p20 p22 p23 p7
include::global_attr.adoc[]
= Update auf Version {v22}
:revdate: 2023-08-24
:title: Update auf Version {v22}
:description: Was es beim Update von {CMK} Version 2.1.0 auf 2.2.0 zu beachten gibt, erfahren Sie in diesem Artikel.

{related-start}
xref:update#[Updates und Upgrades]
xref:install_packages#[Grundsätzliches zur Installation von {CMK}]
{related-end}


[#intro]
== Einleitung

In diesem Artikel finden Sie die wichtigsten Themen, die für das Update Ihrer {CMK}-Version {v21} auf {v22} relevant sind.

Wir empfehlen Ihnen, vor dem Update den kompletten Artikel durchzulesen, damit Sie genau wissen, was auf Sie zukommt: vor, während und nach dem Update.


[#prep]
== Vorbereitungen

In diesem Kapitel erhalten Sie die Übersicht der Themen, um die Sie sich kümmern sollten, bevor Sie das Update durchführen.
Wahrscheinlich wird nicht jedes der Themen für Sie relevant sein:
Bei einem solchen können Sie intern einen Haken setzen und sich gleich das nächste Thema vornehmen.


[#backup]
=== Backup

Wie vor jedem Update einer produktiven Software sollten Sie auch vor dem von {CMK} die Aktualität Ihrer Backups prüfen.

*Betrifft Sie das?*
Ja.

*Was müssen Sie tun?*
Wenn Sie Ihre Backups automatisiert über [.guihint]#Setup > Maintenance > Backups# erstellen, prüfen Sie dort, ob die letzten Backup-Aufträge fehlerfrei durchgelaufen sind.

Weitere Informationen finden Sie in den Artikeln zu xref:backup#[Backups] und zum Thema xref:omd_basics#omd_backup_restore[Instanzen sichern und wiederherstellen.]


[#editions]
=== Auswahl der {CMK}-Edition

Die {CMK}-Editionsfamilie hat Zuwachs bekommen mit der brandneuen {CCE}.
Was diese zu bieten hat, können Sie im Artikel zur xref:cce#[{CE}] nachlesen.
Dafür heißt es Abschied nehmen von der {CFE}, die es in der {v22} nicht mehr gibt.

Die Möglichkeiten der {FE} leben aber weiter in der {CE}: das zeitlich begrenzte Ausprobieren und das dauerhafte Nutzen einer der kommerziellen Editionen in kleinem Rahmen.
Eine Änderung gibt es allerdings bei der Limitierung zur dauerhaften Nutzung:
Während Sie in der {FE} Edition bis zu 25 Hosts in einer xref:glossar#site[Instanz] überwachen können, sind es in der Cloud Edition 750 Services in einer Instanz.

*Betrifft Sie das?*
Falls Sie in der Version {v21} die {FE} nutzen, müssen Sie sich in der {v22} eine neue Edition suchen.
Eine Kurzvorstellung der {CMK}-Editionen finden Sie xref:intro_setup#editions[hier.]

*Was müssen Sie tun?*
Sollte in Ihrem Fall die Limitierung auf 25 Hosts der {FE} ausreichend gewesen sein, die 750 kostenlosen Services der {CE} aber nicht,
so können Sie entweder eine Subskription erwerben und das Upgrade auf eine der kommerziellen Editionen durchführen -- oder Sie entscheiden sich für das Downgrade auf die kostenlose {RE}.
Führen Sie das Upgrade oder das Downgrade der Edition _vor_ dem Update auf die Version {v22} durch.
Beachten Sie die dabei auch die Hinweise im Artikel zu xref:update#[Updates und Upgrades], insbesondere beim xref:update.html#down2cee[Downgrade auf die {RE}.]

Sollten Sie mit der neuen Grenze von 750 Services keine Probleme haben, dann bietet sich der Upgrade der {FE} auf die neue {CE} an,
so wie er xref:cfe2cce[weiter unten] beschrieben ist.


[#linux_versions]
=== Linux-Distributionsversionen

// Während der Beta-Phase wird der Großteil der von {v21} unterstützten Distributionen weiterhin unterstützt, um Tests in vorhandenen Systemumgebungen zu erleichtern.
In der {CMK} Version {v22} werden einige veraltete Distributionen nicht mehr unterstützt werden.

*Betrifft Sie das?*
Das betrifft Sie, wenn auf Ihrem {CMK}-Server eine der folgenden – in der {v21} noch unterstützten – Linux-Distributionen installiert ist:

* Debian 9 _Stretch_
* Ubuntu in Long Term Support (LTS) Versionen 16.04 _Xenial_ und 18.04 _Bionic_
* Ubuntu in Short Term Support (STS) Versionen 21.10 _Impish_ und 22.10 _Kinetic_
* SLES 12 SP3 und SP4
* SLES 15 ohne Service Pack

*Was müssen Sie tun?*
Führen Sie vor dem Update von {CMK} zuerst ein xref:release_upgrade#[Versions-Upgrade der Linux-Distribution] durch.
Achten Sie darauf, dass die Zielversion der Linux-Distribution von {CMK} {v21} *und* {v22} unterstützt wird.
Welche Linux-Distributionsversionen {CMK} unterstützt, erfahren Sie im xref:install_packages#supported_distributions[Artikel zur Installation] und auf der link:https://checkmk.com/de/download[Download-Seite^] nachdem Sie die {CMK}-Version und Ihre Linux-Distribution ausgewählt haben.


[#browser]
=== Browser-Unterstützung

{CMK} {v22} nutzt neue JavaScript-Funktionen, die in älteren Browsern nicht zur Verfügung stehen.
Welche Browser in welchen Versionen unterstützt werden, steht in den xref:release_notes#browser[Release notes.]
// Unterstützt werden Chromium ab Version 101, Firefox ab Version 102 und Safari ab Version 16.
// Internet Explorer und Edge/Trident werden nicht unterstützt.

*Betrifft Sie das?*
In der Regel werden Sie auf Desktop-Systemen automatische Updates auf die neueste Version aktiviert haben.

*Was müssen Sie tun?*
Prüfen Sie die verwendete Browser-Version und installieren Sie gegebenenfalls einen aktuelleren Browser.
Wenn Sie für die Anzeige von Dashboards _Single Board Computer_, _Smart TVs_ oder _Digital Signage_ Lösungen verwenden, auf deren Systembrowser Sie keinen Einfluss haben, testen Sie vor dem Update, ob benötigte Dashboards korrekt angezeigt werden.
Kontaktieren Sie gegebenenfalls den Hardware-Hersteller für Updates.


[#agentlinux]
=== Der Agent für Linux

In {CMK} {v22} unterstützt der xref:agent_linux#[Linux-Agent] nicht länger Python 2.6 für Plugins.

*Betrifft Sie das?*
Nur, wenn bei Ihnen sehr alte Linux-Systeme im Einsatz sind (Python 2.6 ist von Oktober 2008 und wurde ab Juli 2010 von Python 2.7 abgelöst) _und_ Sie auf diesen in Python geschriebene xref:glossar#agent_plugin[Agentenplugins] nutzen.

*Was müssen Sie tun?*
Identifizieren Sie die betroffenen Systeme und aktualisieren Sie die installierten Agenten auf die letzte verfügbare Patch-Version der {v21}.
Falls automatische Agenten-Updates konfiguriert sind, xref:automatic_agent_updates[deaktivieren Sie diese] vor dem Update der {CMK}-Instanz.
Sie können dann die einzelnen Komponenten Agentenskript, Plugins und lokale Checks – nach Kompatibilitätstests – manuell aktualisieren.


[#agentwindows]
=== Der Agent für Windows

In {CMK} {v22} unterstützt der xref:agent_windows#[Windows-Agent] nicht länger Windows 6.0 (Vista und Server 2008 R1).
Auf betroffenen Systemen kann der Agent von {v21} aber weiter genutzt werden.

*Betrifft Sie das?*
Nur, wenn bei Ihnen diese antiquierten Windows-Systeme (Support-Ende 11. April 2017 respektive 14. Januar 2020) noch im Einsatz sind.

*Was müssen Sie tun?*
Identifizieren Sie die betroffenen Systeme und aktualisieren Sie die installierten Agenten auf die letzte verfügbare Patch-Version der {v21}.
Falls automatische Agenten-Updates konfiguriert sind, xref:automatic_agent_updates[deaktivieren Sie diese] vor dem Update der {CMK}-Instanz.


[#bakery_plugins]
=== Alte Bakery Plugins
// https://checkmk.com/werk/14648 - Werk #14648: Pre 2.0 bakery plugins are no longer supported
// https://checkmk.com/werk/11401 - Werk #11401: New Bakery API

Bakery Plugins binden Funktionen in die Agentenpakete der xref:glossar#agent_bakery[Agentenbäckerei] (_Agent Bakery_) ein.
Mit link:https://checkmk.com/de/werk/14648[Werk #14648^] wird in der Version {v22} die Unterstützung für alte Bakery Plugins eingestellt.
Dabei handelt es sich um benutzerdefinierte Plugins, die in der Version {v16} und früher verwendet wurden, und noch nicht auf die in der {v20} eingeführte Bakery-API migriert wurden.

*Betrifft Sie das?*
Die Agentenbäckerei und damit auch die Bakery-API sind nur für Benutzer der kommerziellen Editionen relevant. +

Vor der Einführung der Bakery-API wurden die Bakery Plugins im Instanzverzeichnis unter `~/local/share/check_mk/agents/bakery/` abgelegt.
Um festzustellen, ob bei Ihnen alte Plugins vorhanden sind, können Sie hier nach der Zeichenkette `bakery_info[` suchen.
// TK: Suche nach bakery_info[ nicht getestet mangels alten Bakery Plugins

Seit der {v20} zeigt {CMK} außerdem beim Backen von Agentenpaketen mit alten Bakery Plugins eine Warnung an.
Diese können Sie sich auch nachträglich anzeigen lassen unter [.guihint]#Setup > Maintenance > Background jobs# im Abschnitt [.guihint]#Agent baking.#
Beim xref:cmk_commandline#bake_agents[Backen per Kommandozeile] mit `cmk -A` erfolgt die Warnung als Befehlsausgabe.

*Was müssen Sie tun?*
Migrieren Sie alte Bakery Plugins auf die Bakery-API.
Sie finden eine Einführung in die Nutzung der API im Artikel zur xref:bakery_api#[Bakery-API.] 


[#python]
=== Python 3.11

{CMK} {v22} aktualisiert Python von 3.10 auf 3.11.
Dies führt zu link:https://github.com/python/cpython/issues/66683[einer strengeren Interpretation^] xref:regexes#[regulärer Ausdrücke.]
link:https://www.regular-expressions.info/modifiers.html[Modifiers^] als „Inline Flags“ sind seit Python 3.6 als _deprecated_ markiert und führten bislang beim Test im Python-Prompt zu einer Warnung.
In Python 3.11 sind sie nur am Anfang eines regulären Ausdrucks zulässig.

*Betrifft Sie das?*
Es betrifft Sie mit hoher Wahrscheinlichkeit, wenn Sie den Modifier `(?i)` benutzen, um anzugeben, dass der nachfolgende reguläre Ausdruck ohne Berücksichtigung von Groß- und Kleinschreibung ausgewertet werden soll.
Da Checkmk aus Performance-Gründen an einigen Stellen mehrere reguläre Ausdrücke zu einem einzigen kombiniert, kann diese Änderung auch alleine betrachtet valide reguläre Ausdrücke (Modifier am Anfang) betreffen.

*Was müssen Sie tun?*
Identifizieren Sie _alle_ regulären Ausdrücke, welche Inline Flags nutzen.
Hierfür genügt es in der Regel, auf die Zeichenkette `(?` zu untersuchen, beispielsweise mit diesem Befehl:

[{shell}]
----
{c-omd} find etc/ -type f -exec grep -Hn '(?.)' {}  \;
----

Passen Sie die betroffenen regulären Ausdrücke an.
Da Modifier weiterhin gültig sind, wenn ihr Geltungsbereich angegeben wird, können Sie einen vorhandenen regulären Ausdruck

[{file}]
----
(?i)somestring
----

äquivalent umschreiben auf:

[{file}]
----
(?i:somestring)
----

// xref:regexes#testing[Testen] Sie die geänderten regulären Ausdrücke dann mit dem Prompt des Python-Interpreters.


[#user_id]
=== Ungültige Benutzernamen
// https://checkmk.com/werk/14393 - Werk #14393: Warn about User IDs that become incompatible in 2.2.0
// https://checkmk.com/werk/15182 - Werk #15182: Abort update if incompatible user IDs are found

Ab Version {v22} ist die Verwendung bestimmter Sonderzeichen in Benutzernamen nicht mehr zulässig.
Mit ungültigen Benutzernamen ist ein Update auf die {v22} nicht möglich, da `omd update` mit einem Fehler abbricht.

Benutzernamen in {CMK} dürfen nur Buchstaben (im Sinne der link:https://www.unicode.org/reports/tr44/[Unicode-Datenbank^]), Ziffern und die folgenden Sonderzeichen enthalten: Bindestrich (`-`), Unterstrich (`_`), Punkt (`.`), At-Zeichen (`@`) und Dollarzeichen (`$`).
Als erstes Zeichen erlaubt ist nur ein Buchstabe, eine Ziffer, ein Unterstrich oder ein Dollarzeichen.

*Betrifft Sie das?*
Beim Erstellen lokaler Benutzer über [.guihint]#Setup > Users# hat {CMK} schon seit längerem, d.h. bereits vor der Version {v16}, ungültige Benutzernamen abgelehnt.
Es sind also, wenn überhaupt, nur Benutzernamen aus externen Verbindungen wie LDAP betroffen.
Mit dem link:https://checkmk.com/de/werk/14393[Werk pass:q[#]14393^] warnt Sie {CMK} seit Version {v21}p20 bei ungültigen Benutzernamen 
-- zum einen bei der Ausführung von `omd update` und zum anderen in der Benutzerverwaltung, die Sie über [.guihint]#Setup > Users# aufrufen können.
Die Benutzernamen werden in der Spalte [.guihint]#ID# angezeigt und bei ungültigen Benutzernamen steht dort eine Warnung.

*Was müssen Sie tun?*
Ändern Sie alle gefundenen ungültigen Benutzernamen an der Quelle.


[#pwd_hash]
=== Unsichere Hashfunktionen für Passwörter
// https://checkmk.com/werk/14391 - Werk #14391: Require password change for old password hashes
// https://checkmk.com/werk/15183 - Werk #15183: Drop support for outdated password hashing schemes
// https://checkmk.com/werk/14389 - Werk #14389: Add cmk-passwd utility
// https://checkmk.com/werk/14390 - Werk #14390: Automatically update deprectated password hashes

Ab Version {v22} ist die Verwendung von unsicheren und veralteten Hashfunktionen für Passwörter nicht mehr erlaubt.
Dies betrifft die Hashfunktionen _DES-Crypt, MD5-Crypt, Apr MD5-Crypt_ und _SHA-256 Crypt._
Obwohl letztere für Passwörter immer noch als sicher gilt, sollen die Passwort-Hashes aller Benutzer auf die modernere _bcrypt_ Hashfunktion umgestellt werden. 

Ein lokaler Benutzer, dessen Passwort mit einer der genannten, veralteten Hashfunktionen umgewandelt wurde, kann sich in der Version {v22} nicht mehr anmelden.

*Betrifft Sie das?*
{CMK} warnt Sie seit Version {v21}p16 (siehe link:https://checkmk.com/de/werk/14391[Werk pass:q[#]14391^]), wenn unsichere Passwort-Hashes in der Datei `~/etc/htpasswd` des Instanzverzeichnisses gefunden wurden.
Bei der Ausführung von `omd update` wird eine Warnmeldung mit allen betroffenen (lokalen) Benutzernamen angezeigt.
Benutzer aus externen Verbindungen wie LDAP sind nicht betroffen.

In der {v21} wurde dann jeder betroffene Benutzer entweder nach der Anmeldung aufgefordert, ein neues Passwort zu wählen,
oder der Hash wurde automatisch bei der Anmeldung im Hintergrund aktualisiert.
Wenn sich ein Benutzer seitdem jedoch überhaupt nicht mehr angemeldet hat, ist es möglich, dass immer noch der veraltete Passwort-Hash verwendet wird.
Dieser Benutzer wird sich nach dem Update auf die Version {v22} nicht mehr anmelden können.

*Was müssen Sie tun?*
Um den Zugang für einen betroffenen Benutzer wiederherzustellen, müssen Sie dessen Passwort manuell zurücksetzen.
Ein neues Passwort vergeben Sie entweder in der Benutzerverwaltung über [.guihint]#Setup > Users# oder auf der xref:wato_user#change_passwd[Kommandozeile] mit dem Befehl `cmk-passwd <username>`.
Verwenden Sie für Passwortänderungen nur den Befehl `cmk-passwd` und nicht länger `htpasswd`, der aus der Apache-Installation kommt und ohne zusätzliche Optionen veraltete Passwort-Hashes erzeugen würde.


[#omd_update-apache-config]
=== Instanzbenutzer und System-Apache
// https://checkmk.com/werk/14281 - Werk #14281: Fix local privilege escalation from site users
// https://checkmk.com/werk/14293 - Werk #14293: Enforce use of new apache hooks before updating to 2.2

Jede Checkmk-Instanz stellt ihre HTTP-Dienste (GUI, APIs) über einen eigenen instanzspezifischen Apache-Prozess bereit.
Den globalen Zugriff auf diesen instanzspezifischen Apache stellt der System-Apache bereit, der je nach Systemkonfiguration die Ports 80 und 443 für externe Anfragen öffnet.

Um etwas über den instanzspezifischen Apache zu erfahren, liest der System-Apache eine vom Instanzbenutzer bereitgestellte Reverse-Proxy-Konfiguration.
Ein böswilliger Instanzbenutzer könnte nun den System-Apache dazu bringen, Code als Root-Benutzer auszuführen, da der System-Apache normalerweise zunächst mit Root-Rechten gestartet wird.

Um diese Sicherheitslücke zu schließen, müssen wir die System-Apache-Konfiguration vom Zugriff des Instanzbenutzers trennen.
Um die Erweiterung der Rechte zu beseitigen, muss für jede Instanz _einmal_ der Befehl `omd update-apache-config <sitename>` ausgeführt werden.

Im link:https://checkmk.com/de/werk/14281[Werk #14281^] erhalten Sie weitere, ausführliche Informationen zu diesem Thema und zusätzliche Hinweise, die auch die Ausführung des Befehls `omd update` betreffen, wenn mit diesem bestimmte Optionen geändert werden.

*Betrifft Sie das?* 
Seit der Version {v21}p7 werden Sie bei der Ausführung von `omd update` dazu aufgefordert, zusätzlich `omd update-apache-config <sitename>` auszuführen.
Falls Sie dies bereits bei einem Update der {v21} getan haben, ist beim Update auf die {v22} nichts weiter zu tun.
Aus der bisherigen dringenden Empfehlung wird nun eine Voraussetzung beim Update auf die {v22}.

*Was müssen Sie tun?*
Führen Sie als Root-Benutzer den Befehl `omd update-apache-config <sitename>` aus, wenn Sie bei der Ausführung von `omd update` dazu aufgefordert werden.


[#rest-api]
=== REST-API ersetzt Web-API
// https://checkmk.com/werk/13640 - Werk #13640: Deprecation of Web API
// https://checkmk.com/werk/14298 - Werk #14298: Remove Web API

Wie bereits in der {v21} angekündigt, ist die Web-API (auch HTTP-API genannt) in der {CMK}-Version {v22} entfernt worden.
Die Web-API wird durch die xref:rest_api#[REST-API] ersetzt.

*Betrifft Sie das?* Das betrifft Sie, falls Sie eigene Skripte geschrieben haben, die noch die Web-API nutzen.

*Was müssen Sie tun?* Migrieren Sie alle bestehenden Skripte, die die Web-API verwenden, auf die REST-API, bevor Sie auf die {CMK}-Version {v22} umsteigen.
Im xref:rest_api#rest-web-api[Artikel zur REST-API] finden Sie eine Übersicht, welche REST-API-Endpunkte die Web-API-Befehle ersetzen.


[#kubernetes]
=== Kubernetes-Monitoring
// https://checkmk.com/werk/13561 - Werk #13561: agent_kubernetes: deprecate special agent and associated checks

Den {CMK} {v20} Spezialagenten und die zugehörigen Check-Plugins für das Kubernetes-Monitoring gibt es nicht mehr in der {v22}.
Nutzen Sie stattdessen das in der Version {v21} von Grund auf neu geschriebene und stark verbesserte xref:monitoring_kubernetes#[Kubernetes-Monitoring.]


[#nsca]
=== NSCA
// https://checkmk.com/werk/13644 - Werk #13644: Deprecating NSCA as part of Checkmk

Wie bereits in der Version {v21} angekündigt, unterstützt {CMK} {v22} nicht mehr den Nagios Service Check Acceptor (NSCA).
NSCA ist ein Nagios Add-on, um Ergebnisse passiver xref:monitoring_basics#checks[Checks] von fernen Hosts in einer verteilten Nagios-Konfiguration zu erhalten.
Dieses veraltete Verfahren zum Aufbau eines xref:distributed_monitoring#[verteilten Monitorings] bietet gegenüber den {CMK}-eigenen Verfahren keine Vorteile.
Details und Hinweise zum Ersatz finden Sie im link:https://checkmk.com/de/werk/13644[Werk #13644.^]


[#local_files]
=== Nicht paketierte lokale Dateien

Mit lokalen Dateien können Sie die von {CMK} bereitgestellte Funktionalität anpassen und erweitern.
Diese Dateien befinden sich im lokalen Teil der Instanzverzeichnisstruktur, d.h. in `~/local`.
Lokale Dateien können bei einem Update Probleme bereiten, wenn sie nicht mehr zur neuen {CMK}-Version passen.

*Betrifft Sie das?*
Da es für {CMK} bei einem Update nicht möglich ist, die Kompatibilität von lokalen Anpassungen vollständig sicherzustellen, sollten Sie Ihre {CMK}-Instanz vor einem Update daraufhin überprüfen, ob lokale Dateien bei Ihnen verwendet werden und gegebenenfalls welche.

*Was müssen Sie tun?*
Verschaffen Sie sich einen Überblick über nicht paketierte lokale Dateien Ihrer {CMK}-Instanz, indem Sie als Instanzbenutzer das folgende Kommando ausführen:

[{shell}]
----
{c-omd} mkp find
----

Werden hier Dateien aufgeführt, sollten Sie zusammen gehörende in xref:mkps#[Erweiterungspaketen (MKPs)] zusammenfassen.
Dies erleichtert später die Deaktivierung _en bloc_, sollten nach dem Update xref:incompatible_mkps[Inkompatibilitäten] festgestellt werden.


[#apis]
=== Programmierschnittstellen

In {CMK} {v22} wurden einige intern genutzte Programmierschnittstellen (APIs) umgebaut.

*Betrifft Sie das?*
Das Thema APIs _kann_ Sie betreffen, wenn Sie die mit {CMK} ausgelieferten um Ihre eigenen, selbst geschriebenen Checks erweitert haben und/oder wenn Sie Plugins aus anderen Quellen nutzen.
Da die neu strukturierten APIs als _intern_ gelten und auch für Plugins aus der link:https://exchange.checkmk.com[{CMK} Exchange^] nicht verfügbar sind,
// MFS: oder "...sein sollten..."
sollte die Zahl betroffener Erweiterungen gering sein. 

*Was müssen Sie tun?*
Überprüfen Sie Erweiterungen von Drittanbietern auf ihre Funktionsfähigkeit und nehmen Sie gegebenenfalls die notwendigen Anpassungen der Import-Pfade vor.

Betroffen sind:

* Aufsplittung von GUI-Imports bezüglich Datasource Programs und aktiven Checks in mehrere Dateien (link:https://checkmk.com/de/werk/14716[Werk pass:q[#]14716^]).
* Aufsplittung von GUI-Imports bezüglich der Verwendung des Passwortspeichers (_password store_) in mehrere Dateien (link:https://checkmk.com/de/werk/14719[Werk pass:q[#]14719^]).
* Umstrukturierung des GUI-Codes (link:https://checkmk.com/de/werk/15493[Werk pass:q[#]15493^]).
* Umstrukturierung der `ValueSpec`-Klasse (link:https://checkmk.com/de/werk/13094[Werk pass:q[#]13094^]).
* Änderung des Geltungsbereichs der `Transform`-Klasse (link:https://checkmk.com/de/werk/14821[Werk pass:q[#]14821^]).
* Feinere Granulierung des Zugriffs auf Rechte eingebauter Benutzer (link:https://checkmk.com/de/werk/14824[Werk pass:q[#]14824^]).
* Ende der Unterstützung des Dashlet-Konfigurationsformats von {CMK} vor Version {v16} (link:https://checkmk.com/de/werk/14297[Werk pass:q[#]14297^]).
* Ende der Unterstützung der alten Plugin-API für die HW/SW-Inventur (link:https://checkmk.com/de/werk/14084[Werk pass:q[#]14084^]).


// {v20} Thema - auch gültig für {v21}. In {v22} vorerst auskommentiert
////
[#check-api]
=== Die Check-API

In {CMK} {v20} wurde eine neue Check-API eingeführt, die die Check-Plugins neu strukturiert, um ihre Handhabung zu vereinheitlichen und zu vereinfachen.
Da es aber eine große Zahl von Checks gibt, die nach der alten, bis zur Version {v16} gültige Check-API programmiert wurden, kann es sein, dass die Migration von der alten auf die neue Check-API auch in der Version {v21} ein Thema für Sie ist.
Die große Zahl existierender Checks ist auch der Grund, warum die alte Check-API für eine Übergangszeit weiterhin unterstützt wird.

*Betrifft Sie das?* Das Thema Check-API _kann_ Sie betreffen, wenn Sie die mit {CMK} ausgelieferten um Ihre eigenen, selbst geschriebenen Checks erweitert haben und/oder wenn Sie Plugins aus anderen Quellen nutzen und diese z.B. von der link:https://exchange.checkmk.com/[{CMK} Exchange^] heruntergeladen haben.
Das Thema betrifft Sie, wenn eines, einige oder gar alle dieser Check-Plugins noch der alten Check-API folgen.
Die betroffenen Dateien finden Sie in den xref:local_files[lokalen Dateien] Ihrer Instanz.

*Was müssen Sie tun?* Wir versuchen Ihnen den Umstieg auf die neue Check-API so leicht und komfortabel wie möglich zu machen:

So wie beim Update auf die Version {v20} versucht {CMK} auch beim Update auf die Version {v21} alle lokalen Plugins aus den Verzeichnissen `~/local/share/check_mk/checks` und `~/local/share/check_mk/inventory` automatisch auf die neue Check-API zu migrieren.
Diese „Automigration“ passiert zur Laufzeit; die Plugin-Dateien werden nicht verändert.
Wie Sie sich nach dem Update die Ergebnisse anzeigen lassen können, erfahren Sie im Kapitel xref:automigration[Automigration auf die Check-API überprüfen].

Die Chancen stehen zwar gut, dass die Automigration Ihrer Check-Plugins reibungslos funktioniert, dennoch erfordert die ebenfalls in der Version {v20} durchgeführte Umstellung auf Python 3 möglicherweise einige Anpassungen.
Durch die neue Check-API und die Code-Basis Python 3 gibt es gleich zwei gute Gründe, Ihre selbst geschriebenen Check-Plugins zu überarbeiten.
Wir informieren Sie ausführlich über die notwendigen Schritte im link:https://blog.checkmk.com/de/migration-von-checkplugins-auf-checkmk-2.0[Blogpost zur Migration von Check-Plugins.^]

Zu guter Letzt punktet die neue Check-API mit verbesserter Dokumentation:
Es gibt einen einführenden Artikel zur xref:devel_check_plugins#[Programmierung eigener Check-Plugins] und die stets aktuelle Plugin-API-Referenzdokumentation.
Beides können Sie über die {CMK}-Oberfläche aufrufen -- im [.guihint]#Help#-Menü der Navigationsleiste unter [.guihint]#Developer resources.#
////


// MFS: Wir sollten relativ früh auf ein Mindest-Patchlevel für Updates verweisen – der Verweis auf p22 kann dann entfallen. Die Beispiele zeigen mittlerweile eh Output der p22.
[#incompatible_mkps]
=== Inkompatible und obsolete MKPs

Über die xref:glossar#mkp[{CMK}-Erweiterungspakete (MKPs)] lässt sich Ihr Monitoring-System recht einfach und bequem erweitern.
Auf der einen Seite kommt es dabei vor, dass solche MKPs nicht weiter gepflegt werden und dann ggf. mit neuen Versionen von {CMK} nicht mehr kompatibel sind.
Auf der anderen Seite nehmen wir immer wieder neue Plugins und Funktionserweiterungen in {CMK} auf, weshalb MKPs mitunter obsolet werden.
Ihre Funktionalität wird schlicht von {CMK} selbst sichergestellt.

*Betrifft Sie das?*
Falls Sie MKPs installiert haben, ist aus diesem Grund eine Prüfung dieser MKPs dringend geboten -- besonders vor einem umfangreichen Update.
So verhindern Sie, dass inkompatible Pakete das Update behindern oder im Anschluss an das Update doppelte oder zumindest sehr ähnliche Services entstehen.

*Was müssen Sie tun?*
Prüfen Sie hierzu Ihre installierten MKPs gegen unseren link:https://checkmk.com/de/integrations[Katalog der Check-Plugins^] und entfernen Sie Pakete, welche inzwischen nativ von {CMK} bereitgestellt werden.
Bei dieser Gelegenheit können Sie auch MKPs entfernen, die eventuell nur mal für einen Probelauf installiert worden sind.
Eine Auflistung finden Sie in den kommerziellen Editionen über [.guihint]#Setup > Maintenance > Extension packages.#
// MA: Hier würde ich der Einfachheit halber einen Screenshot erwarten.

Auf der Kommandozeile können Sie sich installierte Erweiterungen mit dem folgenden Befehl anzeigen lassen:

[{shell}]
----
{c-omd} mkp list
Name        Version Title         Req. Version Until Version Files State                          
----------- ------- ------------- ------------ ------------- ----- -------------------------------
my_cool_mkp 1.0.2   Best MKP ever 2.0.0        2.3.9p99      6     Enabled (active on this site)
hello_world 0.2.1   Hello world!  2.1.0        2.1.99        6     Enabled (active on this site)
----

Zu jedem gelistetem MKP können Sie dann in der Folge auch die Dateien anzeigen lassen, die zu dem Paket gehören:

[{shell}]
----
{c-omd} mkp list my_cool_mkp
/omd/sites/mysite/local/lib/check_mk/base/plugins/agent_based/check_mk.py
/omd/sites/mysite/local/share/check_mk/web/plugins/metrics/custom_metrics.py
----

Sollten Sie über die Prüfung der installierten MKPs und dem Abgleich mit unserem Katalog nicht alle Pakete zuordnen können, empfiehlt sich der hiernach beschriebene xref:dry_run[Probelauf des Updates,] um dabei Inkompatibilitäten zu identifizieren und dann in Ihrem produktiven Monitoring vor dem Update zu entfernen.

[#mkp_backport]
==== MKP-Verwaltung für verschiedene {CMK}-Versionen

Für die Erleichterung von Updates wurde mit {CMK} {v21}p22 die Möglichkeit eingeführt, MKPs in verschiedenen Versionen vorzuhalten.
Beim Update wird dann das Paket für {CMK} {v21} automatisch deaktiviert und das für {CMK} {v22} automatisch aktiviert.
Bei Nutzung eines verteilten Monitorings mit xref:glossar#distributed_setup[zentraler Konfiguration] können Sie mit diesem Feature von der Zentralinstanz aus Pakete in verschiedenen Versionen an die Remote-Instanzen xref:dist_setup[verteilen.]
Das klappt sogar, wenn die Remote-Instanzen eine höhere Version haben, wie es beim Update im verteilten Monitoring für eine Übergangszeit der Fall ist.

Beachten Sie, dass Sie dieses Feature nur nutzen können, wenn Sie als Ausgangsversion mindestens {v21}p22 verwenden!
Sind diese Voraussetzungen erfüllt, können Sie auf der Zentralinstanz zusätzlich Pakete für {v22} hinzufügen.

Bei der Installation eines für {CMK} {v22} geschriebenen MKPs erhalten Sie unter {CMK} {v21}p22 und höher eine Warnmeldung:

[{shell}]
----
{c-omd} mkp install /tmp/hello_world-0.2.2.mkp 
The package requires Check_MK version 2.2.0, but you have 2.1.0p22 installed.
----

Dieses Paket wird in der Liste der Pakete als [.guihint]#Enabled (inactive on this site)# aufgeführt:

[{shell}]
----
{c-omd} mkp list
Name        Version Title        Req. Version Until Version Files State                          
----------- ------- ------------ ------------ ------------- ----- -------------------------------
hello_world 0.2.2   Hello world! 2.2.0        2.2.99        6     Enabled (inactive on this site)
hello_world 0.2.1   Hello world! 2.1.0        2.1.99        6     Enabled (active on this site)
----

Details der überarbeiteten Paketverwaltung zeigt der xref:mkps#[Artikel zur Verwaltung von Erweiterungspaketen (MKPs)].


[#incompatible]
=== Inkompatible Änderungen

Wie in jeder {CMK} Version, so gibt es auch in der aktuellen Version {v22} Änderungen der Software, die Rückwirkungen auf ihre {CMK}-Installation haben _können_.
Eine sogenannte _inkompatible Änderung_ erfordert, dass Sie manuelle Anpassungen durchführen, um bestehende Funktionen weiterhin wie gewohnt ablaufen zu lassen und/oder neue Funktionen nutzen zu können.

*Betrifft Sie das?*
In aller Regel wird es inkompatible Änderungen geben, die auch Ihre {CMK}-Installation betreffen.
Eine generelle Aussage ist aber leider unmöglich.
In diesem Artikel haben wir diejenigen Themen zusammengetragen, die für alle oder die meisten {CMK}-Installationen zutreffen.
Es kann aber sein, dass es darüber hinaus weitere, für Sie relevante Änderungen gibt, zum Beispiel bei Checks, die Sie in Ihrer Installation verwenden.

*Was müssen Sie tun?*
Nachdem Sie das xref:update[Update] durchgeführt haben, werden Ihnen in der {CMK}-Oberfläche Anzahl und Inhalt der inkompatiblen Änderungen angezeigt, und Sie werden aufgefordert, diese zu prüfen und zur Kenntnis zu nehmen.
Also werden Sie auf jeden Fall mit diesem Thema konfrontiert werden -- allerdings erst, nachdem Sie das Update durchgeführt haben.

Es ist daher eine gute Idee, sich bereits *vor* dem Update einen Überblick über die inkompatiblen Änderungen zu verschaffen:
Öffnen Sie die Liste der link:https://checkmk.com/de/werks?search=&cmk_version$$[$$$$]$$=2.2&compatible=0[Werks.^]
(Die Software-Entwicklung von {CMK} ist in sogenannten Werks organisiert.)
In der Beschreibung eines Werks finden Sie Hinweise, was gegebenenfalls zu tun ist, um die Änderung kompatibel zu machen.

Die frustrierende Nachricht:
Die Werkliste einer Version ist sehr, sehr lang -- selbst wenn sie nur die inkompatiblen Änderungen enthält.
Die tröstliche Nachricht:
An der Anzahl der Änderungen können Sie sehen, wie groß unsere Anstrengungen sind, {CMK} für Sie zu verbessern.


[#update]
== Update

[#dry_run]
=== Best Practices beim Update

Im Folgenden beschreiben wir bewährte Vorgehensweisen (_best practices_), welche wir selbst bei Updates von großen {CMK}-Umgebungen befolgen.
Diese sind sicherlich nicht in jeder Umgebung Pflicht, Sie können Ihnen den Prozess des Updates jedoch erleichtern.

////
MFS: Bereits in den Vorbereitungen abgefrühstückt.
==== Betriebssystem aktualisieren

Das Betriebssystem auf einem {CMK}-Server sollte ohnehin immer auf dem aktuellen Stand sein.
Vor einem Update von {CMK} schadet es aber bestimmt nicht, sich dessen noch einmal zu versichern:
mithilfe von `apt` (für Debian und Ubuntu), `yum` und `dnf` (für Red Hat Enterprise Linux (RHEL) basierte Systeme) oder `zypper` (für SUSE Linux Enterprise Server).
////


==== {CMK}-Version aktualisieren
// https://checkmk.com/werk/13320 - Werk #13320: omd update: Add version compatibility barrier

Vor dem Update auf die Version {v22} muss auf der {CMK}-Instanz die Version {v21} installiert sein.

Wir haben bereits früher von einem Update mit Auslassung einer Hauptversion abgeraten, da es dazwischen einfach zu viele Änderungen gibt, die ein reibungsloses Update behindern und mit großer Wahrscheinlichkeit zu Problemen führen.
Mit der Version {v21} wurde aus dieser Empfehlung eine Voraussetzung -- und eine Sperre eingeführt, die zum Beispiel ein direktes Update von Version {v20} auf {v22} verhindert.

////
Ein Update auf die Version {v21} setzt zurzeit keine bestimmte {v20} Patch-Version voraus.
Es gibt jedoch auch hier gute Gründe, den Sprung auf die {v21} nur von der neuesten {v20} Patch-Version aus zu starten, da z.B. ein {v20} Patch Korrekturen enthalten kann, die das Update auf die Version {v21} erleichtern.
////

Das Update auf {v22} setzt zurzeit mindestens {v21}p23 voraus.
Es kann aber sein, dass in der Zukunft eine bestimmte {v22} Patch-Version eine höhere {v21} Patch-Version für das Update voraussetzt.
Generell empfehlen wir, zuerst {CMK} auf die neueste {v21} Patch-Version zu aktualisieren und erst dann das Update auf die {v22} durchzuführen.


==== Probelauf des Updates durchführen

In großen Umgebungen, in denen auch das Zurückspielen eines selbstverständlich vorhandenen Backups Ihrer {CMK}-Umgebung mit einem gewissen zeitlichen Aufwand verbunden wäre, empfiehlt es sich, vor dem Update der produktiven Umgebung, einen Test mit einer geklonten Instanz durchzuführen.
Zu diesem Zweck können Sie beispielsweise das letzte reguläre Backup Ihrer Instanz unter einem anderen Namen wiederherstellen.

[{shell}]
----
{c-root} omd restore newsite /path/to/backup
----

*Alternativ* können Sie Ihre Instanz auch per `omd cp` kopieren.
Dafür muss die Instanz allerdings kurzzeitig gestoppt werden:

[{shell}]
----
{c-root} omd stop mysite
{c-root} omd cp mysite newsite
----

Führen Sie das Update im Anschluss erst einmal auf dieser neuen geklonten Instanz durch, um hier beispielsweise die oben angesprochenen lokalen Änderungen in der neuen Umgebung zu prüfen.


[#automatic_agent_updates]
==== Agenten-Update vorübergehend abschalten

{cee-only}
Wenn Sie in den kommerziellen Editionen die automatischen Agenten-Updates verwenden, sollten Sie überlegen, diese vor dem Update von {CMK} vorübergehend zu deaktivieren, um den Wechsel auf die neuen Agenten bei den Hosts später kontrolliert vollziehen zu können.
Dazu wählen Sie zuerst [.guihint]#Setup > Agents > Windows, Linux, Solaris, AIX# und auf der folgenden Seite den Menüeintrag [.guihint]#Agents > Automatic updates.#
Durch Klick auf den Knopf icon:icon_edit[alt="Symbol zum Bearbeiten eines Listeneintrags."] vor dem [.guihint]#Master switch# können Sie das Agenten-Update komplett abschalten:

image::update_major_automatic_agent_updates.png[alt="Abschaltung des Agenten-Updates per Hauptschalter."]

Nach dem erfolgreichen Update von {CMK} können Sie das Agenten-Update auf gleichem Weg wieder anschalten.

Wir empfehlen an dieser Stelle das automatische Agenten-Update erstmal nur für einzelne Hosts oder Host-Gruppen wieder zu aktivieren.
Auf diese Weise wird der neue Agent nicht gleich auf all Ihre Server ausgerollt und Sie können sich auf einigen wenigen Systemen mit den neu angelieferten Daten vertraut machen.
Auch aufgrund der deutlich gestiegenen Zahl an mitgelieferten Check-Plugins könnten Sie eine ganze Reihe neuer Services finden, welche Sie dann auf den von Ihnen gewählten Testsystemen richtig einstellen können.
Eventuell sind für neue Services auch neue Schwellwerte vonnöten.
Wenn Sie dies erst einmal im Kleinen angehen, ersparen Sie sich so einige Fehlalarme.

Auf der oben angegebenen Seite können Sie dafür einfach ein paar Hosts oder Host-Gruppen in die entsprechenden Felder eintragen und dann den [.guihint]#Master switch# wieder aktivieren.

image::update_major_activate_update_on_selected_hosts.png[alt="Optionen beim Agenten-Update zur Aktivierung auf bestimmten Hosts."]

*Wichtig:* Denken Sie daran, diese Einschränkungen auf explizite Hosts und Host-Gruppen wieder zu entfernen, sobald Sie mit den Ergebnissen zufrieden sind.


[#notifications]
==== Benachrichtigungen vorübergehend abschalten

Sie sollten auch überlegen, xref:glossar#notification[Benachrichtigungen] in der Instanz vor dem Update abzuschalten -- aus ähnlichen Gründen, die wir im vorherigen Abschnitt zu den automatischen Agenten-Updates erklärt haben.
So vermeiden Sie, dass Ihre Kollegen aus dem Monitoring-Team _unnötige_ Benachrichtigungen erhalten.

Die Benachrichtigungen können Sie zentral im Snapin xref:user_interface#master_control[Master control] mit dem Schalter [.guihint]#Notifications# abschalten.

Es kann durchaus vorkommen, dass nach dem Update der eine oder andere Service {CRIT} ist, der dies vorher nicht gewesen ist.
Kümmern Sie sich nach dem Update zuerst um neu auftretende Probleme.
Die unbehandelten Probleme (_unhandled problems_) können Sie sich z.B. im Snapin xref:user_interface#overview[Overview] anzeigen lassen.

*Wichtig:* Vergessen Sie nicht, die Benachrichtigungen wieder einzuschalten, z.B. dann, wenn sich die Zahl der unbehandelten Probleme nach dem Update auf das Niveau vor dem Update eingepegelt hat.


[#update_distributed_monitoring]
=== Update im verteilten Monitoring

Es gibt zwei unterschiedliche Vorgehensweisen, um das Update aller in einem xref:distributed_monitoring#[verteilten Monitoring] beteiligten Instanzen durchzuführen:

* Alle Instanzen stoppen, das Update _en bloc_ durchführen und dann alle Instanzen wieder starten.
* Unter strengen Auflagen ist ein _Mischbetrieb_ für einen gewissen Zeitraum möglich, in dem zunächst die Remote-Instanzen aktualisiert werden und zum Schluss mit dem Update der Zentralinstanz wieder Versionsgleichstand hergestellt wird.

Insbesondere, wenn Sie die Aktualisierung im laufenden Betrieb anstreben, sollten Sie die Hinweise im allgemeinen Artikel zu xref:update#updatedistributed[Updates und Upgrades] lesen.

[#dist_setup]
==== MKPs im verteilten Setup

Falls Sie verteiltes Monitoring mit einer xref:glossar#distributed_setup[zentralen Konfiguration] betreiben, aus der auch xref:glossar#mkp[{CMK}-Erweiterungspakete (MKPs)] an die Remote-Instanzen verteilt werden, haben Sie die Möglichkeit, in der {CMK} {v21} Zentralinstanz Pakete für die Remote-Instanzen in Versionen für {v21} und {v22} vorzuhalten.
Es werden dann automatisch die zur Remote-Instanz passenden MKPs verteilt.

Um dieses Feature nutzen zu können, muss zunächst die Zentralinstanz auf Patch-Version {v21}p22 gebracht werden.
Ist dies geschehen, können Sie beginnen, auf der Zentralinstanz zusätzlich xref:mkp_backport[Pakete für {v22} hinzuzufügen.]
Wenn Sie nun Remote-Instanzen auf {v22} aktualisieren, erhalten und aktivieren diese dann automatisch das zur neuen Version passende Paket.


=== Das Update durchführen

Am eigentlichen Update der Software hat sich in der {CMK} {v22} nichts Grundlegendes geändert,
d.h. Sie installieren die neue Version, führen das Update der {CMK}-Instanz durch, kümmern sich um Konflikte (falls es denn welche geben sollte) und überprüfen und bestätigen die inkompatiblen Änderungen.

Führen Sie die Update-Prozedur so aus, wie sie im Artikel zu xref:update#detailed[Updates und Upgrades] beschrieben ist.


[#cfe2cce]
=== Upgrade auf die {CE}

Falls Sie in der Version {v21} die {FE} installiert haben, liegt es nahe, mit dem Update auf die {v22} auch das Upgrade auf die {CE} durchzuführen,
da Sie diese xref:editions[{CMK}-Edition] in der {v22} zeitlich begrenzt ausprobieren und in in kleinem Rahmen dauerhaft nutzen können.

*Hinweis:* Das hier beschriebene _direkte Crossgrade_ wird nur für den Wechsel von {v21} {FE} nach {v22} {CE} unterstützt.
In allen anderen Fällen führen Sie zuerst das Update von {CMK} und dann das Upgrade der Edition durch.
Bei verteilten Umgebungen ist hier wieder auf die xref:update#editiondistributed[Reihenfolge zu achten.]

. Laden Sie die {CE} auf der link:https://checkmk.com/de/download[Download-Seite^] herunter.
Für den Download benötigen Sie keine Zugangsdaten.

. Führen Sie das Update auf die Version {v22} so durch, wie es im Artikel zu xref:update#detailed[Updates und Upgrades] beschrieben ist. +
Dabei führen Sie gleichzeitig mit dem _Update_ auf die Version {v22} ein _Upgrade_ auf eine andere Edition durch, 
da es im konkreten Fall keine gemeinsame Version der {v21} {FE} und der {v22} {CE} gibt.
Daher müssen Sie bei der Ausführung von `omd update` eine zusätzliche Abfrage bestätigen:

+
image::update_major_omd_update_upgrade_confirmation.png[alt="Nachfrage beim Upgrade auf die {CE}.",width=40%]

+
Die letzten Zeilen der Ausgabe von `omd update` weisen Sie darauf hin, dass die {CE} ihr Leben im Lizenzstatus „Trial“ beginnt,
in dem Sie die {CE} 30 Tage ohne Einschränkung unverbindlich testen können:

+
[{shell}]
----
You are now starting your trial of Checkmk Cloud Edition.
If you are intending to use Checkmk to monitor more than 750 services after 30 days, you must purchase a license.
In case you already have a license, please enter your license credentials on the product's licensing page (Setup > Maintenance > Licensing > Edit settings).
Finished update.
----

. Starten Sie nach dem Upgrade auf die {CE} Ihre Instanz neu.
Der Anmeldedialog zeigt den Countdown für die verbleibende Zeit des Lizenzstatus „Trial“:

+
image::update_major_login_cce_trial.png[alt="{CMK}-Anmeldedialog für die {CE} im Lizenzstatus ’Trial’.",width=60%]

Die Eingabe eines Lizenzschlüssels nach spätestens 30 Tagen ist nur notwendig, falls Sie die {CE} ohne Beschränkungen einsetzen möchten.
Sofern Sie unterhalb der Grenze von 750 Services in einer Instanz bleiben, wechselt die {CE} nach 30 Tagen in den Lizenzstatus „Free“.
// TK: Die Kontrolle der Limits ist in der SW eingebaut. Noch nicht getestet.


[#follow-up]
== Nachbereitungen

[#gui]
=== Änderungen der Benutzeroberfläche

Die Benutzeroberfläche (GUI) von {CMK}, die mit Version {v20} komplett neu gestaltet wurde, hat sich auch in der {v22} nicht grundlegend verändert.
Die generellen Abläufe, die Sie aus der Version {v20} und {v21} kennen, können Sie auch in der {v22} unverändert anwenden.
Allerdings haben sich Menüs, Menüeinträge, Symbole und andere Details geändert, um neue Funktionen verfügbar zu machen -- und bestehende zu verbessern.

In den Artikeln dieses Handbuchs stellen wir Ihnen diese Änderungen vor - und im xref:intro_setup#[Leitfaden für Einsteiger] finden Sie eine ausführliche Einführung,
unter anderem in die wichtigsten Elemente der xref:intro_gui#[Benutzeroberfläche.]


[#favorites]
==== Die Favoriten wurden entfernt
// https://checkmk.com/de/werk/14727 - Werk #14727: Remove Favorites feature
// TK: Die Info kommt etwas spät, ist aber bei dieser nicht besonders wichtigen Änderung zu verschmerzen.

Die kaum bekannte, wenig genutzte und im Handbuch auch nicht beschriebene Möglichkeit, Hosts und Services als _Favoriten_ zu kennzeichnen wurde mit link:https://checkmk.com/de/werk/14727[Werk pass:q[#]14727^] entfernt.
// TK: Link zum Werk nur deshalb, weil da der Link zum Forum drin ist.
Favoriten konnten bis zur {v21} über den Menüeintrag [.guihint]#Commands > Favorites# gesetzt werden, d.h. im gleichen Menü, indem auch die Kommandos zur Quittierung von Problemen oder der Erstellung von Wartungszeiten zu finden sind.

Als Ersatz für den schnellen Zugriff auf wichtige Hosts und Services bieten sich die xref:user_interface.html#bookmarks[Bookmarks] an, die Sie z.B. in Ansichten setzen können, nachdem Sie sich die gezeigten Hosts oder Services zurechtgefiltert haben.
Eine Beschreibung dazu finden Sie im xref:intro_tools#views[Leitfaden für Einsteiger.]


////
[#automigration]
=== Automigration auf die Check-API überprüfen
// https://checkmk.com/werk/10601 - Werk #10601: Auto migration of check plugins to new section definitions

Sie können überprüfen, ob alle lokalen Plugins aus den Verzeichnissen `~/local/share/check_mk/checks` und `~/local/share/check_mk/inventory` automatisch auf die neue xref:check-api[Check-API] migriert werden können.

*Betrifft Sie das?*
Diese Überprüfung ist sinnvoll, wenn in Ihren lokalen Dateien Check-Plugins existieren, die nach der alten, bis zur Version {v16} gültigen Check-API programmiert wurden.

*Was müssen Sie tun?*
Führen Sie als Instanzbenutzer das folgende Kommando aus:

[{shell}]
----
{c-omd} cmk -R
Failed to auto-migrate legacy plugin to check plugin: mssql_counters
Please refer to Werk 10601 for more information.
----

Die Meldung oben zeigt, dass ein Plugin nicht automatisch migriert werden konnte.
Alle gelisteten Plugins müssen von Ihnen manuell migriert werden.
Es gibt einige Gründe, aus denen eine Automigration nicht durchgeführt werden kann und die Sie im genannten link:https://checkmk.com/de/werk/10601[Werk #10601^] nachlesen können.
Wie Sie die manuelle Migration durchführen, erfahren Sie im link:https://blog.checkmk.com/de/migration-von-checkplugins-auf-checkmk-2.0[Blogpost zur Migration von Check-Plugins.^]
////


[#service_discovery]
=== Services aktualisieren

Wie jede Hauptversion, so bringt auch {CMK} {v22} eine ganze Reihe neuer Check-Plugins mit sich.
Sollten Sie den xref:wato_services#discovery_check["Discovery Check"] nicht einsetzen, d.h. das automatische Update der Service-Konfiguration über die periodische Service-Erkennung, werden Sie auf einer ganzen Reihe von Hosts die Suche nach Services durchführen müssen.

Wenn Ihre Hosts entsprechend organisiert sind (z.B. in Ordnern), können Sie hierfür zumeist mit der Funktion [.guihint]#Bulk discovery# arbeiten.
Diese finden Sie unter [.guihint]#Setup > Hosts > Hosts# und dann im Menü [.guihint]#Hosts > Run bulk service discovery.#


[#service_descriptions]
==== Service-Beschreibungen
// MFS: Eigentlich wäre "Service-Namen" passender, es steht aber überall "Service Description" 

Jedes Update von {CMK} bedeutet, dass Service-Beschreibungen geändert werden, um die Konsistenz der Benennung innerhalb des Monitorings und der Dokumentation von {CMK} zu verbessern.
Da die Änderung von Service-Beschreibungen bedeutet, dass mitunter Regeln angepasst werden müssen und historische Monitoring-Daten verloren gehen, belässt {CMK} bei Updates zunächst die alten Beschreibungen.
Sie sollten bei Services, bei denen Verlust alter Monitoring-Daten zu verschmerzen und der Aufwand für die Anpassung von Regeln überschaubar ist, zeitnah auf neue Service-Beschreibungen umstellen.

Gehen Sie hierfür in [.guihint]#Setup > General > Global settings > Execution of checks# die Liste [.guihint]#Use new service descriptions# durch und identifizieren Sie die Services, bei denen die Checkboxen noch nicht aktiv sind und aktivieren Sie diese.
Nach Anwenden der Änderungen sind die neuen Service-Beschreibungen aktiv und es werden wenige Minuten vergehen, bis Sie wieder definierte Zustände der betroffenen Services im Monitoring sehen.


[#new_ports]
=== Ports

Seit {CMK} {v21} benötigen Hosts zur Durchführung der xref:wato_monitoringagents#agents[TLS-Registrierung] Zugriff auf folgende Ports des {CMK}-Servers: Port 443 (respektive 80) für REST-API-Anfragen und Port 8000 für den Agent Receiver.
Sprechen Sicherheitsrichtlinien dagegen, diese Ports verfügbar zu machen, können Sie bei Nutzung des xref:glossar#pull_mode[Pull-Modus] eine xref:agent_linux#proxyregister[Registrierung im Auftrag] direkt auf dem {CMK}-Server durchführen.

Um den in der {CMK} {v22} eingeführten xref:glossar#push_mode[Push-Modus] der {CE} nutzen zu können, muss Port 8000 des {CMK}-Servers vom überwachten Host aus erreichbar sein.


[#certificate_lifetime]
=== Agent Controller Zertifikatslaufzeit

{CMK} {v21} nutzte für den Aufbau der TLS-Verbindung Zertifikate mit de facto unbegrenzter Gültigkeit.
In {CMK} {v22} ist die Laufzeit der Zertifikate einstellbar und auf einen Standardwert von fünf Jahren gesetzt (siehe link:https://checkmk.com/de/werk/14964[Werk pass:q[#]14964^]).
Zudem kann eine eigene _Certificate Authority_ verwendet werden.
Vor dem Update auf {v22} erstellte Zertifikate werden automatisch nach Ablauf der maximalen Laufzeit durch neu generierte Zertifikate ausgetauscht.

Aktualisieren Sie daher {CMK} {v21} Agenten, welche den Agent Controller mit Verschlüsselung verwenden, zeitnah auf den {v22} Agenten.

In den wenigen Fällen, wo ein Update des Agenten nicht möglich ist – zum Beispiel, weil die Betriebssystemversion vom {v22} Agenten nicht mehr unterstützt wird –, müssen Sie betroffene Hosts nach Ablauf der Zertifikatslaufzeit manuell xref:agent_windows#registration[neu registrieren].
Dasselbe gilt, wenn Hosts mit dem {v22} Agenten längere Zeit inaktiv sind. 


[#remove_old_mkps]
=== Obsolete MKPs entfernen

*Betrifft Sie das?*
Dies betrifft Sie, wenn Sie von der Funktion Gebrauch gemacht haben, xref:mkp_backport[MKPs in verschiedenen Versionen] vorzuhalten.

*Was müssen Sie tun?*
Während des Updates werden inkompatible Pakete automatisch auf den Zustand [.guihint]#Disabled# gesetzt, aber nicht vollständig gelöscht.
Zur neuen {CMK}-Version kompatible Pakete werden automatisch aktiviert, Sie erhalten den Zustand [.guihint]#Enabled (active on this site)#.

[{shell}]
----
{c-omd} mkp list
Name        Version Title        Req. Version Until Version Files State                          
----------- ------- ------------ ------------ ------------- ----- -----------------------------
hello_world 0.2.1   Hello world! 2.1.0        2.1.99        6     Enabled (active on this site)
hello_world 0.2.0   Hello world! 2.0.0        2.0.99        6     Disabled
----

Wenn die Funktionalität der neuen Pakete sichergestellt ist und die alten nicht mehr als Referenz benötigt werden, können Sie nach veralteten Paketen suchen:

[{shell}]
----
{c-omd} mkp list | grep Disabled
----

Deinstallieren Sie diese dann mit `mkp remove`.

[{shell}]
----
{c-omd} mkp remove hello_world 0.2.0
----


[#outlook]
== Ausblick

In diesem Kapitel geht es um Themen, die nicht die aktuelle {CMK} Version {v22}, sondern eine der darauf folgenden Versionen betreffen.

[#mod_auth_mellon]
=== {CMK} ohne Apache-Modul mod_auth_mellon
// https://checkmk.com/werk/14977 - Werk #14977: SAML Apache configuration with mod_auth_mellon is deprecated

link:https://github.com/Uninett/mod_auth_mellon[mod_auth_mellon^] ist ein Software-Modul für Apache, das Dienste zur Authentifizierung (_authentication_) über Secure Assertion Markup Language (SAML) bereitstellt.
Bis zur {CMK} Version {v21} war die Anmeldung bei {CMK} über SAML nur mit der Hilfe von mod_auth_mellon möglich.
Ab der Version {v22} ist die SAML-Authentifizierung in den kommerziellen Editionen von {CMK} eingebaut und die Konfiguration erfolgt über die {CMK}-Benutzeroberfläche, wie es im Artikel zu xref:saml#saml_cee[SAML] beschrieben ist.
Auch die SAML-Authentifizierung per mod_auth_mellon wird in der Version {v22} noch unterstützt.

Das ändert sich jedoch ab der Version {v23}:
mod_auth_mellon wird dann nicht mehr mit der {CMK}-Software ausgeliefert werden.
Wenn Sie diesen Weg zur SAML-Authentifizierung ab der {v23} weiterhin nutzen wollen, müssen Sie mod_auth_mellon manuell installieren.
Allerdings gibt es von uns ab der Version {v23} keinen Support mehr für dieses Verfahren.


[#mk_file_config]
=== Keine Konfiguration von Check-Plugin-Standardwerten mit mk-Dateien
// https://checkmk.com/werk/15250 - Werk #15250: Deprecate configuration of check plugin default levels via .mk file

In der Version {v23} wird es nicht mehr möglich sein, Standardwerte von Check-Plugins oder andere globale Variablen mithilfe von mk-Dateien zu überschreiben.

Dieser veraltete Weg, Plugins zu konfigurieren, ist seit langem nicht mehr dokumentiert --
und funktioniert sowieso nicht mehr bei all jenen Plugins, die auf die in der {v20} eingeführte link:https://docs.checkmk.com/2.1.0/de/update_major.html#check-api[Check-API] umgestellt worden sind.
// TK: Da die Check-API im 2.2.0 update_major herausgefallen ist, stattdessen in die 2.1.0 gelinkt.
Daher wird die Konfiguration von Check-Plugin-Standardwerten mit mk-Dateien beginnend mit der Version {v23} nicht mehr unterstützt.

Details und Hinweise zur Umstellung finden Sie im link:https://checkmk.com/de/werk/15250[Werk #15250.^]


[#prometheus]
=== Prometheus-Checks Datenquelle und Einstellungen

Der xref:monitoring_prometheus#[Prometheus-Spezialagent] bietet `kube-state-metrics` als Datenquelle, dessen Checks nicht mehr aktiv unterstützt werden.
Diese wurden mittlerweile durch verbesserte Gegenstücke im Kubernetes-Agenten ersetzt (siehe link:https://checkmk.com/de/werk/14572[Werk pass:q[#]14572^]).
Zudem wird in den Regeln [.guihint]#Prometheus# und [.guihint]#Alertmanager# die Angabe von IP-Adresse/Host-Name, Port und Pfadpräfix durch ein einziges Eingabefeld [.guihint]#Custom URL# abgelöst (siehe link:https://checkmk.com/de/werk/14573[Werk pass:q[#]14573^]).

In beiden Fällen funktioniert das alte Verfahren weiterhin in {v22}.
Zur Verwendung in {v23} müssen Sie jedoch Ihre Konfiguration auf das neue Verfahren umgestellt haben.


////
// TK: In 2.2.0 durch Eintrag im Kapitel Programmierschnittstellen ersetzt.
[#hw_sw_inventory_plugin_api]
=== Die alte HW/SW-Inventur Plugin-API wird nicht mehr unterstützt
// https://checkmk.com/werk/14084 - Werk #14084: Deprecate old HW/SW inventory plugin API

Die Unterstützung der alten Plugin-API für die HW/SW-Inventur wird in der nächsten {CMK}-Version {v22} entfernt.

Die dieser API folgenden Plugins befinden sich im Instanzverzeichnis unter `~/share/check_mk/inventory` und (als lokale Dateien) unter `~/local/share/check_mk/inventory`.
Diese Plugins funktionieren in der Version {v21}, werden aber ab der Version {v22} ignoriert werden.

// TK: Diese benutzerdefinierten Plugins müssten doch alle in ~/local/share/check_mk/inventory liegen, oder?
// MA: Das neue Verzeichnis ist ~/local/lib/check_mk/base/plugins/agent_based/
Falls Sie benutzerdefinierte Plugins nutzen, migrieren Sie diese auf die neue Check-API bevor Sie auf die Version {v22} wechseln.
Im link:https://checkmk.com/de/werk/14084[Werk #14084^] finden Sie weitere Details und Informationen zur Migration.
////

