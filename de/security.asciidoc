// -*- coding: utf-8 -*-
include::global_attr.adoc[]
= Sicherheit (Security)
:revdate: draft
:title: Sicherheit (Security) - {CMK} zusätzlich absichern
:description: {CMK} ist bereits per Design sehr sicher. Mit welchen Maßnahmen Sie ihr Monitoring noch sicherer machen können, erfahren Sie in diesem Artikel.

{related-start}
link:omd_https.html[Weboberfläche mit HTTPS absichern]
link:agent_linux.html[Linux überwachen]
link:agent_windows.html[Windows überwachen]
link:ldap.html[Benutzerverwaltung mit LDAP/Active Directory]
{related-end}

// MFS: Weitere === Überschrift für Signatur von Paketen etc? 

[#intro]
== Sicherheit

Diesen Artikel vervollständigen wir nach und nach zu einer zentralen Übersicht über alle Sicherheits-Features in {CMK} und Hilfen bei der weiteren Absicherung.

Die gute Nachricht vorab: {CMK} verwendet schon immer eine Architektur, die Sicherheitsbedürfnisse berücksichtigt und wo möglich bereits in Standardeinstellungen verwendet.
Dennoch gibt es Punkte, an denen Eingriffe notwendig sind, beispielsweise wenn Schlüssel oder Zertifikate erzeugt oder importiert werden müssen.

=== Agenten-Ausgaben

Seit {v21} nutzt {CMK} TLS-Verschlüsselung für die Kommunikation zwischen Agent und Server für Linux- und Windows-Hosts.
Details der Kommunikation beschreiben die beiden Agenten-Artikel:

- xref:agent_linux#[Linux überwachen]
- xref:agent_windows#[Windows überwachen]

In bestimmten Konstellationen, in denen die TLS-Verschlüsselung bei Linux- und Unix-Clients nicht verwendet werden kann, haben Sie die Möglichkeit, verschlüsselte Tunnel zu verwenden, beispielsweise per SSH:

- xref:agent_linux_legacy#security[Linux-Agent (Legacy) absichern]
- xref:datasource_programs#[Datenquellenprogramme]

=== HTTP(S)-Kommunikation

An verschiedenen Stellen in {CMK} wird Kommunikation über HTTP abgewickelt, sei es für die interne Kommunikation oder im _Distributed Monitoring_.
Setzen Sie wo immer möglich HTTPS ein.

- xref:omd_https#[Weboberfläche mit HTTPS absichern]
- xref:ldap#ssl[LDAP-Anbindung mit SSL absichern]
- xref:appliance_usage#ssl[Appliance-GUI per TLS absichern]
- xref:managing_docker#https[Docker mit HTTPs absichern]

=== Zugriffsschutz

// An diese Stelle sollte auch Anbindung an LDAP, Kerberos etc., oder? 
{CMK} bietet Anbindungen für verschiedene Authentifizierungsverfahren und unterstützt für eine höhere Sicherheit auch Zwei-Faktor-Authentifizierung:

- xref:ldap#[Benutzerverwaltung mit LDAP/Active Directory]
- xref:wato_user#2fa[Zwei-Faktor-Authentifizierung der {CMK} Benutzer]
- xref:kerberos#[Single Sign-On mit Kerberos]
- xref:saml#[Anmeldung mit SAML]

////
Hier wird ein Übersichtsartikel darüber entstehen, wie Sie {CMK} so aufsetzen,
dass Sie eine optimale Netzwerksicherheit für Ihren Monitoringserver aber auch
für die überwachten Systeme haben.

Die gute Nachricht schonmal vorab: {CMK} hat eine durch seine eigenen Agenten
eine Architektur, die von Anfang an für höchste Sicherheit entworfen wurde. Das
äußert sich z.B. daran, dass die Agenten grundsätzlich keine Daten vom Netzwerk
lesen. Einem Angreifer ist es daher unmöglich, Befehle einzuschleusen. Die Agenten
vertrauen somit nicht einmal dem Monitoringserver.

An verschiedenen Stellen im {CMK} werden HTTP-Protokolle eingesetzt - sei es
für eine interne Kommunikation oder die Anbindung von anderen Systemen. Setzen
Sie hier HTTPS ein wo immer möglich. Auch an anderen Stellen gibt es optional
Verschlüsselungstechniken. Dazu finden Sie auch Anleitungen in diesem
Handbuch:
////
//IN:cma_backup#encryption Appliance-Datensicherung verschlüsseln

