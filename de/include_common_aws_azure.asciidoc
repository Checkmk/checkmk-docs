// -*- coding: utf-8 -*-
include::global_attr.adoc[]

////
Kommentare zu installation_azure (Kap.1 und 2):
Installation als Azure-Image > Installation als Image im Azure Marketplace?
Site > Instanz
bietet vorinstallierte Images: doch nur 1 für Azure und 1 für AWS, oder?
Testmodus, Testphase > Testzeitraum (oder besonders sperrig: Lizenzstatus „Trial“)
Dienste > Services
Central Site > Zentralinstanz
Remote Site > Remote-Instanz
Azure Marketplace scheint der gängige Begriff zu sein - und nicht Marktplatz
Natürlich kann diese Zahl höher ausfallen > Diese Zahl kann höher ausfallen
deutlich höhere Zahl an Services > Jetzt Anzahl der Services, vorher ging es nur um die Anzahl der Hosts
Kommentare zu installation_azure (Kap.4):
4.2. Azure überwachen würd ich zum Hauptkapitel machen > 5. Azure überwachen
////

== Einrichtung

=== Login auf der virtuellen Maschine

Das Root-Login ist auf den AWS-/Azure-Images deaktiviert.
Stattdessen kommt der Nutzer `ubuntu` zum Einsatz, der über die Berechtigung verfügt, `sudo` mit beliebigen Kommandos ohne Passwortabfrage auszuführen.
Da Sie je nach Setup möglicherweise einen von Ihrem Standardschlüssel abweichenden SSH-Schlüssel angeben mussten, ist das _Identity File_ entsprechend anzugeben.
// TK: angeben mussten: Wann musste ich das tun? Kommt das noch in dem fehlenden Teil?
Die IP-Adresse ist natürlich entsprechend anzupassen:
// TK: Um welche IP-Adresse handelt es sich?
// TK: Das 2. "entsprechend" vermeiden.

[{shell}]
----
{c-user} ssh -i /path/to/id_file.priv ubuntu@12.34.56.78
----
// TK: Nach dem Login das neue Prompt {c-ubuntu} zeigen?

=== Instanz aufsetzen

Eine {CMK}-Instanz muss eindeutig benannt sein und sollte darüber hinaus eine leichte Identifikation ermöglichen.
Für den Instanznamen gelten die selben Einschränkungen wie für Linux-Nutzer (ein solcher wird für jede Instanz erstellt):
Das erste Zeichen muss ein Buchstabe sein, alle weiteren Zeichen dürfen Buchstaben, Zahlen, sowie Punkt, Minuszeichen und Unterstriche sein.
Leerzeichen oder das `@` sind nicht zulässig und die Länge darf maximal 30 Zeichen betragen.
// TK: Die Instanznamenskonvention gehört nicht hierhin, sondern in den omd-Artikel und/oder den Leitfaden für Einsteiger.
Hier – und an den meisten anderen Stellen dieses Handbuches – verwenden wir als Instanznamen `mysite`, wenn dies spezifisch genug ist.

Das Erstellen einer Instanz geschieht mit dem Verwaltungswerkzeug von {CMK}, xref:omd_basics#[`omd`]:
// TK: Die aktuelle(?) CCE-Version, mit der die Instanz erstellt wird, ist im Image drin? Hinzufügen, dass die Instanz mit der vorinstallierten {CMK}-Version erstellt wird.

[{shell}]
----
{c-ubuntu} sudo omd create mysite
Adding /opt/omd/sites/mysite/tmp to /etc/fstab.
Creating temporary filesystem /omd/sites/mysite/tmp...[green]#OK#
Updating core configuration...
Generating configuration for core (type cmc)...

Starting full compilation for all hosts Creating global helper config...[green]#OK#
 Creating cmc protobuf configuration...[green]#OK#
Executing post-create script "01_create-sample-config.py"...[green]#OK#
Restarting Apache...[green]#OK#
Created new site mysite with version 2.2.0p1.cce.

  The site can be started with omd start mysite.
  The default web UI is available at \http://cloud/mysite/

  The admin user for the web applications is cmkadmin with password: UbWeec9QuazIf
  For command line administration of the site, log in with 'omd su mysite'.
  After logging in, you can change the password for cmkadmin with 'cmk-passwd cmkadmin'.
----
// TK: Vielleicht ein omd sites hinterher, damit man sieht, mit welcher CMK-Edition und -Version die Instanz erstellt wurde? Alternativ als 1. Kommando im Kap. {CMK} aktualisieren

Starten Sie jetzt die neu angelegte Instanz mit

[{shell}]
----
{c-ubuntu} sudo omd start mysite
----

Die in der obigen Kommandoausgabe gezeigte URL (`\http://cloud/mysite`) verwendet den intern genutzten Host-Namen Ihrer AWS- oder Azure-VM.
Da dieser in der Regel nicht extern aufgelöst wird, ist die URL von eingeschränktem Nutzen.
In der Regel wollen Sie zunächst über die IP-Adresse oder einen im eigenen DNS-Server hinterlegten Host-Namen zugreifen.

=== Zertifikate hinterlegen

Damit der System-Apache überhaupt am HTTPS-Port 443 lauschen kann, benötigt er gültige Zertifikate.
Beim ersten Start der virtuellen Maschine werden hierfür die häufig gesehenen _Snakeoil Inc._ Zertifikate generiert.
// TK: häufig gesehenen? Von mir jedenfalls nicht ;-)
Wir raten dringend zum baldigen Austausch gegen xref:omd_https#[eigene Zertifikate], bei denen die komplette Zertifikatskette leicht verifiziert werden kann.

Die Apache-Konfiguration hält sich dabei eng an die Ubuntu-Standards, geänderte Zertifikatspfade müssen in der Datei `/etc/apache2/sites-enabled/000-default.conf` eingetragen werden.

=== Firewall einrichten

Standardmäßig öffnet {CMK} Ports nur sparsam und nach expliziter Aktivierung benötigter Komponenten.
Dennoch kann es sinnvoll sein, die verwendeten Ports weiter – zum Beispiel auf bestimmte IP-Adressen – einzuschränken.

In einem Single Site Setup, in dem Hosts im Monitoring auch per Push Monitoringdaten zur {CMK}-Instanz schicken, müssen die folgenden Ports des {CMK}-Servers erreichbar sein:
// TK: Single Site Setup: ungünstig, da die Site in deutsch Instanz heisst. Vielleicht: In einer {CMK}-Konfiguration mit einer Instanz (_single site setup_) ...
// TK: in dem Hosts im Monitoring auch per Push zur {CMK}-Instanz schicken > in dem Hosts auch im Push-Modus Daten zur {CMK}-Instanz schicken

* Von den Hosts im Monitoring aus: Port 80/443 (HTTP/HTTPS, während der Agentenregistrierung) und Port 8000 (Agent Receiver, dauerhaft)
* Für die Verwaltung per Browser und REST-API: Port 80/443 (HTTP/HTTPS)

Konsultieren Sie unsere Übersicht xref:ports#[aller verwendeten Ports], falls Sie ein verteiltes Monitoring aufsetzen oder beispielsweise Statusabfragen über die xref:glossar#livestatus[Livestatus-Schnittstelle] vornehmen wollen.

=== E-Mail-System einrichten

Da die Wege der xref:intro_notifications#[Benachrichtigungen] in {CMK} vielfältig sind und variieren können, ist kein E-Mail-System vorbereitet.

==== {CMK} ohne E-Mail-System

Auch der vollständige Verzicht auf ein lokales E-Mail-System ist möglich, falls Sie ausschließlich die xref:notifications#syncsmtp[nachvollziehbare Zustellung von HTML-E-Mails per SMTP] aktivieren wollen oder auf Benachrichtigungs-Plugins für Plattformen wie xref:notifications_teams#[Microsoft Teams] oder xref:notifications_slack#[Slack] setzen wollen.

Beachten Sie aber, dass in dieser Konfiguration keine xref:notifications#bulk[Sammelbenachrichtigung] möglich ist.

==== Nullmailer

Im Regelfall werden Sie daher meist einen link:https://manpages.ubuntu.com/manpages/jammy/man7/nullmailer.7.html[Nullmailer^] einrichten wollen, seltener ein vollständiges E-Mail-System.
// TK: daher: Worauf bezieht sich das?
// TK: einen Nullmailer? Klingt so, als ob das eine Kategorie wäre: den statt einen?

Eine typische Nullmailer-Installation und -Konfiguration ist in wenigen Zeilen in der Shell erledigt:
// TK: Und wieder: Das ist doch nicht Cloud-Image-spezifisch und gehört doch eher/zusätzlich in den notifications-Artikel, oder? 

[{shell}]
----
{c-ubuntu} sudo apt install nullmailer
{c-ubuntu} echo "smtp.myprovider.xyz smtp --auth-login --user='checkmk@example.com' --pass='mypassword' --port=587 --starttls" | sudo tee /etc/nullmailer/remotes
{c-ubuntu} echo "example.com" | sudo tee /etc/nullmailer/defaultdomain
{c-ubuntu} sudo chmod 600 /etc/nullmailer/remotes
{c-ubuntu} sudo systemctl restart nullmailer
----

=== Host(s) ins Monitoring aufnehmen

==== Localhost im Pull-Modus
// TK: oder: Hosts (localhost) im Pull-Modus?

In den allermeisten Fällen dürfte der {CMK}-Server selbst der erste Host sein, den Sie xref:intro_setup_monitor#linux[ins Monitoring aufnehmen.]
Bei ihm erfolgt der Zugriff im xref:glossar#pull_mode[Pull-Modus.]
// TK: Dazu müssen Sie den Linux-Agenten auf dem {CMK}-Server installieren. Der Agent kommuniziert mit dem Server im xref:glossar#pull_mode[Pull-Modus.]
Wenn Ihnen der Download des Agentenpaketes über die Weboberfläche mit anschließendem Transfer per `scp` zu umständlich erscheint, können Sie den Vanilla-Agenten direkt aus dem Dateisystem installieren:
// TK: den Vanilla-Agenten > den Agenten in seiner Standardkonfiguration („Vanilla“)

[{shell}]
----
{c-ubuntu} sudo apt install $(sudo find /opt/omd/versions/ -name 'check-mk-agent_*.deb' | tail -n1)
----

Unmittelbar nach der Installation lauscht der {CMK}-Agent im unverschlüsselten Legacy-Pull-Modus auf Port 6556.
Führen Sie daher zeitnah xref:intro_setup_monitor#register[die Registrierung] durch, damit keine unbefugten Dritten auf die Agentenausgabe zugreifen können:

[{shell}]
----
{c-ubuntu} sudo cmk-agent-ctl register --hostname localhost --server localhost --site mysite --user cmkadmin
----

==== Hosts im Push-Modus

Sollen Hosts überwacht werden, die hinter einer Firewall nicht direkt vom {CMK}-Server erreicht werden können, ist oft der xref:glossar#push_mode[Push-Modus] der bevorzugte Kommunikationsweg.

Sie können den Push-Modus per Host über die Option [.guihint]#Checkmk agent connection mode# auswählen.
// TK: Sie können den Push-Modus in den Eigenschaften des Hosts im Abschnitt xref:hosts_setup#monitoring_agents[Monitoring agents] mit der Option [.guihint]#Checkmk agent connection mode# auswählen. 

Alternativ können Sie den Push-Modus auch mit vorkonfigurierten Agentenpaketen für die xref:hosts_autoregister#[Autoregistrierung] kombinieren und so den Komfort weiter erhöhen.

=== {CMK} aktualisieren
// TK: Folgefrage zu oben: Ist im Image immer die aktuellste Software-Version drin?
// TK: Kapitel eine Ebene höher ziehen oder nach Nachbereitung verschieben? Hängt davon ab, ob im Image immer die aktuelle Version drin ist...

Prüfen Sie die link:https://checkmk.com/de/download?method=cmk&edition=cce&version=2.2.0&platform=ubuntu&os=jammy&type=cmk[Download-Seite^] regelmäßig auf Updates und laden sie das aktualisierte Paket mit dem dort angezeigten `wget` Kommando herunter.
// TK: Wenn Du hier auf jammy verlinkst, wäre es oben in Kap. 1.1 vielleicht interessant zu erfahren, dass es sich um ein Ubuntu 22.04 handelt.

Die xref:update#[Installation eines Updates] erfolgt in zwei Schritten, was darin begründet liegt, dass mit `omd` verschiedene Instanzen mit verschiedenen Versionen von {CMK} auf einem Server laufen können.

==== Neue {CMK}-Version installieren und Instanz aktualisieren

Der erste Schritt ist die Installation des Paketes, im folgenden Beispiel die Version {v22}p2:

[{shell}]
----
{c-ubuntu} sudo apt install ./check-mk-cloud-2.2.0p2_0.jammy_amd64.deb
----

Der nächste Schritt ist das Update Ihrer Instanz(en):

[{shell}]
----
{c-ubuntu} sudo omd stop mysite
{c-ubuntu} sudo omd update mysite
{c-ubuntu} sudo omd start mysite
----

==== Nicht mehr benötigte Pakete entfernen

Falls Sie mehrere Instanzen auf dem Server nutzen (beispielsweise eine produktiv genutzte und eine für den Test von Erweiterungen), stellen Sie sicher, dass alle aktualisiert sind:

[{shell}]
----
{c-ubuntu} omd sites
SITE         VERSION       COMMENTS
mysite       2.2.0p2.cce   default version
mytestsite   2.2.0p2.cce   default version
----
// TK: sudo omd sites

Nicht mehr genutzte {CMK}-Versionen können Sie dann über das Ubuntu-Paketmanagement deinstallieren:

[{shell}]
----
{c-ubuntu} sudo apt purge check-mk-cloud-2.2.0p1
----

