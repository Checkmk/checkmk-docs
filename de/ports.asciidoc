// -*- coding: utf-8 -*-
include::global_attr.adoc[]
= Ports
// MA: Wie im Weekly besprochen, wollen wir lieber das Schlagwort am Anfang stehen haben.
:revdate: draft
:title: Von {CMK} genutzte Ports
:description: {CMK} nutzt für die Kommunikation einige Ports, diesen müssen freigegeben sein.

{related-start}
xref:install_packages#[Grundsätzliches zur Installation von {CMK}]
xref:wato#[Die Konfiguration von {CMK}]
xref:wato_monitoringagents#[Monitoring-Agenten]
{related-end}


== Übersicht
// MA: Warum nicht nur "Übersicht"? Der Rest scheint mir redundant zu sein.

// Damit {CMK} die konfigurierten Hosts und Services überwachen kann, ist unter anderem der reibungsfreie Zugriff auf einige Ports nötig.
// MA: Okay.... aber warum?
// Diese müssen gegebenenfalls in der Firewall freigegeben werden.
// Es sind jedoch nicht immer alle Ports notwendig.
// MA: Alle Ports von 1-65536 oder die unten erwähnten?
// Abhängig von der Konfiguration können einige davon entfallen.
// MA: Abhängig von welcher Konfiguration?

Für die Überwachung von Hosts und Services sowie die Kommunikation verschiedener Komponenten einer {CMK}-Installation untereinander verwendet {CMK} in vielen Fällen Datenübertragung über TCP/IP oder UDP/IP.

Diese Liste soll Ihnen einen Überblick verschaffen, welche Ports für welche Funktionalität benötigt werden und die daher in der Firewall-Konfiguration freigeschaltet werden müssen, respektive beim Einsatz von {CMK} in einem Container an diesen gebunden werden müssen.

// Neben der Hilfe bei der Firewallkonfiguration soll diese Liste einen Überblick verschaffen, welche Ports beim Einsatz von {CMK} in Container-Umgebungen an den Port des jeweiligen Containers gebunden werden müssen.
// MA: Der Zusammenhang zum ersten Abschnitt ist mir nicht klar.

// MFS: Kommunikationsrichtung/Verbindungsaufbau betont, was im weiteren Verlauf deutlich kürzere Überschriften zulässt.
Die Kommunikationsrichtung ist, wenn nicht anders erwähnt, eingehend zur Komponente in der Kapitelüberschrift.

*Hinweis:* Die Mehrheit der hier aufgeführten Portnummern sind Standardports.
Diese können jederzeit manuell auf andere Ports umgestellt werden. Diejenigen Ports, die nicht standardmässig aktiv sind, sondern stattdessen bei Bedarf freigegeben werden müssen, sind zusätzlich mit einem Vermerk gekennzeichnet.

== Überwachung von Hosts (Agent, SNMP)
// MA: Was ist denn ein irreguläres Monitoring?
// MFS: Stimmt, das hätte alles sein können – hoffe, so wird klar, was gemeint ist

[#host_incoming_cmk_outgoing]
=== Überwachter Host

// MA: Im Folgenden wird immmer nur über eingehend Ports gesprochen (abgesehen von "Weitere Ports"). Kann man das nicht vorher abfangen und dann in den Titeln weglassen?
// MA: Die Klammer wird ja im nachfolgenden Satz beschrieben. Muss das zusätzlich in den Titel?
Die folgenden Ports auf überwachten Hosts müssen vom {CMK}-Server aus erreichbar sein.

// MA: Ist "Remote-Instanzen" nicht eine Untermenge von "Checkmk-Server"?
// MA: Weshalb sprechen wir hier von Remote-Instanzen, wenn wir weiter unten ein explizites Kapitel darüber haben?

[cols="10,10,~,~",options="header"]
|===
|Port |Protokoll |Bezeichnung |ergänzende Informationen
|161 |UDP |xref:glossar#snmp[Simple Network Management Protocol (SNMP)]|Via SNMP überwachte Hosts erhalten über diesen Port die Anforderung `GET-REQUEST`
|6556 |TCP |xref:glossar#agent[Agent] |Via {CMK}-Agent überwachte Hosts werden über diesen Port abgefragt, die Kommunikation erfolgt im xref:agent_linux_legacy#[Klartext] oder xref:wato_monitoringagents#[TLS verschlüsselt]
|  (keiner) |ICMP |  Ping | {CMK} überwacht die Erreichbarkeit von Hosts per Ping, ist dies nicht möglich, muss eine Regel xref:hosts_setup#monitoring_agents[_Host Check Command_] verwendet werden
// MA: Ist der Zusatz "im Klartext oder TLS verschlüsselt" relevant für das Verständnis, weswegen ich den Port brauche und was passiert, wenn ich ihn nicht freischalte?
// | | |eventuell weitere Ports |z. B. für xref:glossar#active_check[aktive Checks] |
// MA: Irgendwie nicht so richtig hilfreich. Gehört das wirklich in die Tabelle?
|===

Aktive Checks greifen direkt auf die Ports der überwachten Dienste zu, diese müssen also auch vom {CMK}-Server aus erreichbar sein.
Die Überwachung mit Spezialagenten kann erfordern, andere/weitere Ports zu öffnen.
So benötigt der  xref:datasource_programs#specialagents[Spezialagent] für VMware ESXi (auch NetApp und viele weitere) die Öffnung des Ports 443 auf dem ESXi Server.
// MA: Gehört das didaktisch vor oder nach der Tabelle in das Kapitel rein?
// MFS: IMHO als zusätzliche Information nach unten, da bei Spezialagenten oft nicht mit dem überwachten Host kommuniziert wird.

[#cmk_incoming_host_outgoing]
=== {CMK}-Server
// MA: Gleiche Fragen, wie oben in Kapitel 2.1.

Die folgenden Ports auf dem {CMK}-Server müssen für die Hosts im Monitoring erreichbar sein.
// MA: Was ist denn eine volle Funktionalität? Reicht es, wenn das in der Tabelle geklärt wird?
// MFS: Gestrichen: "welche Ports für welche Funktionalität" in der Einleitung deckt das ab.

[cols="10,10,~,~",options="header"]
|===
|Port |Protokoll |Bezeichnung |ergänzende Informationen
|80 |TCP |HTTP (Hypertext Transfer Protocol) |Agent Updater (xref:wato_monitoringagents#bakery[Agentenbäckerei]), Discovery des Agent Controller Ports
|162 |UDP |Simple Network Management Protocol Trap (SNMPTRAP) EC |Empfang von xref:ec#snmp[SNMP-Traps (Event Console)] _(optional aktivierbar)_
|443 |TCP |HTTPS (Hypertext Transfer Protocol over SSL/TLS) |Agent Updater (xref:wato_monitoringagents#bakery[Agentenbäckerei]), Discovery des Agent Controller Ports, mit Transportverschlüsselung
|514 |TCP und UDP |xref:ec#syslogfacility[Syslog (EC)] |Empfang von Syslog-Nachrichten (Event Console) _(optional aktivierbar)_
|6559 |UDP | link:https://checkmk.com/werk/8350[Echtzeitprüfungen^] | Empfang von UDP-Paketen für die Echtzeitprüfungen einzelner Dienste (selten verwendet) _(optional aktivierbar)_
|8000 |TCP |Agent Controller TLS-Registrierung |Wenn mehrere Instanzen auf einem Host laufen, sind eventuell weitere Ports (8001, 8002…) nötig
|===

Die TLS-Registrierung von Agenten nutzt das REST-API auf Port 80/443 zur Discovery des Registrierungs-Ports (meist TCP 8000).
Sind beide nicht erreichbar, kann der Port per xref:agent_linux#networkrequirements[Kommandozeilenoption] angegeben werden.
Falls Port 8000 nicht erreichbar ist, kann auf anderen Hosts im Monitoring eine xref:agent_linux#proxyregister[Registrierung im Auftrag] erfolgen.
// MA: Gehört das nicht eher in die Tabelle?
// MFS: Ergänzt.

== Verteiltes Monitoring
// MA: Warum unterscheiden wir überhaupt diese beiden Fälle? => "reguläres Monitoring" vs. "verteiltes Monitoring". Ist verteiltes Monitoring dann irreguläres Monitoring? Oder sind Ports aus dem verteilten Monitoring nicht eher Spezialfälle vom regulären Monitoring?
// MFS: Mit den abgeänderten Überschriften sollte klar sein, dass es sich hier um keine Alternative, sondern eine Erweiterung handelt

[#remote_incoming_cmk_outgoing]
=== Remote-Instanz
// MA: Durch welchen Checkmk-Server? Eine Remote-Instanz ist doch auch ein Checkmk-Server?
// MFS: Zentralinstanz ergänzt.

Die folgenden Ports auf Remote-Instanzen müssen durch den als Zentralinstanz arbeitenden {CMK}-Server erreichbar sein.
// MA: Jetzt wirds klar. Der Titel wirft aber eher Fragen auf.

[cols="10,10,~,~",options="header"]
|===
|Port |Protokoll|Bezeichnung |ergänzende Informationen
|80 |TCP |HTTPS (Hypertext Transfer Protocol) |Synchronisierung im xref:glossar#distributed_monitoring[verteilten Monitoring]
|443 |TCP |HTTPS (Hypertext Transfer Protocol over SSL/TLS) |Synchronisierung im verteilten Monitoring, mit Transportverschlüsselung
// MA: Auch hier wieder: 443 verschüsselt und 80 ist unverschlüsselt.
|6555 |TCP | Notification Spooler | Der xref:distributed_monitoring#notifications[Notification Spooler] dient dem zentralen Versand von Benachrichtigungen (bei Verbindungsaufbau durch die Zentralinstanz) _(optional aktivierbar)_
|6557 |TCP |xref:livestatus#[Livestatus] |Wenn mehrere Instanzen auf einem Host laufen, sind eventuell weitere Ports nötig _(optional aktivierbar)_
|6558 |TCP | |Statusanschluss der Event Console _(optional aktivierbar)_
// MA: Irgendwie wird nicht so richtig klar, dass Port 6557, 6558, 6559, etc. eigentlich nur defaults von uns sind. Das sind keine standardisierten Ports. Man kann auch 34555, 12345 oder 9256 nehmen.
|===

[#cmk_incoming_remote_outgoing]
=== Zentralinstanz

Prinzipiell ist verteiltes Monitoring ohne weitere Hilfsmittel wie Tunneling bereits möglich, wenn die Zentralinstanz eine Verbindung zu den Remote-Instanzen herstellen kann. Die Erreichbarkeit der Zentralinstanz durch Remote-Instanzen ist nur für optionale Funktionalitäten (z.B. Agent Bakery) erforderlich.
// MA: Aaah. Sehr interessant. Aber sollte die Information nicht kommen, bevor ich mir alle notwendigen Ports anschauen (und ggf. freischalte)? Das ist ja scheinbar der volle Funktionsumfang, von dem am Anfang des Kapitels gesprochen wird.
// MFS: Nach oben gezogen.

Die folgenden Ports auf dem als Zentralinstanz arbeitenden {CMK}-Server müssen durch die zugeordneten Remote-Instanzen erreichbar sein, um die beschriebene Funktionalität bereitzustellen.
// MA: Auch hier wieder: Was ist denn ein voller Funktionsumfang?

[cols="10,10,~,~",options="header"]
|===
|Port |Protokoll |Bezeichnung |ergänzende Informationen
|80 |TCP |HTTP (Hypertext Transfer Protocol) |Für xref:wato_monitoringagents#bakery[Agentenbäckerei] und xref:dcd#[dynamische Host-Konfiguration]
|443 |TCP |HTTPS (Hypertext Transfer Protocol over SSL/TLS) |Für xref:wato_monitoringagents#bakery[Agentenbäckerei] und xref:dcd#[dynamische Host-Konfiguration], mit Transportverschlüsselung
|6555 |TCP | Notification Spooler | Der xref:distributed_monitoring#notifications[Notification Spooler] dient dem zentralen Versand von Benachrichtigungen (bei Verbindungsaufbau durch die Remote-Instanz) _(optional aktivierbar)_
|===



[#loopback]
== Lokale Ports auf dem {CMK}-Server
// MA: Weshalb muss ich die beachten?

Die folgenden Ports werden vom {CMK}-Server auf dem lokalen Loopback-Interface genutzt.
// MA: Was heißt denn "lokal genutzt"? Muss ich da etwas freischalten? Wenn ja: Wo?
// MFS: Umformuliert.
Falls Sie auf Ihrem {CMK}-Server eine sehr strenge Firewall-Konfiguration verwenden, müssen diese Ports auf der IP-Adresse 127.0.0.1 (IPv4), respektive ::1 (IPv6) eingehend und ausgehend freigeschaltet werden.
// MFS: Muss hier noch der Hinweis rein, das Event-Konsole und Container möglicherweise schwierig wird?
// MFS: Muss hier noch ein weiteres Kapitel folgen, indem erklärt wird, dass der Windows Agent derzeit das lokale Loopback Interface nutzt?

[cols="10,10,~,~",options="header"]
|===
|Port |Protokoll |Bezeichnung |ergänzende Informationen
|5000 |TCP | HTTP Site Apache |Jede {CMK}-Site verfügt über einen eigenen Apache, auf den der extern aufrufbare Apache als Reverse Proxy zugreift, weitere Sites verwenden Port 5001 usw.
|6558 |TCP | |Statusanschluss der Event Console _(optional aktivierbar)_
// MA: Sicher, dass hier ein TCP-Port genutzt wird und nicht ein Unix-Socket? In welchen Fällen wird der TCP-Port genutzt und welchen Vor-/Nachteil hat das für mich?
|===

[#appliance_cluster]
== {CMK} Appliance Cluster
// MA: Sollte der Abschnitt nicht zu den Artikeln der Appliance?
// MFS: Das Stichwort ist hier "Failover Cluster", dies erklärt das warum und damit auch, warum gegenseitige Erreichbarkeit nötig ist.

// These two sentences are copied from appliance_usage.asciidoc – 
// when translating you might copy and paste from there as well
Sie können zwei Checkmk-Appliances ("Knoten") zu einem xref:appliance_usage#_failover_cluster[Failover-Cluster] zusammenschließen.
Dabei werden alle Konfigurationen und Daten zwischen den beiden Geräten abgeglichen.

Die folgenden Ports müssen von beiden Knoten aus ein- und ausgehend freigegeben sein.

[cols="10,10,~,~",options="header"]
|===
|Port |Protokoll |Bezeichnung |ergänzende Informationen
|80 |TCP |HTTP (Hypertext Transfer Protocol) |für den Webconf-Zugang
|443 |TCP |HTTPS (Hypertext Transfer Protocol over SSL/TLS) |für den Webconf-Zugang, mit Transportverschlüsselung
|3121 |TCP |Pacemaker |für Pacemaker
|4321 |UDP |Corosync |für Corosync
|4323 |UDP |Corosync |für Corosync
|7789 |TCP |DRBD |für die DRBD Synchronisierung an den synchronisierenden Netzwerkschnittstellen
|===

[#misc_ports]
== Ausgehende Ports
// MA: Oben wird immer von eingehenden Ports gesprochen und der Leser/die Leserin wird dann ggf. nach ausgehenden Ports suchen. Aber man findet es nicht, weil es unter "weitere Ports" gelistet wird.
// MFS: geändert.
// MFS: IMHO hätte man das ganze Kapitel weglassen können, weil hier nur ausgehende Standards stehen

Eventuell benötigen Sie, vom {CMK}-Server ausgehend, einige weitere Ports:
// MA: Eigentlich braucht man doch nur Zugang zu anderen Servern und deren eingehenden Ports, oder? Also z.B. dem Port 53 UDP des Nameservers. Ausgehend von der Perspektive, die ketzerische Frage: Sprechen wir dann nicht immer von eingehenden Ports?

* SMTP zur Versendung von Benachrichtigungen vom {CMK}-Server über Mail (je nach Konfiguration des Mailservers Port 25, 465 oder 587 TCP)
* NTP Zeitsynchronisation (Port 123 UDP)
* DNS (Port 53 UDP)
* LDAP Authentifizierung (LDAP (Port 389 TCP) oder LDAPS (Port 636 TCP))

// MA: Wenn wir von eingehenden und ausgehenden Ports sprechen wollen, müssen wir eher die Sicht der Firewall einnehmen. Dann ist die Relation aber eine anderen und es geht eher darum, wer mit wem über welche Ports spricht. Eine Grafik ist da eigentlich sehr plastisch und erlaubt es sich besser vorzustellen, wer mit wem und warum über welchen Port spricht.
// MFS: Ich sehe hier keinen Bedarf für eine Grafik. Die Formulierungen "eingehend" und "ausgehend" habe ich versucht, so zu verwenden, dass sie direkt in "incoming" und "outgoing" übersetzbar sind. 
