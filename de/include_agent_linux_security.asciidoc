// -*- coding: utf-8 -*-
include::global_attr.adoc[]


[#security]
== Absicherung

=== Vorüberlegung

Sicherheit ist ein wichtiges Kriterium für jegliche Software, hier darf Monitoring keine Ausnahme machen.
Da der Monitoring-Agent auf jedem überwachten Server installiert wird, hätte hier ein Sicherheitsproblem besonders gravierende Auswirkungen.

Deswegen wurde schon beim Design von {CMK} auf Sicherheit Wert gelegt und es gilt seit den ersten Tagen von {CMK} ein eherner Grundsatz:
_Der Agent liest keine Daten vom Netzwerk. Punkt._ 
Somit ist mit Sicherheit ausgeschlossen, dass ein Angreifer über den Überwachungsport 6556 irgendwelche Befehle oder Skriptbestandteile einschleusen kann.


=== Transport Layer Security (TLS)

Für einen Angreifer kann jedoch bereits eine Prozessliste ein erster Ansatz sein, Rückschlüsse auf lohnenswerte Ziele zu ziehen.
Daher ist die Transportverschlüsselung zwischen Agent und {CMK}-Server mit Transport Layer Security (TLS) ab {CMK}-Version {v21} obligatorisch.
Hierbei "pingt" der {CMK}-Server den überwachten Host an, der daraufhin die TLS-Verbindung zum {CMK}-Server aufbaut und darüber die Agentenausgabe überträgt. 
Da nur {CMK}-Server, zu denen ein Vertrauensverhältnis besteht, diese Datenübertragung initiieren können, besteht schon einmal kein Risiko, dass Daten in die falschen Hände gelangen.


=== Zugriff über IP-Adressen beschränken

Da nur authorisierte {CMK}-Server Daten abrufen können und nicht berechtigte Server nach einigen Bytes Handshake scheitern, ist die Gefahr einer _Denial of Service (DoS)_ Attacke sehr gering.
Aus diesem Grund ist aktuell keine weitere Zugriffsbeschränkung vorgesehen.
Selbstverständlich können Sie Port 6556 per `iptables` gegen unberechtigten Zugriff sperren.
Eine möglicherweise vorhandene und per Bakery auf Clients übertragene Regel zur Einschränkung des Zugriffs auf bestimmte IP-Adressen wird vom Agent Controller ignoriert.

// Wegen der simplen Initiierung der Datenübertragung ist auch das Risiko einer _Denial of Service (DoS)_ Attacke sehr gering.
// Selbstverständlich können Sie dieses weiter minimieren, indem Sie Port 6556 entweder per systemd-Parameter `IPAddressAllow` auf die IP-Adressen Ihrer {CMK}-Instanzen beschränken (ab systemd 235) oder den Port per `iptables` gegen unberechtigten Zugriff sperren.

=== Eingebaute Verschlüsselung abschalten

Insbesondere bei einem Update des Agenten kann es sein, dass die xref:agent_linux_legacy#encryption[eingebaute (symmetrische) Verschlüsselung] aktiv ist, die vom Agentenskript selbst durchgeführt wird.
Sind TLS-Verschlüsselung und eingebaute Verschlüsselung gleichzeitig aktiv, dann ist die Entropie der übertragenen Daten so hoch, dass die ab Version {v21} aktive Komprimierung keine Ersparnis der übertragenen Daten bringt – und die CPUs sowohl des Hosts als auch des {CMK}-Servers mit zusätzlichen weiteren Ver- und Entschlüsselungsschritten belasten.

Aus diesem Grund sollten Sie die eingebaute Verschlüsselung zeitnah nach dem Wechsel auf TLS deaktivieren.
In der {CRE} erreichen Sie das, indem Sie die Konfigurationsdatei `/etc/check_mk/encryption.cfg` umbenennen.

{cee-only} In den {CEE} können Sie vorhandene Regeln unter [.guihint]#Setup > Agents > Access to agents > Encryption (Linux, Windows)# im Abschnitt  [.guihint]#Encryption (Linux, Windows)# auf _Use TLS encryption_ umstellen und anschließend die Agentenpakete xref:agent_deployment#[neu backen].
Nach dem nächsten automatischen Agenten-Update ist die Verschlüsselung des Agentenskriptes abgeschaltet, aber durch den Agent Controller die Verschlüsselung garantiert.
Beachten Sie, dass nach dem automatischen Agenten-Update nur noch registrierte Hosts Monitoring-Daten liefern können.
