// -*- coding: utf-8 -*-
include::global_attr.adoc[]


[#install]
== Installation

{CMK} bietet Ihnen für die Installation des Windows-Agenten verschiedene Wege -- von der manuellen Installation des Software-Pakets bis hin zum vollautomatischen Deployment inklusive Updatefunktion.
Manche davon stehen nur in den {EE} zur Verfügung:

[cols="40,50,~,~",options="header"]
|===
|Methode |Beschreibung |CRE |CEE
|Mitgeliefertes MSI-Paket |Einfache Installation eines Standard-Agenten mit manueller Konfiguration über Konfigurationsdateien. |X |X
|MSI-Paket aus der xref:glossar#agent_bakery[Agentenbäckerei] |Konfiguration über die GUI, individuelle Konfiguration pro Host möglich. | |X
|xref:agent_deployment#[Automatisches Updaten] |Das Paket aus der Agentenbäckerei wird erstmalig von Hand oder per Skript installiert und von da an automatisch aktualisiert. | |X
|===

Alternativ können Sie das MSI-Paket auch über andere Wege, wie zum Beispiel das Microsoft Active Directory, verteilen.
Die Installation kann hier durch das MSI-Format komplett automatisiert werden.

[#download]
=== Download des MSI-Pakets

Sie installieren den Windows-Agenten durch Installation des MSI-Pakets.

Vor der Installation müssen Sie das Paket holen und auf den Host bringen (zum Beispiel mit `scp` oder WinSCP), auf dem der Agent laufen soll.
 

[#download_gui]
==== Paket per {CMK}-GUI holen

In der {CRE} finden Sie das Windows-Paket des Agenten über [.guihint]#Setup > Agents > Windows#.
In den {EE} gelangen Sie im [.guihint]#Setup#-Menü über [.guihint]#Agents > Windows, Linux, Solaris, AIX# zunächst in die xref:wato_monitoringagents#bakery[Agentenbäckerei], wo Sie die gebackenen Pakete finden.
Von dort aus kommen Sie mit dem Menüeintrag [.guihint]#Related > Windows files# zur Liste der Agentendateien:

.Auf der Download-Seite finden Sie das MSI-Paket
image::agent_windows_agent_files.png[alt="Download-Seite mit dem MSI-Paket."]

Alles was Sie brauchen, finden Sie gleich im ersten Kasten mit dem Namen [.guihint]#Packaged Agents#:
die fertige MSI-Paketdatei `check_mk_agent.msi`.


==== Paket per REST-API holen
// TK: REST-API auch für Windows aufgenommen
// TK: REST-API geht seit {v20}p18

Die xref:rest_api#[REST-API] von {CMK} bietet die folgenden Möglichkeiten Agentenpakete vom {CMK}-Server herunterzuladen:

* Herunterladen des mitgelieferten Agenten.
* Herunterladen eines gebackenen Agenten nach Host-Name und Betriebssystem.
* Herunterladen eines gebackenen Agenten nach Hash des Agenten und Betriebssystems.

Per REST-API haben Sie die Möglichkeit, das Paket vom {CMK}-Server direkt auf den Zielrechner zu holen.

Das mitgelieferte MSI-Paket des Windows-Agenten lässt sich beispielsweise mit dem folgenden `curl`-Kommando holen.
In neueren Windows-Versionen wird `curl` bereits mitgeliefert, in älteren müssen Sie sich vorher die `curl`-Kommandoumgebung per link:https://curl.se/windows/[curl for Windows^] extra installieren. 

// TK: URL checken wg. REST API-Version
[{shell}]
----
C:\Users\hhirsch\Downloads\> curl -OJG "http://mycmkserver/mysite/check_mk/api/1.0/domain-types/agent/actions/download/invoke" ^
--header "Accept: application/octet-stream" ^
--header "Authorization: Bearer automation myautomationsecret" ^
--data-urlencode "os_type=windows_msi" 
----

*Hinweis:* Der Befehl wurde zugunsten der Lesbarkeit in vier Zeilen aufgeteilt.

Hierbei handelt es sich nur um ein einfaches Beispiel, um die Funktionsweise dieses einen REST-API-Endpunkts zum Herunterladen des Agenten zu demonstrieren.
Details zu diesem und anderen REST-API-Endpunkten finden Sie in der API-Dokumentation, die Sie in {CMK} über [.guihint]#Help > Developer resources > REST API documentation# aufrufen können.


[#install_paket]
=== Paket installieren

[#install_manual]
==== Manuelle Installation

Nachdem Sie das MSI-Paket geholt und -- falls nötig -- mit `scp`, WinSCP oder anderen Mitteln auf den zu überwachenden Host kopiert haben, starten Sie die Installation entweder per Doppelklick auf die MSI-Datei oder wie folgt von der Kommandozeile:

[{shell}]
----
C:\Users\hhirsch\Downloads\> check_mk_agent.msi
----

Sie erhalten die Startseite des Setup-Assistenten:

.Die Installation startet mit einem Willkommen
image::agent_windows_setup_wizard_1.png[alt="Startseite des Setup-Assistenten."]

Mit den [.guihint]#Next#-Knöpfen hangeln Sie sich durch die Seiten des Assistenten.
Akzeptieren Sie die Lizenzbedingungen der [.guihint]#GNU GENERAL PUBLIC LICENSE#, um fortzufahren.
Anschließend präsentiert Ihnen der Setup-Assistent die folgende Seite:

[#agent_windows_setup_wizard_3b]
.Auswahlmöglichkeiten beim Update eines sehr alten Agenten
image::agent_windows_setup_wizard_3b.png[alt="Seite des Setup-Assistenten zum Vorgehen beim Update eines alten Agenten."]

// TK: Default ist: Migrate from Legacy Windows Agent (pre 1.6) configuration if present: funktioniert aber auch wie Clean installation
Die Auswahlmöglichkeiten dieser Seite sind für Sie nur dann relevant, wenn bereits ein Windows-Agent auf dem Host installiert ist und dieser *älter* als Version {v16} ist.
In der Version {v16} hatte sich die Architektur des Windows-Agenten grundlegend geändert.
Falls Sie von einem Windows-Agenten *vor* Version {v16} auf den aktuellen Agenten updaten (oder _migrieren_), dann lesen Sie zuerst im {CMK}-Handbuch der Version {v20} das link:https://docs.checkmk.com/2.0.0/de/agent_windows.html#legacy[Kapitel zum alten Agenten.]
Dort erfahren Sie, welche der angebotenen Optionen Sie in diesem speziellen Update-Fall auswählen sollten.
// TK: Das ist nicht ganz nett, weil im Linkziel zwar die Unterschiede zwischen {v15} und {v16} erklärt werden, aber nicht explizit die 3 angebotenen Auswahlmöglichkeiten.

In allen anderen Fällen empfehlen wir die Auswahl von [.guihint]#Clean installation.#

Bestätigen Sie den Start der Installation und erlauben Sie dann noch im Dialog zur Benutzerkontensteuerung ([.guihint]#User Account Control#), dass das Installationsprogramm Änderungen durchführen darf.
Nach dem Abschluß können Sie den Setup-Assistenten beenden.

Nach der Installation wird der Agent sofort als Windows-Dienst gestartet und ist für die Überwachung des Systems bereit.


[#install_unattended]
==== Unbeaufsichtigte Installation

Windows bietet über die Kommandozeile für Administratoren mit `msiexec` die Möglichkeit, MSI-Pakete automatisiert ohne Benutzerinteraktion zu installieren.
Eine automatisierte Installation kann dann zum Beispiel folgendermaßen aussehen:

[{shell}]
----
C:\Users\hhirsch\Downloads\> msiexec /i check_mk_agent.msi /qn
----

In diesem Fall wird der Agent ohne Benutzerinteraktion und Benutzeroberfläche (`/qn`) installiert (`/i`) und ebenfalls sofort als Windows-Dienst gestartet.
Diese Methode eignet sich also hervorragend zum automatischen Ausrollen des Agenten auf viele Hosts.

Sie können auf diesem Wege auch die drei Optionen auswählen, die Ihnen während der manuellen Installation xref:agent_windows_setup_wizard_3b[im Setup-Assistenten] angeboten wurden.
Für jede Option gibt es einen Bezeichner, den Sie für das Installationskommando verwenden können:

[cols="65,~",options="header"]
|===
|Option im Setup-Assistenten | Bezeichner
|[.guihint]#Clean installation.# |`WIXUI_CLEANINSTALL`
|[.guihint]#Remove Legacy Windows Agent (pre 1.6) if present.# |`WIXUI_REMOVELEGACY`
|[.guihint]#Migrate from Legacy Windows Agent (pre 1.6) configuration if present.# |`WIXUI_MIGRATELEGACY`
|===

Um eine Option zu _aktivieren_, hängen Sie deren Bezeichner gefolgt von einem Gleichheitszeichen an:

[{shell}]
----
C:\Users\hhirsch\Downloads\> msiexec /i check_mk_agent.msi /qn WIXUI_CLEANINSTALL=
----

Um eine Option explizit zu _deaktivieren_, müssen Sie hinter dem Gleichheitszeichen noch zwei Anführungszeichen anfügen:

[{shell}]
----
C:\Users\hhirsch\Downloads\> msiexec /i check_mk_agent.msi /qn WIXUI_MIGRATELEGACY=""
----


=== Installation mit der Agentenbäckerei

{cee-only}
Die {CEE} verfügen mit der xref:wato_monitoringagents#bakery[Agentenbäckerei] über ein Software-Modul zum automatischen Paketieren von individuell angepassten Agenten -- auch Windows-Agenten.
Eine ausführliche Beschreibung dazu finden Sie im allgemeinen Kapitel über die xref:wato_monitoringagents#[Agenten].
Die Installation des gebackenen MSI-Pakets geschieht dann wieder genau wie xref:install_paket[oben] beschrieben.


=== Automatisches Updaten

{cee-only}
Wenn Sie die Agentenbäckerei verwenden, können Sie automatische Updates des Agenten einrichten.
Diese werden in einem xref:agent_deployment#[eigenen Artikel] beschrieben.


[#config_files]
=== Konfigurationsdateien des Agenten

Das MSI-Paket speichert bei der Installation die programmspezifischen Dateien in `C:\Program Files (x86)\checkmk\service\` und die host-spezifischen Dateien in `C:\ProgramData\checkmk\agent\`.
Die programmspezifischen Dateien brauchen Sie nicht anzupassen.
Mit den host-spezifischen Dateien werden Plugins, Log- und Konfigurationsdateien abgelegt und das Verhalten des Agenten konfiguriert.

*Hinweis*: Standardmäßig ist das gesamte Verzeichnis `C:\ProgramData` in Windows versteckt (_hidden_).

Der Agent liest nacheinander drei Konfigurationsdateien ein:

. `C:\Program Files (x86)\checkmk\service\check_mk.yml` +
ist die Standardkonfigurationsdatei, die Sie nicht ändern.
. `C:\ProgramData\checkmk\agent\bakery\check_mk.bakery.yml` +
wird von der Agentenbäckerei erstellt und sollte nicht manuell geändert werden.
. `C:\ProgramData\checkmk\agent\check_mk.user.yml` +
ist Ihre Konfigurationsdatei, in der Sie von Hand individuelle Anpassungen vornehmen können, um eine Einstellung oder eine Erweiterung auf einem Host zu testen.

Wird eine Option in mehreren Dateien gesetzt, dann bestimmt die zuletzt eingelesene Datei den Wert dieser Option.
Für das manuelle Arbeiten mit dem Agenten ist also lediglich die letzte Konfigurationsdatei `check_mk.user.yaml` relevant, weil sie als letzte eingelesen wird und damit _das letzte Wort hat_.
Wenn die Agentenbäckerei nicht genutzt wird, ist sie sogar die einzige Datei, in der Anpassungen an der Konfiguration des Agenten vorgenommen werden dürfen.

Wie Sie vielleicht schon an der Dateiendung der Konfigurationsdateien erkannt haben, wird als Dateiformat link:https://yaml.org[YAML^] verwendet.


[#post_install]
=== Wie geht es weiter nach der Installation?

Nach der Installation des Agenten mit Agent Controller ist der nächste Schritt die xref:registration[Registrierung], mit der die TLS-Verschlüsselung eingerichtet wird, so dass die verschlüsselte Agentenausgabe vom {CMK}-Server entschlüsselt und im Monitoring angezeigt werden kann.

Eine Besonderheit gibt es, falls der Agent mit Agent Controller erstmalig installiert wurde.
Dann schaltet der Agent in den unverschlüsselten *Legacy-Pull-Modus*, damit der {CMK}-Server nicht von den Monitoring-Daten abgeschnitten wird und diese weiterhin anzeigen kann.
Das betrifft sowohl eine Neuinstallation als auch das Update eines Agenten der Version {v20} und älter.

Im Monitoring sieht das dann etwa so aus:

.Warnung im {CMK}-Monitoring, dass TLS noch nicht genutzt wird
image::agent_windows_service_legacy_pull_mode.png[alt="Der WARN-Zustand des 'Check_MK' Services wegen fehlender Verschlüsselung."]

Die {CMK}-Instanz erkennt an der Agentenausgabe, dass der Agent Controller vorhanden und damit die TLS-Verschlüsselung möglich ist -- aber noch nicht eingeschaltet ist.
Der Service [.guihint]#Check_MK Agent# wechselt in den Zustand {WARN} und bleibt es solange, bis Sie die Registrierung nach dem Update des Agenten durchgeführt haben.
Nach der Registrierung wird nur noch im verschlüsselten Pull-Modus kommuniziert.
Der Legacy-Pull-Modus wird abgeschaltet und bleibt es auch.

Anders liegt der Fall, wenn der Agent auf sehr alten xref:windows_versions[Windows-Systemen] installiert ist.
Die Installation des Agenten mag erfolgreich sein.
Falls der Agent Controller aber wegen API-Inkompatibilitäten nicht gestartet werden kann, wird auf die unverschlüsselte Übertragung zurückgegriffen.
Ohne Agent Controller ist die Registrierung nicht möglich und der einzige Kommunikationsweg verbleibt der *Legacy-Modus*.
Im Legacy-Modus sind im Kapitel xref:registration[Registrierung] nur die Abschnitte relevant, um den Host ins Setup und anschließend ins Monitoring aufzunehmen.
Im Kapitel xref:test[Test und Fehlerdiagnose] können Sie sich den Test zum Aufruf des Agent Controllers sparen, da dieser im Legacy-Modus nicht vorhanden ist.
Da es ohne Agent Controller auch keine TLS-Verschlüsselung gibt, müssen Sie bei Bedarf andere Wege der Verschlüsselung wählen.
Wir empfehlen, in diesem Fall die eingebaute (symmetrische) Verschlüsselung zu nutzen mit der Regel [.guihint]#Encryption (Linux, Windows)# und/oder einen xref:ssh[SSH-Tunnel] einzurichten.
