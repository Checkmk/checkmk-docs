// -*- coding: utf-8 -*-
include::global_attr.adoc[]
= Strukturierung der Hosts
:revdate: draft
:title: Strukturierung der Hosts
:description: Skalierbarkeit gehört zum Grunddesign von {CMK}. Welche Möglichkeiten es gibt, Hosts zu strukturieren, erfahren Sie hier.

{related-start}
xref:hosts_setup#[Verwaltung der Hosts]
{related-end}


[#intro]
== Einleitung

_Dieser Artikel befindet sich im Draft-Status._
_Zurzeit enthält er im Wesentlichen nur die Kapitel zu Parents und Host-Gruppen, die zuvor im Artikel xref:hosts_setup#[Verwaltung der Hosts] enthalten waren._
_Wenn der Artikel fertig ist, soll er eine Übersicht über die verschiedenen Strukturierungselemente in {CMK} geben und ihre Gemeinsamkeiten und Unterschiede erläutern._
_Sie sollen dann alle Informationen zur Hand haben, um die für Ihre Umgebung passende Struktur aufzusetzen._

////
TK: Textbaustein für das Ende der Einleitung (ggf. um Predefined Conditions erweitern):
Besonders interessant sind die Strukturierungselemente, die in Regeln als Bedingungen ausgewählt werden können, also Ordner, Host-Merkmale und Labels.
Damit können Sie regelbasiert auf Ihre Struktur zugreifen und zum Beispiel (neue) Hosts automatisch in die für sie vorgesehenen Ordner sortieren.
////


[#folder]
== Ordner und Vererbung

[#folder_structure]
=== Mit Ordnern strukturieren
////
http://docs.dev.tribe29.com/master/de/hosts_setup.html#folder
http://docs.dev.tribe29.com/master/de/intro_setup_monitor.html#folders
////

Jeder, der mit Computern arbeitet, kennt Dateien und Ordner.
In {CMK} wird dieses bekannte Prinzip zur Strukturierung aufgenommen für Hosts, die in Ordner abgelegt werden.
Vordefiniert ist mit dem Ordner [.guihint]#Main# nur die Wurzel des Ordnerbaums.
In diesem Hauptordner landen Sie, wenn Sie [.guihint]#Setup > Hosts > Hosts# auswählen. 
Unterhalb des Hauptordners können Sie Ihre eigene Ordnerstruktur mit beliebig vielen Unterordnern als Host-Baum erstellen.
Oft genutzte Kriterien für den Aufbau des Host-Baums sind Standort, Technologie und Organisationsstruktur.

Über Ordner können Attribute an Unterordner und enthaltene Hosts *vererbt* werden.
Wie die Vererbung genau abläuft, erfahren Sie im Artikel über die xref:hosts_setup#inheritance[Verwaltung der Hosts.]
Vererbt werden alle Ordnerattribute, d.h. alle Host-Eigenschaften, die im [.guihint]#Setup# auf der Seite [.guihint]#Properties of host# angezeigt werden wie z.B. Monitoring-Agenten, Permissions, Management board -- aber auch andere Strukturierungselemente wie Host-Merkmale, Labels oder Parents.
Das ist nützlich für Attribute, die bei vielen Hosts gleich sind, z.B. ob der Host per {CMK}-Agent oder per SNMP überwacht werden soll.
Ein weiterer Vorteil der Vererbung von Ordnerattributen ist, dass Sie Ordner für die Aufnahme von Hosts vorbereiten können, die erst in Zukunft hinzukommen werden.
Einfach den neuen Host in den richtigen Ordner werfen und alle vordefinierten Attribute stimmen automatisch.

Um die Vorteile der Vererbung voll auszunutzen, hat es sich bewährt, als Erstes ein Ordnungssystem zu überlegen und dieses danach mit Inhalt zu füllen.
Sie beschäftigen sich also erst mit dem Aufbau der Ordner und ihrer Hierarchie.
Danach sortieren Sie die Hosts ein.

Das ist umso wichtiger, je größer die Umgebung ist, und je zahlreicher die Hosts sind.
Zwar kann eine einmal aufgesetzte Ordnerstruktur auch nachträglich geändert und etwa Ordner problemlos umbenannt werden.
Allerdings ist dabei Vorsicht geboten:
Das Verschieben eines Hosts in einen anderen Ordner kann nämlich zur Folge haben, dass sich dessen Attribute ändern, ohne dass Sie sich dessen vielleicht bewusst sind.

Eine Ordnerstruktur alleine kann aber nur in seltenen Fällen die Komplexität der Wirklichkeit abbilden.
Wenn Sie Ihre Hosts nach vielen _unterschiedlichen_ Kriterien organisieren wollen (oder müssen), dann bieten sich als Ergänzung die Host-Merkmale an, die im xref:host_tags[nächsten Kapitel] beschrieben werden.


[#folder_monitoring]
=== Die Ordnerstruktur im Monitoring

Die Baumstruktur, die sich durch die Ordner ergibt, ist auch in der xref:glossar#monitoring_environment[Monitoring-Umgebung] sichtbar.


[#filter_bar]
[discrete]
=== Filterleiste
Zum einen gibt es in in der Filterleiste der xref:glossar#view[Tabellenansichten] den Filter [.guihint]#Folder#, mit dem Sie die aktuelle Ansicht auf die Hosts unterhalb von einem bestimmten Ordner einschränken können.

Wie das folgende Bild zeigt, gibt es weitere Filter auch für andere Strukturierungselemente wie Host-Merkmale, Labels und Host-Gruppen  .

.In der Filterleiste haben Sie Zugriff auf diverse Strukturierungselemente
image::hosts_filterbar.png[alt="Tabellenansicht mit Filterleiste und ausgewählten Filtern für Strukturierungselemente.",width=60%]


[#tree_of_folders]
[discrete]
=== Tree of folders
Zum zweiten bietet in der xref:user_interface.html#sidebar[Seitenleiste] das Snapin [.guihint]#Tree of folders# die gleiche Auswahlmöglichkeit wie das xref:user_interface#monitor_menu[Monitor-Menü], aber kann zusätzlich noch die Anzeige auf einen Ordner einschränken:

.Das Snapin [.guihint]#Tree of folders# zeigt ganz unten die Ordnerstruktur an
image::hosts_treeoffolders_snapin.png[alt="Snapin Tree of folders.",width=50%]


[#host_tags]
== Host-Merkmale
////
http://docs.dev.tribe29.com/master/de/glossar.html#host_tag
http://docs.dev.tribe29.com/master/de/host_tags.html
http://docs.dev.tribe29.com/master/de/wato_rules.html#_host_merkmale
http://docs.dev.tribe29.com/master/de/wato_rules.html#_host_tags
http://docs.dev.tribe29.com/master/de/intro_finetune.html#host_tags
////

////
Host-Merkmale (englisch: host tags) sind Attribute, die Hosts zugeordnet werden können, um diese später etwa in der Konfiguration für Regeln gezielt ansprechen zu können.
Host-Merkmale sind in Gruppen eingeteilt, beispielsweise lässt sich eine Merkmalsgruppe Betriebssysteme mit den Merkmalen Linux und Windows einrichten.

Host-Merkmale (englisch: host tags) sind Schlagworte, die Hosts zugeordnet werden können, um diese zu strukturieren und zu organisieren, etwa nach Wichtigkeit, IP-Adressfamilie oder nach dem Weg, auf dem der Host seine Daten erhält. So werden Host-Merkmale über die Ordnerstruktur in Checkmk vererbt und können als Bedingung in einer Regel ausgewählt werden, um Hosts gezielt anzusprechen.

Wie für die Ordnerstruktur gilt: Eine Schema Für die Konfiguration großer Umgebungen ist es elementar, von Beginn an eine wohlüberlegte Ordnerstruktur aufzusetzen.
Nachträgliche Änderungen einmal eingerichteter Host-Merkmale sind möglich, sollten aber vermieden werden.

Die Kriterien, nach denen Host-Merkmale, wie auch Ordner, eingerichtet werden, sind geschlossen.
Host-Merkmale sind für Administratoren.
Host-Merkmale sind für die manuelle Zuordnung.

Monitoring: Snapin Virtual Host Tree
////


[#labels]
== Labels
////
http://docs.dev.tribe29.com/master/de/glossar.html#label
http://docs.dev.tribe29.com/master/de/labels.html
////

////
https://docs.checkmk.com/latest/de/wato_hosts.html#labels
TK: Input
Ein Host in {CMK} kann beliebig viele xref:labels#[Labels] haben.
Labels sind ähnlich wie xref:wato_rules.html#hosttags[Host-Merkmale] (_host tags_), müssen aber im Gegensatz zu diesen nicht vordefiniert werden, sondern Sie können diese frei vergeben.

Sie weisen dem Host ein Label zu, indem Sie zuerst [.guihint]#Labels# markieren. Klicken Sie dann in das Feld [.guihint]#Add some label#. Geben Sie die Label-Definition in der Form `Schlüssel:Wert` ein und schließen diese mit [Enter] ab. Mit dem Kreuzchen können Sie ein Label wieder entfernen.

image::hosts_labels.png[alt="Dialog mit Eigenschaften eines Hosts: Labels."]

Wenn Sie für ein Label eigentlich keinen Wert brauchen, sondern nur wissen wollen, ob an dem Host ein bestimmtes Label hängt oder nicht, vergeben Sie
z.B. einfach `yes` als Wert (`vm:yes`).
Falls Sie dieses Schema konsequent einhalten, haben Sie es später leichter, für solche Labels Bedingungen zu definieren.

Übrigens können Labels auch automatisch an Hosts gehängt werden:
zum einen durch externe Konnektoren, welche automatisch Hosts anlegen (z.B. automatisch erkannte Hosts in Cloud-Umgebungen), zum anderen durch Regeln.
////

////
Labels sind für Benutzer.
Labels sind für die automatische Zuordnung.
////


[#parents]
== Parents
////
http://docs.dev.tribe29.com/master/de/monitoring_basics.html#parents
////

////
Aber wie legt man Parents überhaupt an?
Die Antwort ist typisch {CMK}:
Es gibt unterschiedliche Vorgehensweisen: Manuell oder per Scan.
////


[#parents_structure]
=== Mit Parents strukturieren

Was Parents sind, und wie sie funktionieren, haben Sie bereits in den xref:monitoring_basics#parents[Grundlagen des Monitorings] erfahren.


[#parents_create_manual]
=== Parents manuell anlegen

Einen Parent für einen einzelnen Host legen Sie so fest:
Wählen Sie [.guihint]#Setup > Hosts > Hosts# und klicken Sie den gewünschten Host an, um seine Eigenschaften anzuzeigen.
Im Kasten [.guihint]#Basic settings# tragen Sie den Parent über seinen Namen oder die IP-Adresse ein.
Sobald ein Parent angegeben wird, erscheint ein weiteres Eingabefeld für einen zusätzlichen Parent:

.Bei der manuellen Zuweisung können auch mehrere Parents angegeben werden
image::hosts_properties_parents.png[alt="Dialog mit Eigenschaften eines Hosts: Parents."]

*Wichtig*: Geben Sie nur direkte Parent-Hosts ein.

Analog lassen sich Parents auch in den Eigenschaften von Ordnern festlegen und auf die beinhalteten Hosts vererben, wie es im obigen Kapitel über xref:folder[Ordner und Vererbung] steht.


[#parents_scan]
=== Parents per Scan anlegen lassen

Wenn Sie Ihr Monitoring frisch aufsetzen und von vorne herein sauber mit Ordnern und Parents planen, werden Sie mit der Parent-Vererbung über Ordner vermutlich gut zurecht kommen.
Sie können Parents aber auch über den [.guihint]#Parent scan# automatisch einrichten lassen.

Der Scan sucht über das IP-Protokoll auf dem Network Layer des OSI-Modells (Schicht 3) via `traceroute` nach dem letzten Gateway vor einem Host.
Wird ein solches Gateway gefunden und gehört dessen Adresse zu einem Ihrer überwachten Hosts, so wird dieser als Parent gesetzt.
Bekommt `traceroute` von den _Hops_ vor dem anvisierten Host keine Informationen, so wird der letzte erfolgreiche Hop verwendet.

Wird jedoch kein Gateway unter den überwachten Hosts gefunden, legt {CMK} per Default einen künstlichen „Ping-only-Host“ an, standardmäßig im Ordner [.guihint]#Parents#, der gleich mit erstellt wird.

Diese Standardeinstellung kann allerdings auch zu unerwünschten Ergebnissen führen:
Nehmen wir als Beispiel ein typisches, kleines Netzwerk mit dem Adressbereich _192.168.178.0/24._
Wird in das Monitoring nun ein Host mit einer Adresse aus einem anderen Adressbereich aufgenommen, der nicht angepingt werden kann, so versucht der Scan den Weg über den Router -- und findet dort nur den Knotenpunkt des Netz-Providers.
Und so könnte dann zum Beispiel ein Telekom-Server aus dem WAN-Bereich als Parent für diesen Host gesetzt werden.
Um dies zu vermeiden, können Sie die entsprechende Option vor dem Scan deaktivieren.

Wenn Sie einen Ordner mit neuen Hosts auf Parents scannen wollen, gehen Sie wie folgt vor:
Öffnen Sie zunächst den gewünschten Ordner und wählen Sie im Menü [.guihint]#Hosts > Detect network parent hosts#, um die Scan-Konfiguration zu öffnen.
Sie können übrigens auch, statt eines ganzen Ordners, nur eine Auswahl von Hosts scannen lassen, indem Sie diese vorher in der ersten Spalte der Liste auswählen.

.Der Scan bietet reichlich Optionen zur Konfiguration
image::hosts_parent_scan.png[alt="Dialog mit der Scan-Konfiguration für die Parents."]

Um alle Hosts in allen Unterordnern komplett neu einzuscannen, unabhängig von eventuell manuell gesetzten Parents, wählen Sie die Optionen [.guihint]#Include all subfolders# und [.guihint]#Scan all hosts#.
Im Bereich [.guihint]#Performance# können Sie die Scan-Dauer anpassen, die bei vielen Hosts recht lang ausfallen kann.

Unter [.guihint]#Creation of gateway hosts# bestimmen Sie, ob, wie und unter welchem Alias neu gefundene Parent-Hosts erzeugt werden.
Deaktivieren Sie die Funktion, wenn Sie Parents auf überwachte Hosts beschränken wollen.

Klicken Sie nun unten auf der Seite [.guihint]#Start#.
Die Ausgabe des Scans können Sie live mitverfolgen.

Anschließend sehen Sie die konfigurierten Parents sowie gegebenenfalls einen neuen Ordner [.guihint]#Parents# im [.guihint]#Main directory# (falls Sie dies vor dem Scan so angegeben haben).

.Im [.guihint]#Setup# werden die Parents in einer eigenen Spalte angezeigt
image::hosts_parents_list.png[alt="Liste der Hosts mit Anzeige der Parents."]

Damit ist der Scan abgeschlossen.


[#parents_monitoring]
=== Parents im Monitoring

Nach einem durchgeführten Scan und der Aktivierung der Änderungen werden die Parent-Child-Beziehungen als Topologie-Karte visualisiert, die Sie über [.guihint]#Monitor > Overview > Network topology# aufrufen können.

.Anzeige der Parent-Child-Beziehungen im Monitoring
image::hosts_parents_topology.png[alt="Aus den Parent-Child-Beziehungen umgesetzte Netztopologie.",width=55%]

*Tipp:* Wenn die Ergebnisse des Scans an einigen Stellen nicht plausibel erscheinen, ist ein manueller Aufruf von `traceroute` bisweilen hilfreich, um die einzelnen Hops nachzuvollziehen.


[#host_groups]
== Host-Gruppen
////
http://docs.dev.tribe29.com/master/de/glossar.html#host_group
http://docs.dev.tribe29.com/master/de/monitoring_basics.html#_host_und_servicegruppen
////

[#host_groups_using]
=== Mit Host-Gruppen arbeiten

Mit Host-Gruppen können eine Reihe von Hosts zusammenfassen, um diese im Monitoring anzeigen zu lassen.
So können Sie zum Beispiel alle Linux-, Windows- und bestimmte Application-Server gemeinsam betrachten, indem Sie für diese Server-Typen jeweils eine Host-Gruppe einrichten.

Eine Host-Gruppe wird über eine Regel befüllt. 
In der Bedingung dieser Regel können Sie, wie gewohnt, auf Ordner, Host-Merkmale und Labels zugreifen.
Host-Gruppen selbst tauchen *nicht* standardmäßig als Auswahlkriterien in Regeln auf, denn sie dienen nicht der Konfiguration, sondern den Ansichten.


[#host_groups_create]
=== Host-Gruppe erstellen

Sie finden die Host-Gruppen unter [.guihint]#Setup > Hosts > Host groups.#

Eine neue Host-Gruppe legen Sie über den Aktionsknopf [.guihint]#Add group# an.
Das Anlegen ist trivial und beschränkt sich auf die Vergabe eines eindeutigen Namens, der später nicht mehr geändert werden kann, und eines Alias:

.Mit Name und Alias ist die Host-Gruppe fertig konfiguriert
image::hosts_hostgroups_properties.png[alt="Dialog mit Eigenschaften einer Host-Gruppe."]


[#host_groups_include_hosts]
=== Hosts in Host-Gruppe aufnehmen

Um Hosts in Host-Gruppen aufzunehmen, bemühen Sie den xref:wato_rules#[Regelsatz] [.guihint]#Assignment of hosts to host groups#, den Sie unter [.guihint]#Setup > Hosts > Host monitoring rules# finden.
Legen Sie eine neue Regel an.

Zunächst wählen Sie im Kasten [.guihint]#Assignment of hosts to host groups# die Host-Gruppe aus, der Hosts zugeordnet werden sollen, im Beispiel etwa der Gruppe `My Linux servers`:

.Zur Auswahl werden die bereits erstellten Host-Gruppen angeboten
image::hosts_hostgroups_rule_assignment.png[alt="Dialog zur Auswahl der Host-Gruppe in einer Regel."]

Anschließend kümmern Sie sich im Kasten [.guihint]#Conditions# um den oder _die_ Filter, um die Gruppe einzuschränken -- denn Filter lassen sich natürlich auch kombinieren.
Sie können Hosts nach Ordnern, Host-Merkmalen und Host-Labeln filtern oder spezifische Hosts angeben.
Möchten Sie Hosts mit zwei Merkmalen aus ein und derselben Host-Merkmalsgruppe in die Host-Gruppe aufnehmen, müssen Sie zwei separate Regeln anlegen.
Generell sind die Gruppenzuordnungen kumulativ.
Hosts können in mehreren Gruppen sein und Gruppen von mehreren Regeln gefüllt werden.

Im folgenden Beispiel nutzen wir das von {CMK} automatisch zugewiesene Host-Label `cmk/os_family:linux`, um die Linux-Server der Host-Gruppe hinzuzufügen:

.Für die Festlegung der Bedingung werden u.a. Ordner, Host-Merkmale und Host-Labels angeboten
image::hosts_hostgroups_rule_conditions.png[alt="Dialog zur Festlegung der Bedingungen für die Zuweisung zur Host-Gruppe."]

Wie üblich, müssen Sie die Änderungen anschließend noch aktivieren.


[#host_groups_monitoring]
=== Host-Gruppen im Monitoring

[discrete]
==== Übersicht der Host-Gruppen

Das Ergebnis Ihrer Zuordnungen im [.guihint]#Setup# können Sie komfortabel im Monitoring überprüfen.
Unter [.guihint]#Monitor > Overview > Host groups# werden Ihnen die existierenden Host-Gruppen aufgelistet:

.Host-Gruppen im Monitoring
image::hosts_hostgroups_view.png[alt="Tabellenansicht der Host-Gruppen."]

Über einen Klick auf den Namen einer Host-Gruppe gelangen Sie zur vollständigen Ansicht der Hosts dieser Gruppe.

Abseits dieser Übersicht können Sie Host-Gruppen an mehreren Stellen einsetzen:
zur Erstellung von Tabellenansichten und NagVis-Karten sowie als Filter in Regeln für Benachrichtigungen und Alert Handler.


[discrete]
==== Tabellenansichten

Wichtig bei der Erstellung von xref:glossar#view[Tabellenansichten] (über [.guihint]#Customize > Visualization > Views#) ist lediglich die Auswahl einer Datenquelle ([.guihint]#Datasource#), die Host-Gruppen nutzt, z.B. [.guihint]#Host groups.#

Im [.guihint]#Monitor#-Menü finden Sie freilich bereits fertige Ansichten, beispielsweise [.guihint]#Host groups#, die wir bereits im vorherigen Abschnitt gezeigt haben.


[discrete]
==== NagVis-Karten

Auf xref:nagvis#[NagVis-Karten] können Sie mit dem Snapin [.guihint]#NagVis maps# der xref:user_interface#sidebar[Seitenleiste] zugreifen.
In einer NagVis-Karte bekommen Sie als Ergebnis beispielsweise die Zusammenfassung für eine Host-Gruppe per Hover-Menü über ein einzelnes Symbol:

.Zu den NagVis-Karten geht es über das Snapin [.guihint]#NagVis maps# der Seitenleiste
image::hosts_hostgroups_nagvis.png[alt="Anzeige einer Host-Gruppe in einer NagVis-Karte."]


[discrete]
==== Benachrichtigungen und Alert Handler

In den xref:glossar#rule_set[Regelsätzen] für xref:glossar#notification[Benachrichtigungen] und xref:alert_handlers#[Alert Handler] werden Ihnen die Host-Gruppen als Filter in den Bedingungen ([.guihint]#Conditions#) angeboten:

.Auswahl der Host-Gruppen in der Bedingung einer Benachrichtigungsregel
image::hosts_hostgroups_notifications_rule.png[alt="Dialog zur Auswahl von Host-Gruppen in einer Benachrichtigungsregel."]