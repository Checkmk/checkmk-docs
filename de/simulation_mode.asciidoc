include::global_attr.adoc[]
= Der Simulationsmodus
:revdate: 2017-10-02
:title: Der Simulationsmodus - Daten in {CMK} simulieren
:description: Um {CMK} ohne Netzwerkzugriff zu testen, können Sie mit Daten aus dem Cache den Betrieb simulieren. Wie das funktioniert, wird hier beschrieben.

{related-start}
link:omd_basics.html[Die Monitoring-Instanzen (Sites)]
link:wato_services.html[Services verstehen und konfigurieren]
link:commands.html[Kommandos]
{related-end}

== Grundlegendes

Mit dem Simulationsmodus können Sie die generelle Funktionalität von {CMK}
testen, ohne dass dabei Monitoring-Agenten auf Zielhosts kontaktiert werden. Das
kann z.B. von Vorteil sein, wenn Sie die xref:omd_basics#omd_cp_mv[Kopie] einer Instanz
xref:update#[updaten] und starten möchten, um eine neue Version von {CMK} zu
evaluieren. Konkret gelten in diesem Modus dann die folgenden Bedingungen:

* Alle Servicedaten werden -- sofern vorhanden -- aus xref:simulation_mode#files[gepufferten Dateien] bezogen und keine einzige Hostanfrage geht über das Netzwerk. Ein Betrieb einer einzelnen Site ist somit sogar komplett ohne Netzwerkzugriff möglich. Sollte keine Cache-Datei für einen Host zur Verfügung stehen, gehen die betroffenen Services in den Status {UNKNOWN}.
* Alle aktiven Netzwerkanfragen (Ping, HTTP, etc.) werden auf `127.0.0.1` „umgebogen“. Es werden also *alle* Hosts als {UP} betrachtet, sofern deren Status über Ping oder Smart-Ping festgestellt wird. HTTP-Checks versuchen, den Monitoringserver selbst zu kontaktieren -- was natürlich zu unterschiedlichen Resultaten führen kann.

Alle anderen Dinge in der Instanz laufen ganz normal weiter:

* *Benachrichtigungen* finden weiterhin statt! Schalten Sie am besten in Ihrer Testinstanz die Benachrichtigungen aus oder ändern Sie die Regeln so, dass nur Sie selbst alle Benachrichtigungen erhalten.
* Benachrichtigungen und SNMP-Traps in der Event Console werden weiter verarbeitet.
* Konfigurierte Backup-Jobs werden zu ihrem definierten Zeitpunkt ausgeführt.
* Hosts und Services auf anderen Instanzen werden in einer verteilten Umgebung weiterhin normal geprüft. Nur in einem verteilten Setup wird der Simulationsmodus an die anderen Remote-Instanzen weitergereicht.
* Performancedaten bleiben auf dem letzten Wert stehen, werden aber auch weitergeschrieben.


Da im Simulationsmodus nur noch bereits vorhandene Daten benutzt werden, werden sich die Checkresultate nicht mehr
ändern. Services, die also Performancecounter zu ihrer Funktion benötigen,
werden xref:monitoring_basics#checkintervall[stale].


== Aktivierung

Sie haben zwei Möglichkeiten, den Simluationsmodus zu einzurichten. Zum einen
ist es möglich den Modus direkt im Setup anzuschalten. Sie finden die
Option über [.guihint]#Setup > General > Global settings > Execution of checks > Simulation mode#:

image::omd_basics_simulation.png[]

Zum anderen können Sie den Simulationsmodus auch direkt in der
Konfigurationsdatei aktivieren. Das ist sinnvoll, wenn Sie eine Kopie erstellt
haben, und den Modus aktiveren wollen, bevor Sie die Site starten. In diesem
Fall fügen Sie in der kopierten Site manuell in der Datei `global.mk`
die entsprechende Zeile hinzu:

.etc/check_mk/conf.d/wato/global.mk
[{file}]
----
simulation_mode = True
----

Achten Sie darauf, dass das `True` groß geschrieben ist. Um die Änderung
wirksam zu machen, erzeugen Sie dann noch die Konfiguration für den Core
neu:

[{shell}]
----
{c-omd} cmk -U
Generating configuration for core (type cmc)...OK
----

Die Instanz kann nun gestartet werden, ohne dass echte Daten von den Hosts
geholt werden:

[{shell}]
----
{c-omd} omd start
Starting liveproxyd...OK
Starting mknotifyd...OK
Starting rrdcached...OK
Starting cmc...OK
Starting apache...OK
Initializing Crontab...OK
----


[#files]
== Dateien und Verzeichnisse

[cols="45,~"]
|===
|Pfad |Bedeutung 

|etc/check_mk/conf.d/wato/global.mk |Hier wird unter anderem der Simulationsmodus aktiviert. Ist der Wert `simulation_mode` in dieser Datei nicht gesetzt, wird der Standardwert (off) benutzt.
|tmp/check_mk/cache/ |Hier befinden sich die gepufferten Agentendaten. Das Verzeichnis ist leer, wenn noch nie Agentendaten geholt wurden. Da sich zudem alle Dateien unterhalb von `tmp/` in einer RAM-Disk befinden, wird das Verzeichnis nach einem Neustart ebenfalls leer sein.
|===



