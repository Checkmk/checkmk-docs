include::global_attr.adoc[]
= Google Cloud Platform (GCP) überwachen
:revdate: draft
:title: Google Cloud Platform (GCP) überwachen
:description: Wie Sie ohne Agent Google Cloud Run, Cloud SQL, Cloud Functions, GCE, GCS und Memorystore/Redis oder ihre Kosten überwachen und nahtlos in {CMK} integrieren, wird hier beschrieben.

{related-start}
xref:check_plugins_catalog#[Katalog der Check Plugins]
//SK: Hier sollte auch der Übersichtsartikel zu den Cloud-Checks verlinkt werden.
//xref:overview_cloud_checks#[Übersicht der Cloud-Checks]
xref:dcd#[Dynamische Host-Konfiguration]
{related-end}

== Einleitung

[{image-left}]
image::logo_google_cloud.png[width=140]

{CMK} enthält ein umfangreiches Monitoring von Google Cloud Platform (GCP), welches aus einem Konnektor zu GCP und einer stattlichen Sammlung von Check-Plugins besteht, die für Sie verschiedenste Metriken und Zustände abrufen und auswerten.

Neben den allgemeinen Informationen zu den Kosten die Ihrer Google Cloud und dem aktuellen Status der link:https://checkmk.com/de/integrations/gcp_health[Google-Dienste in Ihrer Region], können Sie mit allen Editionen von {CMK} ab Version {v22} die folgenden Google Cloud-Produkte überwachen:

* Cloud Load Balancing
* Cloud SQL
* Cloud Storage
* Compute Engine (GCE)

Mit der {CCE} können Sie darüber hinaus noch die folgenden Produkte in Ihr Monitoring aufnehmen:

* Cloud Functions
* Cloud Run
* Memorystore for Redis

//SK: Aktuell in der Katalog der Check-Plugins noch unvollständig.
Eine vollständige Auflistung aller verfügbaren Check-Plugins für die Überwachung von GCP finden Sie in unserem link:https://checkmk.com/de/integrations?tags=gcp[Katalog der Check-Plugins^].

== Konkrete Umsetzung der GCP-Überwachung

=== Hosts und Services

In {CMK} ordnen sich alle zu überwachenden Objekte in eine hierarchische Struktur von Hosts und Services ein.
Nun gibt es bei Cloud-basierten Diensten das Konzept von Hosts in dieser Form nicht.
Um die Einfachheit und Konsistenz von {CMK} zu bewahren, bilden wir GCP-Objekte auf das Schema Host/Service ab.
Jedes Ihrer Projekte in der Google Cloud wird dabei einem Host in {CMK} zugewiesen.
Alle Cloud-Produkte, die Sie in diesem Projekt überwachen möchten werden dann auf mehrere Services dieses Hosts aufgeteilt.

Ein kleines Projekt in dem nur eine Compute-Engine-VM läuft, kann dann in der Überwachung in Checkmk so aussehen:

image::monitoring_gcp_example_host.png[]


=== Zugriff auf GCP

GCP stellt eine HTTP-basierte API bereit, über die auch Monitoring-Daten abrufbar sind.
{CMK} greift auf diese API über den Spezialagenten `agent_gcp` zu, welcher an die Stelle des {CMK}-Agenten tritt, aber anders als dieser lokal auf dem {CMK}-Server ausgeführt wird.


== GCP vorbereiten

=== Benutzer anlegen

Melden Sie sich in der link:https://console.cloud.google.com[Konsole von Google Cloud] an.
Achten Sie darauf, dass in der Titelzeile das korrekte Projekt ausgewählt ist bzw. wählen Sie hier das zu überwachende Projekt aus.

Öffenen Sie als nächstes die Benutzerverwaltung unter [.guihint]#IAM & Admin#.
In der Übersicht auf der linken Seite müssen Sie nun [.guihint]#Servcie Accounts# auswählen und dann oben auf [.guihint]#Create Service Account# klicken.
Legen Sie anschließend einen Namen für den Service Account festlegen.
Wir empfehlen hier einen Namen zu vergeben der sofort klar macht, wofür dieser Account da ist, bpsw. `checkmk-monitoring`.
Zusätzlich zu einem sprechenden Namen können Sie optional noch Beschreibung - eine Service Account Description - angeben.
Nach einem Klick auf [.guihint]#Create and continue# müssen Sie diesem Service-Account noch die beiden Rollen _Monitoring Viewer_ und _Cloud Asset Viewer_ zuweisen.
Klicken Sie dafür jeweils in das Feld [.guihint]#Select a role# und geben Sie den Rollennamen ein.

*Achtung:* Wenn Sie _Monitoring Viewer_ in das Feld eingeben, werden Ihnen eine ganzwe Reihe Rollen mit ähnlichen Namen angezeigt.
Achten Sie darauf tatsächlich _Monitoring Viewer_ zu wählen.

Nach der Auswahl der Rollen, können Sie den nächsten optionalen Schritt überspringen und direkt auf [.guihint]#Done# klicken.

=== Schlüssel erzeugen

Damit Sie über diesen neuen Service Account auch tatsächlich auf die Monitoring- und Asset-Daten Ihrer Google Cloud zugreifen können, müssen Sie noch einen Schlüssel erzeugen, welchen Sie später in der entsprechenden Regel in {CMK} bzw. im [.guihint]#Password store# hinterlegen müssen.

In der Übersicht [.guihint]#Service accounts for project My Project# können Sie dazu in der Zeile Ihrem neuen Service Account auf die drei Punkte klicken und dort [.guihint]#Manage keys# auswählen.
Klicken Sie sodann auf [.guihint]#Add key# und dann auch [.guihint]#Create new key#.
Wählen Sie also Format unbedingt `JSON` aus und klicken Sie auf [.guihint]#Create#.
Mit diesem Klick auf [.guihint]#Create# wird - leicht übersehbar - eine Datei im JSON-Format heruntergeladen.
Bewahren Sie diese Datei vorübergehend gut auf, da Sie sie *nicht* erneut herunterladen können.
Wir empfehlen allerdings auch diese Datei, nachdem Sie deren Inhalt in {CMK} hinterlegt haben (siehe xref:agent_rule[Regel für GCP-Agenten anlegen]), zu löschen.
Bei Bedarf sollte einfach ein neuer Schlüssel erzeugt und der alte gänzlich verworfen werden.

[#enable_apis]
=== APIs im GCP-Projekt aktivieren

Auf der Übersichtsseite Ihres GCP-Projekts finden Sie auch den Menüpunkt [.guihint]#APIs & Services#.
Überprüfen Sie in dieser Übersicht, ob die `Cloud Asset API` in der Liste der [.guihint]#Enabled APIs & services# auftaucht.
Wenn dem nicht der Fall ist, aktivieren Sie diese API über den Knopf [.guihint]#Enable APIs and services#.
Nach der Aktivierung dauert es noch einige Minute bis die API auch tatsächlich ansprechbar ist.


=== Zugriff auf Billing-Informationen

//SK: Hier fehlen noch Informationen. Ich gehe mal davon aus, dass der Service account aus aus dem zu überwachenden Projekt die Rolle BigQuery Data Viewer in dem Billing-Projekt benötigt. Und nicht in dem eigentlich zu überwachenden Projekt.

== Monitoring in {CMK} konfigurieren

=== Host für GCP in {CMK} anlegen

[#agent_rule]
=== Regel für GCP-Agenten anlegen

=== Services auf dem GCP-Host selbst


== Diagnosemöglichkeiten

=== 403 Cloud Asset API has not been used

Wenn Sie während der Einrichting der Überwachung im Service Check_MK Ihres GCP-Hosts die folgende Fehlermeldung sehen, müssen Sie die Cloud Asset API noch xref:enable_apis[wie oben beschrieben] in Ihrem Projekt aktivieren.

Fehlermeldung im Service Check_MK: 403 Cloud Asset API has not been used in project `nnnnnnnnnnnnnn` before or it is disabled.

//SK: Fehlermeldung: Agent exited with code 1: Caught unhandled RuntimeError(storage.googleapis.com/api/request_count) in /omd/sites/heute/lib/python3/cmk/special_agents/utils/agent_common.py:135