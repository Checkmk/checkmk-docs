include::global_attr.adoc[]
= Google Cloud Platform (GCP) überwachen
:revdate: draft
:title: Google Cloud Platform (GCP) überwachen
:description: Wie Sie ohne Agent Google Cloud Run, Cloud SQL, Cloud Functions, GCE, GCS und Memorystore/Redis oder ihre Kosten überwachen und nahtlos in {CMK} integrieren, wird hier beschrieben.

{related-start}
xref:check_plugins_catalog#[Katalog der Check Plugins]
//SK: Hier sollte auch der Übersichtsartikel zu den Cloud-Checks verlinkt werden.
//xref:overview_cloud_checks#[Übersicht der Cloud-Checks]
xref:dcd#[Dynamische Host-Konfiguration]
{related-end}

== Einleitung

[{image-left}]
image::logo_google_cloud.png[width=140]

{CMK} enthält ein umfangreiches Monitoring von Google Cloud Platform (GCP), welches aus einem Konnektor zu GCP und einer stattlichen Sammlung von Check-Plugins besteht, die für Sie verschiedenste Metriken und Zustände abrufen und auswerten.

Neben den allgemeinen Informationen zu den Kosten die Ihrer Google Cloud und dem aktuellen Status der link:https://checkmk.com/de/integrations/gcp_health[Google-Dienste in Ihrer Region], können Sie mit allen Editionen von {CMK} ab Version {v22} die folgenden Google Cloud-Produkte überwachen:

* Cloud Load Balancing
* Cloud SQL
* Cloud Storage
* Compute Engine (GCE)

//SK: Der folgende (haha) Satz ist nicht schön und wird noch geändert. TODO

Mit der {CPE} können Sie darüber hinaus noch folgenden Produkte in Ihr Monitoring aufnehmen:

* Cloud Functions
* Cloud Run
* Memorystore for Redis

//SK: Aktuell in der Katalog der Check-Plugins noch unvollständig.
Eine vollständige Auflistung aller verfügbaren Check-Plugins für die Überwachung von GCP finden Sie in unserem link:https://checkmk.com/de/integrations?tags=gcp[Katalog der Check-Plugins^].

== Konkrete Umsetzung der GCP-Überwachung

=== Hosts und Services

In {CMK} ordnen sich alle zu überwachenden Objekte in eine hierarchische Struktur von Hosts und Services ein.
Nun gibt es bei Cloud-basierten Diensten das Konzept von Hosts nicht. Um die Einfachheit und Konsistenz von {CMK} zu bewahren, bilden wir dennoch GCP-Objekte auf das Schema Host/Service ab.

Wie das geht, zeigt am besten ein Beispiel:


=== Zugriff auf GCP

GCP stellt eine HTTP-basierte API bereit, über die auch Monitoring-Daten abrufbar sind.
{CMK} greift auf diese API über den Spezialagenten `agent_gcp` zu, welcher an die Stelle des {CMK}-Agenten tritt, aber anders als dieser lokal auf dem {CMK}-Server ausgeführt wird.


== GCP vorbereiten

=== Benutzer anlegen

=== Berechtigungen

=== Schlüssel

=== Zugriff auf Billing-Informationen

== Monitoring in {CMK} konfigurieren

=== Host für GCP in {CMK} anlegen

[#agent_rule]
=== Regel für GCP-Agenten anlegen

=== Services auf dem GCP-Host selbst