// -*- coding: utf-8 -*-
include::global_attr.adoc[]
= Verwaltung der Hosts
:revdate: draft
:title: Verwaltung der Hosts - Die zu überwachenden Systeme verwalten
:description: Skalierbarkeit gehört zum Grunddesign von {CMK}. Welche Möglichkeiten es gibt, Hosts leicht zu pflegen und zu strukturieren, erfahren Sie hier. 

{related-start}
xref:wato#[Die Konfiguration von {CMK}]
xref:wato_rules#[Host- und Serviceparameter]
xref:wato_services#[Services verstehen und konfigurieren]
{related-end}

[#intro]
== Einleitung

Die wichtigste Aufgabe beim Einrichten des Monitorings ist das Verwalten der zu überwachenden Systeme -- der xref:glossar#host[_Hosts_.]
Dabei geht es nicht nur darum, dass diese mit den richtigen Stammdaten (z.B. Host-Name, IP-Adresse) eingetragen sind.
Auch Einstellungen für das Monitoring (z.B. Benachrichtigungen, Schwellwerte, usw.) wollen gepflegt werden.

{CMK} wurde von Anfang an für Umgebungen mit sehr vielen Hosts entworfen.
Um hier die Konfiguration für den Nutzer beherrschbar zu machen, verfolgt {CMK} einen anderen Ansatz als alle anderen Systeme,
die aus dem Ökosystem von Nagios heraus entstanden sind.
Die wichtigsten Prinzipien sind:

* Eine xref:folder[Hierarchie von Ordnern], in denen Hosts abgelegt werden.
* xref:glossar#host_tag[Host-Merkmale] (englisch: _host tags_) und eine darauf aufbauende xref:wato_rules#[regelbasierte] Konfiguration.
* Automatische Erkennung der zu überwachenden xref:wato_services#[Services.]

Generell hat es sich bewährt, sich als erstes ein Ordnungssystem zu überlegen und dieses danach mit Inhalt zu füllen.
Konkret bedeutet das also, sich erst mit dem Aufbau der Ordner und ihrer Hierarchie zu befassen und danach die Hosts einzusortieren.
// TK: Merker für später: Hier muss auf die hosts_structure verwiesen werden, in denen die Ordnungssysteme (von denen Ordner nur eines sind) vorgestellt werden.

[#folder]
== Ordner und Vererbung

Jeder, der mit Computern arbeitet, kennt das Prinzip von Dateien und Ordnern.
{CMK} verwendet ein analoges Prinzip für die Verwaltung der Hosts, welche quasi die Rolle der Dateien übernehmen.
Da Ordner auch selbst in Ordnern enthalten sein können, ergibt sich eine Baumstruktur.


=== Hierarchie der Ordner

In der Ausgestaltung der Baumstruktur sind Sie völlig frei. Jede Form der Unterscheidung ist möglich.
Drei Kriterien für den Aufbau des Host-Baums sind jedoch verbreitet:

* *Standort* (z.B. München versus Shanghai)
* *Host-Typ* (z.B. Switch versus Loadbalancer)
* *Organisationsstruktur* (z.B. Datenbankgruppe versus Netzwerker)

Natürlich können Sie die Kriterien auch mischen, also z.B. in der ersten Ebene des Baums nach Standort aufteilen und in der zweiten dann nach Host-Typen.

Wenn Sie einfache Dinge lieben, sollten Sie die Hosts nur in die „Blätter“ des Baums packen (auch wenn {CMK} Hosts in mittleren Ordnern erlaubt).
Folgendes Beispiel zeigt eine einfache Baumstruktur nach Host-Typ:
Die Hosts A, B und C sind im Ordner „Servers“ und D, E und F im Ordner „Network“ eingeordnet:

image::wato_folders_step_2.png[alt="Illustration einer Ordnerstruktur mit zwei Unterordnern.",width=430px]


[#inheritance]
=== Vererbung von Attributen

Wenn Sie den Baum geschickt aufbauen, können Sie ihn nutzen, um sinnvoll Attribute zu vererben.
Das ist vor allem bei solchen Attributen nützlich, die bei großen Gruppen von Hosts gleich sind, wie z.B. die SNMP-Community oder Host-Merkmale (_host tags_), mit denen Sie festlegen, ob der Host per {CMK}-Agent oder per SNMP überwacht werden soll.

Folgendes Beispiel zeigt die Vererbung der Merkmale „Criticality“ (mit den Werten `prod` und `test`) und „{CMK} agent“ (mit den Ausprägungen `tcp` und `no-agent`). Das Merkmal `tcp` wird dabei automatisch gesetzt, wenn der {CMK}-Agent und/oder eine API-Integration ausgewählt ist, während `no-agent` die Option der Wahl ist, wenn über SNMP überwacht werden soll.

image::wato_folders_step_4.png[alt="Illustration einer Ordnerstruktur mit zugewiesenen Attributen auf unterschiedlichen Ebenen.",width=500px]

Weiter unten im Baum definierte Attribute haben immer Vorrang.
Direkt beim Host festgelegte Werte überschreiben also alles, was von den Ordnern kommt.
In obigem Beispiel ergeben sich so für den Host A die Merkmale `prod` und `tcp`, für D `prod` und `no-agent` und für den Host F wegen des expliziten Attributs die Werte `test` und `no-agent`.

Ein großer Vorteil dieses Schemas gegenüber dem weit verbreiteten „Copy & Paste“-Ansatz von datenbankorientierten Konfigurationssystemen:
Sie können Attribute auch für solche Hosts festlegen, die erst *in Zukunft* hinzukommen werden.
Das macht die Arbeit für Sie (und Ihre Kollegen) leichter:
Einfach den neuen Host in den richtigen Ordner werfen und alle vordefinierten Attribute stimmen automatisch.

[#create_hosts]
== Hosts im Setup erstellen und bearbeiten

Zur Verwaltung der Ordner und Hosts gelangen Sie mit [.guihint]#Setup > Hosts > Hosts:#

image::hosts_main_directory.png[alt="Ordneransicht 'Main directory' mit mehreren Unterordnern."]

In der Standardansicht sehen Sie hier die (zu Beginn leere) Übersicht der Ordner und darunter tabellarisch die bereits im Monitoring vorhandenen Hosts.
Das Anlegen eines neuen Hosts mit dem Aktionsknopf icon:icon_new[] [.guihint]#Add host#, das icon:icon_clone[alt="Symbol zum Klonen eines Listeneintrags."] Klonen oder das icon:icon_edit[alt="Symbol zum Bearbeiten eines Listeneintrags."] Editieren eines bestehenden Hosts bringt Sie zu der Seite mit den Attributen des Hosts.
Diese sind in mehreren Abschnitten gruppiert, von denen wir hier die wichtigsten vorstellen.

=== Der Host-Name

Das Feld [.guihint]#Hostname# dient überall innerhalb von {CMK} zur eindeutigen Identifizierung des Hosts.
Wenn möglich sollten Sie den DNS-Namen des Hosts verwenden.
Ist der DNS-Name zu sperrig, können Sie später einen leichter erkennbaren Aliasnamen vergeben.

Änderungen am Host-Namen sind prinzipiell auch später möglich.
Da der Host-Name jedoch an vielen Stellen in {CMK} verwendet wird, sind Änderungen aufwändiger je mehr Monitoring-Daten zum Zeitpunkt der Änderung schon angefallen sind.

image::hosts_new_host_1.png[alt="Dialog mit Eigenschaften eines Hosts: der Host-Name."]

[#dns]
=== Alias und IP-Adresse

Sie können unter [.guihint]#Alias# einen alternativen, beschreibenden Namen für den Host vergeben, welcher an vielen Stellen in der GUI und in Berichten angezeigt wird.
Vergeben Sie keinen Alias, so wird stattdessen der Host-Name verwendet.

image::hosts_new_host_2.png[alt="Dialog mit Eigenschaften eines Hosts: Alias und IP-Adresse."]

Eine IP-Adresse müssen Sie nicht zwangsläufig angeben.
Allerdings kann es sinnvoll sein, selbst bei Verwendung eines auflösbaren Host-Namens, diesen noch einmal in das Feld IP-Adresse einzutragen.

Für die Konfiguration der IP-Adresse haben Sie vier Möglichkeiten, die auch den Zeitpunkt der Namensauflösung bestimmen:

[cols="5,65,~", options="header"]
|===
|Möglichkeit |Vorgehen |Namensauflösung wird wann durchgeführt?
|1. |Sie geben _keine_ IP-Adresse an. Der Host-Name muss per DNS auflösbar sein. |beim xref:wato#activate_changes[Aktivieren der Änderungen]
|2. |Sie geben eine IPv4-Adresse ein -- in der üblichen Punkt-Notation. |nie
|3. |Sie geben anstelle einer IP-Adresse einen alternativen Host-Namen ein, welcher per DNS auflösbar ist. |beim Ausführen der Checks
|4. |Über den xref:wato_rules#[Regelsatz] [.guihint]#Hosts with dynamic DNS lookup during monitoring# bestimmen Sie Hosts für ein dynamisches DNS. Das Resultat ist analog zu 3, nur dass für die DNS-Anfrage jetzt das Feld [.guihint]#Hostname# verwendet wird. |beim Ausführen der Checks
|===

Bei der ersten Möglichkeit verwendet {CMK} eine Cache-Datei, um wiederholte DNS-Anfragen während der Aktivierung der Änderungen zu vermeiden.
Dieser Cache ist sehr wichtig für die Beschleunigung des Vorgangs.
Außerdem sorgt er dafür, dass Sie eine geänderte Konfiguration auch dann aktivieren können, wenn das DNS einmal nicht funktioniert.

Der Haken ist, dass {CMK} die Änderung einer IP-Adresse im DNS nicht sofort mitbekommt.
Deswegen gibt es in den Eigenschaften des Hosts (auf der Seite [.guihint]#Properties of host#) den Menüeintrag [.guihint]#Hosts > Update DNS cache#, welcher den kompletten DNS-Cache löscht und beim nächsten Aktivieren der Änderungen eine neue Auflösung erzwingt.
Diese Datei liegt in Ihrer Instanz unter `~/var/check_mk/ipaddresses.cache`.
Das Löschen dieser Datei hat den gleichen Effekt wie die Ausführung von [.guihint]#Update DNS cache#.

{CMK} unterstützt auch Monitoring via IPv6 -- auch im Dualstack.
Die Rangfolge der Auflösung ist hier durch die Betriebssystemeinstellungen (`/etc/gai.conf`) vorgegeben.
In den Feldern [.guihint]#Additional IPv4 addresses# respektive [.guihint]#Additional IPv6 addresses# sind nur IP-Adressen in Punkt- beziehungsweise Doppelpunkt-Notation zugelassen, keine alternativen DNS-Namen.


=== Monitoring-Agenten

Mit den [.guihint]#Monitoring agents# entscheiden Sie, aus welchen Quellen Daten fürs Monitoring verwendet werden.
Die Standardeinstellung sieht die Verwendung des xref:wato_monitoringagents#[{CMK}-Agenten] vor, darüber hinaus sind zahlreiche alternative oder zusätzliche Überwachungsmöglichkeiten vorgesehen.

Insbesondere das erste Dropdown-Menü entscheidet, welche Daten bei Vorhandensein mehrerer Quellen herangezogen und welche verworfen werden.

image::hosts_new_host_agents.png[alt="Dialog mit Eigenschaften eines Hosts: Monitoring-Agenten."]

Im Dropdown-Menü [.guihint]#{CMK} agent / API integrations# haben Sie folgende Auswahlmöglichkeiten:

[cols="30,~"]
|===
|[.guihint]#API integrations if configured, else {CMK} agent# (Standard) | Monitoring-Daten werden von xref:glossar#api_integrations[Spezialagenten oder Piggyback] von anderen Hosts geliefert. Sind diese nicht konfiguriert, wird auf die Ausgabe eines Monitoring-Agenten zugegriffen.
|[.guihint]#Configured API integrations and {CMK} agent# | Die Ausgabe eines Monitoring-Agenten wird erwartet. Per Piggyback oder von Spezialagenten gelieferte Daten werden – falls konfiguriert – zusätzlich herangezogen.
|[.guihint]#Configured API integrations, no {CMK} agent#  | Ausschließlich per Piggyback oder von Spezialagenten gelieferte Daten werden für das Monitoring herangezogen.
|[.guihint]#No API integrations, no {CMK} agent# | Ein solcher Host wird agentenlos und nur mit xref:active_checks#[aktiven Checks] oder per xref:glossar#snmp[SNMP] überwacht. Regeln dafür finden Sie u.a. in [.guihint]#Setup > Hosts > HTTP, TCP, Email, ...#. Wenn Sie nicht mindestens einen aktiven Check definieren, erzeugt {CMK} automatisch einen PING-Service. Diese Einstellung finden Sie als Option unter [.guihint]#{CMK} agent / API integrations.#
|===

Mit der folgenden Einstellung [.guihint]#SNMP# konfigurieren Sie die Überwachung per xref:snmp#[SNMP].
Diese Auswahl lässt unterhalb von [.guihint]#SNMP# das Feld [.guihint]#SNMP credentials# auftauchen, mit dem Sie die SNMP-Community festlegen können.
Da diese meist für viele Hosts gleich ist, empfiehlt es sich aber eher, diese xref:folder#[Einstellung im Ordner] zu hinterlegen.
Wenn Sie gar nichts spezifizieren, wird automatisch `public` angenommen.

Das letzte Feld [.guihint]#Piggyback# bezieht sich auf die Verwendung von xref:piggyback#[Piggyback-Daten], welche durch andere Hosts "huckepack" geliefert und als Agentenausgabe diesem Host zugeordnet werden.
Beachten Sie, dass die hier vorgenommene Einstellung zu den Einstellungen des ersten Dropdown-Menüs [.guihint]#Checkmk agent / API integrations# passen muss.
Es kann sonst vorkommen, dass das Ausbleiben erwarteter Monitoring-Daten nicht bemerkt wird.
Aus diesem Grund lautet ein Eintrag explizit  [.guihint]#Always use and expect piggyback data#.

Sollen nur von Spezialagenten gelieferte oder per Piggyback empfangene Daten ausgewertet werden, sorgt die Auswahl [.guihint]#Configured API integrations, no Checkmk agent# dafür, dass die beiden Dienste [.guihint]#Check_MK# und  [.guihint]#Check_MK Discovery# immer den Zustand {OK} annehmen.
Bei Hosts ohne eigene IP-Adresse genügt dies jedoch nicht, da kein Ping durchgeführt werden kann.
Sie müssen hier über eine Regel [.guihint]#Setup > Hosts > Host monitoring rules > Host Check Command# bestimmen, wie geprüft werden soll, dass der Host als {UP} bewertet wird. 


[#customattributes]
=== Custom attributes
 
Mit den "Custom attributes" können Sie beliebige Freitextfelder definieren.
In den Standardeinstellungen sind hier _Labels_, _Criticality_ und _Networking segment_ vorhanden.

image::hosts_new_host_attributes.png[alt="Dialog mit Eigenschaften eines Hosts: Custom attributes."]

Sie können jedoch über [.guihint]#Setup > Hosts > Custom host attributes# eigene definieren.

image::hosts_setup_custom_attributes.png[alt="Formular zum Erstellen neuer _Custom attributes_."]

Custom attributes können beispielsweise ein Vor-Ort-Kontakt, eine Filialnummer, Informationen zur Hardware, Inventarnummern, geographische Koordinaten… sein.
Werte der Custom attributes sollten in erster Linie menschlichen Nutzern den Überblick erleichtern, können jedoch auch in Regeln und Filtern eingesetzt werden, wenn beispielsweise xref:draft_host_tags#[Tags oder Labels] zu unflexibel sind.
Custom attributes können jedem Abschnitt (Dropdown [.guihint]#Topic#) der Eigenschaften eines Hosts zugeordnet werden.



=== Management board

Die Bezeichnung "Management-Board" steht für separate Steckkarten oder erweiterte BIOS-Funktionalität (Baseboard Management Controller/BMC, Management Engine/ME) zur Überwachung und Verwaltung der Hardware neben dem installierten Betriebssystem.
Derartige Hardware bringt neben Fernsteuerungs- und Fernwartungsfunktionen (bspw. für das Deployment von Betriebssystemen) meist auch eine IPMI- oder SNMP-Schnittstelle mit, über die Gesundheitswerte (Temperaturen und Lüfterdrehzahlen) ausgelesen werden können.
Da Management-Boards über eine eigene IP-Adresse verfügen, würde separates Monitoring die Zuordnung für {CMK}-Nutzer erschweren.
Tragen Sie hier IP-Adresse und Zugriffsmethode ein, wenn der zu überwachende Host über ein Management-Board verfügt.

=== Erstellung / Sperrung (Creation / Locking)

Während die meisten vorher beschriebenen Angaben bearbeitet werden können, stehen im Abschnitt [.guihint]#Creation / Locking# Angaben, die an dieser Stelle nur der Information dienen.

image::hosts_setup_creation_locking.png[alt="Anzeige der Erstell- und Sperrinformationen."]

Zeitpunkt der Erstellung ([.guihint]#Created at#) und Erstellername ([.guihint]#Created by#) werden von Checkmk ermittelt. Für den Erstellernamen gibt es im Wesentlichen drei Möglichkeiten:

* _automation_: der Host wurde durch den xref:wato_user#automation[Automationsbenutzer] erstellt, z.B. auf der Kommandozeile
* _Network scan_: der Host wurde bei einem automatischen xref:folder_network_scan[Netzwerk-Scan] gefunden
* Benutzername, z.B. _cmkadmin_: der Host wurde manuell durch einen Benutzer, zum Beispiel im xref:wato_hosts#create_hosts[Setup], erstellt

Wenn der Host durch den Automationsbenutzer erstellt wurde, ist er durch die zugehörige Instanz gesperrt ([.guihint]#Locked by#). Diese Angabe kann auch für die xref:search[Suche nach Hosts im Setup] genutzt werden. 

Attribute, die hier in den [.guihint]#Locked attributes# stehen, können in den Eigenschaften des Hosts nicht mehr bearbeitet werden.
//SP: Man kann im dcd festlegen, welche Attribute hierfür übergeben und damit blockiert werden. Nach Erweiterung des dcd Artikels hier Link hinzufügen.

=== Speichern und weiter

Beim Erstellen oder Klonen eines Hosts ist nach der Festlegung der Eigenschaften der nächste sinnvolle Schritt [.guihint]#Save & go to service configuration.#
Damit gelangen Sie in die automatische Service-Erkennung, die wir im nächsten Kapitel erklären.

Dagegen bringt Sie [.guihint]#Save & go to connection tests# zum Verbindungstest. Damit können Sie zuerst einmal testen, ob Sie mit den festgelegten Einstellungen überhaupt Daten von dem Host - sei es per Agent oder was auch immer Sie vorher konfiguriert haben - bekommen.
Einzelheiten zum Verbindungstest finden Sie im xref:wato_monitoringagents#diagnosticpage[Artikel über die Monitoring-Agenten].

[#bulk_operations]
=== Bulk-Aktionen

Gelegentlich kommt es vor, dass Sie Dinge wie Löschen, Verschieben, Editieren oder Service-Erkennung für eine ganze Reihe von Hosts gleichzeitig
durchführen möchten.
Dazu gibt es in {CMK} die sogenannten „Bulk-Aktionen“.

Sie finden diese Aktionen auf der Seite eines geöffneten Ordners im Menü [.guihint]#Hosts# im Abschnitt [.guihint]#On selected hosts#:

image::hosts_bulk_actions.png[alt="Menü 'Hosts' mit den Bulk-Aktionen.",width=40%]

Die Aktionen beziehen sich immer auf die Hosts, die direkt im angezeigten Ordner liegen -- und von Ihnen ausgewählt wurden. 
Dazu dienen die Checkboxen in der ersten Spalte der Host-Liste. 
Wenn Sie das Kreuz im Spaltentitel anklicken, werden alle Hosts ausgewählt -- und nach erneutem Klick wieder abgewählt.

Hier einige Hinweise zu den angebotenen Aktionen:

* [.guihint]#Delete hosts# - Löscht die Hosts -- nach Bestätigung der Nachfrage.

* [.guihint]#Edit attributes# - Ändert ein oder mehrere Attribute der Hosts.
Das Attribut wird dadurch in die Hosts explizit eingetragen.
+
*Achtung:* Es ist ein Unterschied, ob ein Host ein Attribut von einem Ordner erbt oder es explizit gesetzt ist, wie durch diese Aktion.
Warum? In letzterem Fall wird eine Änderung der Attribute im Ordner keine Wirkung haben, da Werte, die direkt beim Host festgelegt sind, immer Vorrang haben. Aus diesem Grund gibt es auch die folgende Aktion.

* [.guihint]#Remove explicit attribute settings# - Entfernt von den Hosts explizite Attribute und setzt die Vererbung wieder in Kraft.
Das Gleiche würden Sie erreichen, wenn Sie jeden Host einzeln auswählen und die Checkboxen bei den betroffenen Attributen abwählen würden.
+
Generell ist es eine gute Idee, so wenig explizite Attribute wie möglich zu verwenden.
Wenn alles korrekt über die Ordner vererbt wird, vermeidet das Fehler und ermöglicht das bequeme Aufnehmen von neuen Hosts.

* [.guihint]#Discover services# - xref:wato_services#bulk_discovery[Service-Erkennung für viele Hosts] gleichzeitig durchführen.

* [.guihint]#Detect network parent hosts# - xref:parents_scan[Parents per Scan] anlegen lassen.

* [.guihint]#Move to other folder# - Verschiebt die Hosts in einen anderen Ordner. Nach Auswahl dieses Eintrags werden Ihnen die bestehenden Ordner als mögliche Ziele angeboten.
//SP: Ich habe noch eine Option "Remove TLS registration". Ist diese auch relevant?


include::include_hosts_setup_services.asciidoc[]

include::include_hosts_setup_import.asciidoc[]

include::include_hosts_setup_folder_network_scan.asciidoc[]

include::include_hosts_setup_search.asciidoc[]

include::include_hosts_setup_rename.asciidoc[]

include::include_hosts_setup_rest_api.asciidoc[]

include::include_hosts_setup_files.asciidoc[]
