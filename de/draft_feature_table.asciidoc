// -*- coding: utf-8 -*-
// IGNORE Benachrichtigungs Elter Graphensammlungen Graphings Inventardaten Komponentenbenennung Pre Tunings Unstetigkeitserkennung Übersichts
include::global_attr.adoc[]
= Feature-Übersicht
:revdate: draft
:title: Feature-Unterschiede der {CMK}-Editionen
:description: Die unterschiedlichen {CMK}-Editionen bieten einen unterschiedlichen Feature-Umfang, dieser Artikel bietet einen Überblick 

{related-start}
{related-end}

== Einleitung

// FIXME: Links hinzufügen
Die verschiedenen Editionen von {CMK} bieten einen unterschiedlichen Feature-Umfang.
Diese Seite versucht, einen vollständigen Überblick auf technischer Ebene zu verschaffen, der als Entscheidungshilfe bei der Wahl der eingesetzten Edition dienen kann.
Daneben soll sie helfen, beim xref:update#[Wechsel der Edition] – egal, ob Up- oder Downgrade – abzuschätzen, welche Einstellungsänderungen notwendig oder sinnvoll ist.

Diese Übersicht kann und soll kein Marketing- oder Pre-Sales-Material ersetzen.

Die Gliederung nach Komponenten mag in erster Linie Nutzer von {CMK} und verwandten Monitoring-Systemen ansprechen, welche bereits Kenntnisse des Systemaufbaus haben.
Wir versuchen dennoch, durch Links zur Dokumentation der benannten Komponente einen schnellen Überblick über ihren Scope zu gewähren.

Zunächst enthält diese Seite nur Unterschiede zwischen {RE} und {SE}.
Unterschiede zwischen {SE} und {CE} werden zu gegebener Zeit nachgetragen.

== Unterschiede an den Komponenten

[#core]
=== Monitoring-Kern

Dieser Abschnitt behandelt Unterschiede am Monitoring-Kern und der Übertragung von Monitoring-Daten in verteilten Umgebungen.
Nutzer, die von Nagios-Umgebungen zu {CMK} migrieren, sollten die Dokumentation zum xref:cmc#[{CMK} Micro Core] und den xref:cmc_differences#[Besonderheiten des CMC] aufmerksam lesen, um zu beurteilen, ob es für eine Übergangszeit sinnvoll sein kann, {CMK} mit dem Nagios-Core zu betreiben.

////
cmc.asciidoc			Checkmk Micro Core
cmc_differences.asciidoc	grafische Darstellung der Daten durch die GUI von CMK <- ist PNP4Nagios noch aktuell?
cmc_migration.asciidoc		Alert handler nur in EE
analyze_configuration.asciidoc	Performance/Checkmk Hilfsprozesse <- erst einmal unterschlagen
distributed_monitoring.asciidoc	In EE automatische Synchronisierung von Inventardaten
distributed_monitoring.asciidoc Livestatus-Proxy
distributed_monitoring.asciidoc CMCDump
graphing.asciidoc		RRD-Speicherformat
livestatus.asciidoc		Unterschiedlicher Umfang der Kommandos
livestatus_references.asciidoc	CEE only Kommandos
wato_rules.asciidoc		Smart Ping nur in EE
////

[cols="20,~",options="header"]
|===
|Funktion |Ergänzende Informationen
|CMC | Die {EE} verwenden standardmäßig den xref:cmc#[{CMK} Micro Core], welcher durch Reduzierung auf wesentliche Funktionalität performanter als andere Monitoring-Kerne ist.
| Alert Handler | CMC unterstützt keine _Nagios Event Handler_, bietet dafür aber flexiblere xref:alert_handlers#[Alert Handler].
| Smart Ping | Der xref:cmc_differences#smartping[Smart Ping] gewährleistet eine effizientere und schnellere Erkennung, ob Hosts erreichbar sind.
| CMCDump | Diese Übertragungstechnik xref:distributed_monitoring#livedump[vereinfacht verteiltes Monitoring] in Umgebungen mit unzuverlässiger Netzwerkanbindung, in Umgebungen mit Nagios-Kern steht stattdessen Livedump zur Verfügung.
| Livestatus-Proxy | Der xref:distributed_monitoring#livestatusproxy[Livestatus-Proxy] optimiert im verteilten Monitoring Performance und Latenzen. 
| RRD-Speicherformat | Bei Verwendung des CMC nutzt {CMK} ein auf Einsparung von Disk-I/O xref:cmc_differences#metrics[optimiertes Speicherformat].
|===

[#ui]
=== Monitoring-Oberfläche, Graphing, Dashboards

////
availability.asciidoc		PDF Export
basics_ackn.asciidoc		Expire acknowledgement after
basics_downtimes.asciidoc	Kommandos eine oder mehrere Downtimes entfernen/ändern
basics_downtimes.asciidoc	automatisch periodisch wiederholenden Wartungszeiten
dashboards.asciidoc		Einige der Dashlets gibt es exklusiv in den EE
dashboards.asciidoc		Anderes Default-Dashboard
graphing.asciidoc		PDF-Export, Graphensammlungen, benutzerdefinierte Graphen
graphing.asciidoc		einbetten in Berichte oder Dashboards, Graphensammlung
graphing.asciidoc		Graph Tunings
graphing.asciidoc		Custom Graphs
intro_extend.asciidoc		SLA Software-Modul nur in EE
intro_finetune.asciidoc		Wartungszeiten
intro_finetune.asciidoc		Recurring downtimes
monitoring_basics.asciidoc	Statuswechsel, Verhalten bei Parent/Child wenn UNREACH
monitoring_kubernetes.asciidoc	Kubernetes Dashboards
monitoring_kubernetes.asciidoc	Cluster Dashboards
reporting.asciidoc		Vorgefertigte Berichte
sla.asciidoc			SLA Software-Modul nur in EE
views.asciidoc			This view as PDF
////

[cols="20,~",options="header"]
|===
|Funktion |Ergänzende Informationen
| Default-Dashboard | Die {EE} verwenden ein xref:dashboards#[Übersichts-Dashboard], welches in {RE} nicht verfügbar ist. Diese nutzt stattdessen das Problem-Dashboard.
| Messwerte und Graphing | Erweiterte xref:graphing#[Funktionen des Graphings] stehen ausschließlich den {EE} zur Verfügung. Dazu gehören: Umfang der Dashlets, PDF-Export, Graphensammlungen, Graph Tunings, Custom Graphs, Einbettung in Berichte oder Dashboards und benutzerdefinierte Graphen.
| Kubernetes-Dashboards | Die xref:monitoring_kubernetes#[Kubernetes- und Cluster-Dashboards] sind den {EE} vorbehalten.
| Wartungszeiten und Downtimes | Nur in den {EE} können regelmäßig wiederkehrende xref:intro_finetune#[Wartungszeiten und Downtimes] festgelegt werden.
| Verwaltung von Downtimes | In den {EE} ist über _Kommandos_ eine komfortable xref:intro_finetune#[Änderung oder Entfernung einer oder mehrerer Downtimes] möglich.
| Parent Child Topology | Mit dem CMC kann {CMK} in Umgebungen mit Elter-Kind-Topologie präziser xref:monitoring_basics#parents[den Zustand von Kind Hosts] ermitteln.
| PDF-Export der Verfügbarkeit | In den {EE} können xref:availability#[Verfügbarkeitsdaten] auch als PDF exportiert werden.
| PDF-Export von Views | Der direkte PDF-Export von xref:views#[Ansichten] im Monitoring ist den {EE} vorbehalten.
| Vorgefertigte Berichte | In den {EE} erleichtern xref:reporting#[vorgefertigte Berichte] das Reporting.
| Service Level Agreements | Die nur in den {EE} enthaltenen xref:sla#[Service Level Agreements] erleichtern die Kontrolle von vertraglichen Vereinbarungen betreffend der Verfügbarkeit von Diensten.
| Quittierungen mit Gültigkeitsdauer | Die xref:basics_ackn#[Quittierung von Problemen] kann in den {EE} mit einer maximalen Gültigkeitsdauer versehen werden.
|===

[#notifications]
=== Benachrichtigungen

////
s.o. notifications.asciidoc		Statuswechsel, Verhalten bei Parent/Child wenn UNREACH
notifications.asciidoc		Tuning of flap detection
notifications.asciidoc		Benachrichtigungs-Spooler
notifications.asciidoc		Asynchrone Zustellung durch Benachrichtigungs-Spooler
notifications.asciidoc		nachvollziehbaren Zustellung per SMTP
notifications.asciidoc		Zentrale Benachrichtigungen
s.o. notifications.asciidoc		Alert Handler
distributed_monitoring.asciidoc	Zentrale Benachrichtigungen
////

[cols="20,~",options="header"]
|===
|Funktion |Ergänzende Informationen
| Flap Detection | In den {EE} ist eine xref:notifications#flapping[Feineinstellung der Unstetigkeitserkennung] für Dienste, die längere Zeit um Schwellwerte pendeln, möglich.
| Benachrichtigungs-Spooler | Die {EE} enthalten mit dem xref:notifications#async[Benachrichtigungs-Spooler] eine Komponente, welche die effizientere und flexiblere Zustellung von Benachrichtigungen erlaubt.
| Nachvollziehbare Zustellung| Über xref:notifications#syncsmtp[Smarthost-Einstellungen] kann in den {EE} zuverlässiger sichergestellt werden, dass Benachrichtigungen ankommen als mit einer reinen Übergabe an das lokale Mailsystem der {RE}.
| Zentrale Benachrichtigungen | Im verteilten Monitoring kann der Notification Spooler der {EE} so konfiguriert werden, dass er xref:distributed_monitoring#notifications[Benachrichtigungen von den Remote-Instanzen für alle Ziele] verschickt.
|===

[#agents]
=== Monitoring-Agenten, Verteilung und Registrierung

////
agent_deployment.asciidoc	Bakery
agent_deployment.asciidoc	Agent Updater
agent_linux.asciidoc		Bakery
agent_linux_legacy.asciidoc	Bakery
agent_windows.asciidoc		Bakery
bakery_api.asciidoc		Bakery
cmk_commandline.asciidoc	Bakery
snmp.asciidoc			Eigene SNMP-Engine statt snmpget/snmpbulkwalk
wato_monitoringagents.asciidoc	Unterscheidung Checkmk-Fetcher vs. Nagios
////

[cols="20,~",options="header"]
|===
|Funktion |Ergänzende Informationen
| Agent Bakery | Die {EE} verfügen mit der xref:wato_monitoringagents#bakery[Agenten-Bäckerei] über einen Mechanismus, automatisch individuelle Agentenpakete mit Plugins und Konfigurationsdateien zu erstellen. Einstellungen der Agenten-Konfiguration können mit der xref:bakery_api#[Bakery-API] in der Setup-GUI vorgenommen werden.
| Agenten-Updater | Die xref:agent_deployment#[automatische Aktualisierung] von Agenten-Paketen nach Updates oder Konfigurationsänderungen ist nur in den {EE} möglich.
| SNMP-Monitoring | Dank einer eigenen xref:snmp#[SNMP-Engine] sind die {EE} performanter als die {RE} mit der Nutzung von `snmpget`/`snmpbulkwalk`.
| {CMK}-Fetcher | In den {EE} sorgen die {CMK}-Fetcher für effizientes xref:wato_monitoringagents#[Einholen der Monitoring-Daten].
|===

[#connectors]
=== Anbindungen

////
saml_new.asciidoc		SAML Konfiguration via Setup GUI
grafana.asciidoc		Filterkaskaden
metrics_exporter.asciidoc	Anbindung an externe Metrik-Datenbanken (Influx, Graphite)
graphing.asciidoc		Anbindung an externe Metrik-Datenbanken (Influx, Graphite)
notifications_jira.asciidoc	Nur in EE
notifications_servicenow.asciidoc Nur in EE
////

[cols="20,~",options="header"]
|===
|Funktion |Ergänzende Informationen
// FIXME: Link hinzufügen.
| SAML | Seit {CMK} {v22} können die {EE} nativ gegen SAML authentifizieren, bis {v21} und weiterhin in {RE} ist diese nur auf xref:saml#[Apache-Ebene] möglich.
| Grafana | Das xref:grafana#[Grafana-Plugin] erlaubt bei Nutzung mit den {EE} Filterkaskaden.
| InfluxDB und Graphite | Nur die {EE} liefern eine xref:metrics_exporter#[Schnittstelle zur Anbindung an externe Metrik-Datenbanken] mit.
| JIRA | Das xref:notifications_jira#[Benachrichtigungsmodul für Jira] ist den {EE} vorbehalten.
| ServiceNow | Das xref:notifications_servicenow#[Benachrichtigungsmodul für ServiceNow] ist den {EE} vorbehalten.
|===

[#other]
=== Sonstiges

////
dcd.asciidoc			Nur in EE
monitoring_docker.asciidoc	DCD
monitoring_gcp.asciidoc		DCD
inventory.asciidoc		HW/SW-Inventur in verteilten Umgebungen
mkps.asciidoc			MKPs über die GUI verwalten
predictive_monitoring.asciidoc	Nur in EE
////

[cols="20,~",options="header"]
|===
|Funktion |Ergänzende Informationen
| DCD | Der xref:dcd#[Distributed Configuration Daemon] ermöglicht die automatische Erstellung von Hosts und erleichtert damit das xref:monitoring_docker#[Monitoring von Docker] und der xref:monitoring_gcp#[Google Cloud Platform].
| Verteiltes Inventar | Die automatische Synchronisierung von Inventardaten im xref:distributed_monitoring#[verteilten Monitoring] macht Inventardaten zentral verfügbar.
| MKP-Verwaltung | Die Verwaltung von xref:mkps#[{CMK}-Erweiterungspaketen] ist in der {RE} nur auf der Kommandozeile möglich, in den {EE} zusätzlich über die Setup-GUI.
| Predictive Monitoring | Auf Basis der ermittelten Werte über einen längeren Zeitraum kann in den {EE} ein xref:predictive_monitoring#[Prognosebasiertes Monitoring] mit dynamischen Schwellwerten genutzt werden.
|===
