// -*- coding: utf-8 -*-
include::global_attr.adoc[]


[#registration]
== Registrierung

=== Übersicht und Voraussetzungen

Bei einer Neuinstallation des {CMK} Agenten kann der Host, der ins Monitoring aufgenommen werden soll, noch keine Daten mit dem {CMK} Server austauschen.
Der Grund ist, dass ein gegenseitiges Vertrauensverhältnis fehlt – Vertrauen und Verschlüsselung sind ab {CMK} {v21} Pflicht.
Wie Sie das herstellen, zeigt dieses Kapitel.
Bei einem Update des Agenten ist die Vorgehensweise prinzipiell gleich, auch wenn hier zunächst die unverschlüsselte Kommunikation zwischen {CMK} und dem Host im Monitoring möglich ist.
In diesem Fall zeigt Ihnen der Service [.guihint]#Check_MK Agent# im Zustand {WARN}, dass eine Umstellung auf verschlüsselte Kommunikation angeraten ist.

Die Registrierung und damit die Herstellung des gegenseitigen Vertrauensverhältnisses erfolgt unter einem {CMK} Benutzer mit Zugriff auf die xref:rest_api#[REST-API.]
Dafür bietet sich der xref:glossar#automation_user[Automationsbenutzer] an, der bei jeder {CMK} Installation automatisch angelegt wird und dessen Passwort Sie auswürfeln können.


=== Host ins Monitoring aufnehmen

Erstellen Sie zunächst den neuen Host über [.guihint]#Setup > Hosts > Add host# und nehmen ihn dann durch die xref:glossar#activate_changes[Aktivierung der Änderungen] ins Monitoring auf.

*Hinweis:* In den Eigenschaften des Hosts im Setup finden Sie im Kasten [.guihint]#Monitoring agents# die Option [.guihint]#Checkmk agent connection mode#, die als Auswahl den Pull-Modus und den Push-Modus anbietet.
In der {CMK} Version {v21} wird nur der Pull-Modus unterstützt. Der Push-Modus ist ein Feature der nächsten {CMK} Version für die neue {CMK} Plus Edition (CPE).
Die Auswahlmöglichkeit wird nur deshalb angeboten, um für den Fall eines späteren Upgrades oder Downgrades zwischen den {CMK} Editionen vorbereitet zu sein.

// REMOVE-AFTER-BETA
// MFS: Siehe Ticket CMK-10281: Im Laufe der Betaphase soll die Ausgabe des Registrierungskommandos genügen, diesen Abschnitt überflüssig zu machen.
// MFS: Für die finale Version wird dieser Abschnitt entfernt!

=== Test von Agent-Controller und Systemumgebung

Prüfen Sie nun, ob der Agent Controller gestartet werden kann:

[{shell}]
----
{c-root} cmk-agent-ctl --version
----

Als Ausgabe sollte die Versionsnummer zu sehen sein, beispielsweise:

[{shell}]
----
cmk-agent-ctl 0.1.0
----

In seltenen Fällen erscheint die folgende Fehlermeldung:

[{shell}]
----
bash: /usr/bin/cmk-agent-ctl: cannot execute binary file: Exec format error
----

Ursache hierfür ist, dass Ihr Linux eine andere Rechnerarchitektur als _x86/64_ nutzt, zum Beispiel das ältere _32-Bit x86_ oder _ARM_.
In diesem Fall kann der Agent Controller nicht verwendet werden.
Schließen Sie die Einrichtung wie im Artikel xref:monitoring_linux_legacy#[Linux überwachen im Legacy-Modus] beschrieben, ab.

Im nächsten Schritt gilt es herauszufinden, welches Programm auf Port 6556 auf Anfragen wartet:

[{shell-raw}]
----
{c-root} ss -tulpn | grep 6556
tcp	LISTEN	0	1024	0.0.0.0:6556	0.0.0.0:*	users:(("cmk-agent-ctl",pid=1861810,fd=9))
----

Hier ist es `cmk-agent-ctl`, die Voraussetzungen für verschlüsselte Kommunikation sind erfüllt.
Steht innerhalb der Klammer stattdessen `systemd`, `xinetd` oder `inetd`, sind die Voraussetzungen für die Verwendung des Agent Controllers nicht gegeben.
Schließen Sie auch in diesem Fall die Einrichtung wie im Artikel xref:monitoring_linux_legacy#[Linux überwachen im Legacy-Modus] beschrieben, ab.

=== Host beim Server registrieren

Die Registrierung erfolgt mit dem Agent Controller `cmk-agent-ctl`, der für die Konfiguration der Verbindungen eine Kommandoschnittstelle bietet.
Sie können sich mit dem Kommando `cmk-agent-ctl help` die Hilfe zu den Optionen anzeigen lassen.

Begeben Sie sich nun zum Host, der registriert werden soll.
Hier ist mit `root`-Rechten eine Anfrage an die {CMK} xref:glossar#site[Instanz] zu stellen:

[{shell}]
----
{c-root} cmk-agent-ctl register --hostname mynewhost \
    --server cmkserver --site mysite \
    --user automation --password test23
----

Dabei ist der Host-Name hinter der Option `--hostname` exakt so anzugeben, wie zuvor beim Erstellen im Setup.
Die Optionen `--server` und `--site` geben den Namen des {CMK} Servers und der Instanz an.
Der Server-Name darf auch die IP-Adresse sein, der Instanzname (hier `mysite`) entspricht demjenigen, den Sie im URL-Pfad der Weboberfläche sehen. 
Komplettiert werden die Optionen durch Name und Passwort des Automationsbenutzers.
Wenn Sie die Option `--password` auslassen, wird das Passwort interaktiv abgefragt.

// MFS: In der finalen Version des Agent Controllers wird an dieser Stelle anhand der Ausgabe des Registrierungsversuchs die Entscheidung getroffen werden, ob hier oder im Legacy-Artikel fortzufahren ist.
// MFS: Grob: Erscheint eine Fehlermeldung, wird aus dieser ersichtlich, ob entweder die Credentials falsch waren, oder die Systemumgebung nur den Legacy-Modus unterstützt.

Waren die angegebenen Werte korrekt, werden Sie aufgefordert, die Identität der {CMK} Instanz zu bestätigen, zu der Sie die Verbindung herstellen wollen.
Das zu bestätigende Server-Zertifikat haben wir aus Gründen der Übersichtlichkeit stark verkürzt:

[{shell}]
----
Attempting to register at cmkserver:8000/mysite. Server certificate details:

PEM-encoded certificate:
---BEGIN CERTIFICATE---
MIIC6zCCAdOgAwIBAgIUXbSE8FXQfmFqoRNhG9NpHhlRJ40wDQYJKoZIhvcNAQEL
[...]
nS+9hN5ILfRI+wkdrQLC0vkHVYY8hGIEq+xTpG/Pxw==
---END CERTIFICATE---

Issued by:
	Site 'mysite' local CA
Issued to:
	localhost
Validity:
	From Thu, 10 Feb 2022 15:13:22 +0000
	To   Tue, 13 Jun 3020 15:13:22 +0000

Do you want to establish this connection? [Y/n]
> #Y#
----

Bestätigen Sie mit `Y`, um den Vorgang abzuschließen.

Falls keine Fehlermeldung angezeigt wird, ist die verschlüsselte Verbindung hergestellt.
Über diese Verbindung werden alle Daten komprimiert übertragen.


=== Vertrauensverhältnis überprüfen

Das Kommando `cmk-agent-ctl status` zeigt nun genau ein Vertrauensverhältnis zum {CMK} Server:

[{shell-raw}]
----
{c-root} cmk-agent-ctl status
Connection: 12.34.56.78:8000/mysite
	UUID: d38e7e53-9f0b-4f11-bbcf-d19617971595
	Local:
		Connection type: pull-agent
		Certificate issuer: Site 'mysite' local CA
		Certificate validity: Mon, 21 Feb 2022 11:23:57 +0000 - Sat, 24 Jun 3020 11:23:57 +0000
	Remote:
		Connection type: pull-agent
		Registration state: operational
		Host name: mynewhost
----

// MFS: Eineindeutigkeit ist logische Voraussetzung für Push-Mous, evtl. wird das für Pull noch aufgeweicht. 
*Hinweis:* Es kann stets nur ein Vertrauensverhältnis zwischen Host und Instanz geben.
Wenn Sie beispielsweise den bereits registrierten Host `mynewhost` unter anderem Namen (`mynewhost2`), aber mit der gleichen IP-Adresse registrieren, dann ersetzt die neue Verbindung die bestehende.
Die Verbindung von `mynewhost` zur Instanz wird gelöst und für den Host werden keine Agentendaten mehr für das Monitoring geliefert.

=== Im Auftrag registrieren

Zur leichteren Registrierung mehrerer Hosts kann ein beliebiger Host, auf dem der Agent installiert ist, eine Registrierung im Auftrag anderer durchführen.
Dabei wird eine JSON-Datei exportiert, die dann auf den Ziel-Host übertragen und dort importiert werden kann.
Auch hier gilt wie zuvor: Der im Auftrag registrierte Host muss in der Instanz bereits eingerichtet sein.

Zunächst wird auf einem beliebigen im Monitoring befindlichen Host die Registrierung stellvertretend durchgeführt.
Hier bietet sich natürlich der {CMK} Server an, der in der Regel als erster Host im Monitoring aufgenommen wird.
Wie beim Beispiel oben gilt, dass Sie das Passwort per Option übergeben können oder interaktiv danach gefragt werden, wenn Sie die Option `--password` weglassen.
Die JSON-Ausgabe leiten wir im Beispiel in eine Datei um:

[{shell}]
----
{c-root} cmk-agent-ctl proxy-register \
    --hostname mynewhost3  \
    --server cmkserver --site mysite \
    --user automation > /tmp/mynewhost3.json
----

Nun übertragen wir die Datei `/tmp/mynewhost3.json` auf den Host, für den wir die Registrierung durchgeführt haben, und importieren die Datei:

[{shell}]
----
{c-root} cmk-agent-ctl import /tmp/mynewhost3.json
----

=== Abschluss der Aufnahme ins Monitoring

Sobald die Registrierung fertiggestellt ist, führen Sie im Setup des {CMK}-Servers einen Verbindungstest und eine xref:glossar#service_discovery[Service-Erkennung] durch. 
Anschließend nehmen Sie die gefundenen Services ins Monitoring auf und aktivieren die Änderungen als letzten Schritt.

=== Host deregistrieren

Auf einem Host, der mit dem {CMK} Server verbunden ist, können Sie das Vertrauensverhältnis mit diesem Kommando widerrufen:

[{shell}]
----
{c-root} cmk-agent-ctl delete d38e7e53-9f0b-4f11-bbcf-d19617971595
----

Der anzugebende Universally Unique Identifier (UUID) ist derjenige, der beim Kommando `cmk-agent-ctl status` ausgegeben wird. 

Auf dem {CMK} Server existiert für jede Verbindung eines Hosts, der sich im Monitoring befindet, ein Softlink mit der UUID, welcher auf den Ordner mit der Agentenausgabe zeigt:

[{shell-raw}]
----
{c-omd} cd ~/var/agent-receiver/received-outputs
{c-omd} ls -l d38e7e53-9f0b-4f11-bbcf-d19617971595
lrwxrwxrwx 1 mysite mysite 67 Feb 23 07:18 d38e7e53-9f0b-4f11-bbcf-d19617971595 -> /omd/sites/mysite/tmp/check_mk/data_source_cache/push-agent/mynewhost
----

// REMOVE-AFTER-BETA
Wenn Sie diesen Softlink löschen, ist eine erneute Registrierung des Hosts erforderlich.
// Hier können Sie auch unbenutzte Softlinks löschen, die beispielsweise von mehreren Registrierungen desselben Hosts herrühren.
